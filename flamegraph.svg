<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="854" onload="init(evt)" viewBox="0 0 1200 854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="854" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="837.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="837.00"> </text><svg id="frames" x="10" width="1180" total_samples="31024"><g><title>`0x7FF81735D79A (7 samples, 0.02%)</title><rect x="0.0097%" y="757" width="0.0226%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="7"/><text x="0.2597%" y="767.50"></text></g><g><title>`0x7FF817373730 (7 samples, 0.02%)</title><rect x="0.0097%" y="741" width="0.0226%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="7"/><text x="0.2597%" y="751.50"></text></g><g><title>`0x7FF8173700E3 (7 samples, 0.02%)</title><rect x="0.0097%" y="725" width="0.0226%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="7"/><text x="0.2597%" y="735.50"></text></g><g><title>`0x7FF817370170 (5 samples, 0.02%)</title><rect x="0.0161%" y="709" width="0.0161%" height="15" fill="rgb(248,212,6)" fg:x="5" fg:w="5"/><text x="0.2661%" y="719.50"></text></g><g><title>`0x7FF81732FB53 (5 samples, 0.02%)</title><rect x="0.0322%" y="629" width="0.0161%" height="15" fill="rgb(208,68,35)" fg:x="10" fg:w="5"/><text x="0.2822%" y="639.50"></text></g><g><title>`0x7FF81737021F (5 samples, 0.02%)</title><rect x="0.0322%" y="613" width="0.0161%" height="15" fill="rgb(232,128,0)" fg:x="10" fg:w="5"/><text x="0.2822%" y="623.50"></text></g><g><title>`0x7FF817370F80 (4 samples, 0.01%)</title><rect x="0.0355%" y="597" width="0.0129%" height="15" fill="rgb(207,160,47)" fg:x="11" fg:w="4"/><text x="0.2855%" y="607.50"></text></g><g><title>`0x7FF814FA05A2 (7 samples, 0.02%)</title><rect x="0.0322%" y="725" width="0.0226%" height="15" fill="rgb(228,23,34)" fg:x="10" fg:w="7"/><text x="0.2822%" y="735.50"></text></g><g><title>`0x7FF814FA19C7 (7 samples, 0.02%)</title><rect x="0.0322%" y="709" width="0.0226%" height="15" fill="rgb(218,30,26)" fg:x="10" fg:w="7"/><text x="0.2822%" y="719.50"></text></g><g><title>`0x7FF814F9C050 (7 samples, 0.02%)</title><rect x="0.0322%" y="693" width="0.0226%" height="15" fill="rgb(220,122,19)" fg:x="10" fg:w="7"/><text x="0.2822%" y="703.50"></text></g><g><title>`0x7FF814B24232 (7 samples, 0.02%)</title><rect x="0.0322%" y="677" width="0.0226%" height="15" fill="rgb(250,228,42)" fg:x="10" fg:w="7"/><text x="0.2822%" y="687.50"></text></g><g><title>`0x7FF817326AF4 (7 samples, 0.02%)</title><rect x="0.0322%" y="661" width="0.0226%" height="15" fill="rgb(240,193,28)" fg:x="10" fg:w="7"/><text x="0.2822%" y="671.50"></text></g><g><title>`0x7FF8173273E4 (7 samples, 0.02%)</title><rect x="0.0322%" y="645" width="0.0226%" height="15" fill="rgb(216,20,37)" fg:x="10" fg:w="7"/><text x="0.2822%" y="655.50"></text></g><g><title>`0x7FF814FA045F (8 samples, 0.03%)</title><rect x="0.0322%" y="741" width="0.0258%" height="15" fill="rgb(206,188,39)" fg:x="10" fg:w="8"/><text x="0.2822%" y="751.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::push (6 samples, 0.02%)</title><rect x="0.1193%" y="485" width="0.0193%" height="15" fill="rgb(217,207,13)" fg:x="37" fg:w="6"/><text x="0.3693%" y="495.50"></text></g><g><title>test.exe`alloc::vec::impl$16::into_iter(alloc::vec::Vec (28 samples, 0.09%)</title><rect x="0.0838%" y="533" width="0.0903%" height="15" fill="rgb(231,73,38)" fg:x="26" fg:w="28"/><text x="0.3338%" y="543.50"></text></g><g><title>test.exe`core::mem::manually_drop::ManuallyDrop&lt;alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt; &gt;::new(alloc::vec::Vec (28 samples, 0.09%)</title><rect x="0.0838%" y="517" width="0.0903%" height="15" fill="rgb(225,20,46)" fg:x="26" fg:w="28"/><text x="0.3338%" y="527.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_occupancy (28 samples, 0.09%)</title><rect x="0.0838%" y="501" width="0.0903%" height="15" fill="rgb(210,31,41)" fg:x="26" fg:w="28"/><text x="0.3338%" y="511.50"></text></g><g><title>test.exe`core::iter::range::impl$6::next(core::ops::range::Range (6 samples, 0.02%)</title><rect x="0.1547%" y="485" width="0.0193%" height="15" fill="rgb(221,200,47)" fg:x="48" fg:w="6"/><text x="0.4047%" y="495.50"></text></g><g><title>test.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (6 samples, 0.02%)</title><rect x="0.1547%" y="469" width="0.0193%" height="15" fill="rgb(226,26,5)" fg:x="48" fg:w="6"/><text x="0.4047%" y="479.50"></text></g><g><title>test.exe`core::cmp::impls::impl$58::lt (6 samples, 0.02%)</title><rect x="0.1547%" y="453" width="0.0193%" height="15" fill="rgb(249,33,26)" fg:x="48" fg:w="6"/><text x="0.4047%" y="463.50"></text></g><g><title>test.exe`alloc::sync::Arc&lt;mchess::moves::magic::Magic,alloc::alloc::Global&gt;::new (38 samples, 0.12%)</title><rect x="0.0612%" y="581" width="0.1225%" height="15" fill="rgb(235,183,28)" fg:x="19" fg:w="38"/><text x="0.3112%" y="591.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::new (38 samples, 0.12%)</title><rect x="0.0612%" y="565" width="0.1225%" height="15" fill="rgb(221,5,38)" fg:x="19" fg:w="38"/><text x="0.3112%" y="575.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::gen_rook_attacks (36 samples, 0.12%)</title><rect x="0.0677%" y="549" width="0.1160%" height="15" fill="rgb(247,18,42)" fg:x="21" fg:w="36"/><text x="0.3177%" y="559.50"></text></g><g><title>test.exe`core::ptr::drop_in_place(alloc::vec::Vec (9 samples, 0.03%)</title><rect x="0.2256%" y="453" width="0.0290%" height="15" fill="rgb(241,131,45)" fg:x="70" fg:w="9"/><text x="0.4756%" y="463.50"></text></g><g><title>test.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (9 samples, 0.03%)</title><rect x="0.2256%" y="437" width="0.0290%" height="15" fill="rgb(249,31,29)" fg:x="70" fg:w="9"/><text x="0.4756%" y="447.50"></text></g><g><title>test.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (9 samples, 0.03%)</title><rect x="0.2256%" y="421" width="0.0290%" height="15" fill="rgb(225,111,53)" fg:x="70" fg:w="9"/><text x="0.4756%" y="431.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (9 samples, 0.03%)</title><rect x="0.2256%" y="405" width="0.0290%" height="15" fill="rgb(238,160,17)" fg:x="70" fg:w="9"/><text x="0.4756%" y="415.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (6 samples, 0.02%)</title><rect x="0.2353%" y="389" width="0.0193%" height="15" fill="rgb(214,148,48)" fg:x="73" fg:w="6"/><text x="0.4853%" y="399.50"></text></g><g><title>test.exe`mchess::search::Search::sort_moves(alloc::vec::Vec (6 samples, 0.02%)</title><rect x="0.2353%" y="373" width="0.0193%" height="15" fill="rgb(232,36,49)" fg:x="73" fg:w="6"/><text x="0.4853%" y="383.50"></text></g><g><title>test.exe`mchess::search::Search::evaluate_move (4 samples, 0.01%)</title><rect x="0.2417%" y="357" width="0.0129%" height="15" fill="rgb(209,103,24)" fg:x="75" fg:w="4"/><text x="0.4917%" y="367.50"></text></g><g><title>test.exe`mchess::board::Board::get_legal_moves (7 samples, 0.02%)</title><rect x="0.2546%" y="453" width="0.0226%" height="15" fill="rgb(229,88,8)" fg:x="79" fg:w="7"/><text x="0.5046%" y="463.50"></text></g><g><title>test.exe`mchess::board::Board::get_pseudo_legal_moves (7 samples, 0.02%)</title><rect x="0.2546%" y="437" width="0.0226%" height="15" fill="rgb(213,181,19)" fg:x="79" fg:w="7"/><text x="0.5046%" y="447.50"></text></g><g><title>`0x7FF8173347B1 (5 samples, 0.02%)</title><rect x="0.2998%" y="421" width="0.0161%" height="15" fill="rgb(254,191,54)" fg:x="93" fg:w="5"/><text x="0.5498%" y="431.50"></text></g><g><title>`0x7FF817331BF2 (7 samples, 0.02%)</title><rect x="0.3578%" y="149" width="0.0226%" height="15" fill="rgb(241,83,37)" fg:x="111" fg:w="7"/><text x="0.6078%" y="159.50"></text></g><g><title>`0x7FF81733B3C7 (6 samples, 0.02%)</title><rect x="0.3610%" y="133" width="0.0193%" height="15" fill="rgb(233,36,39)" fg:x="112" fg:w="6"/><text x="0.6110%" y="143.50"></text></g><g><title>test.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (17 samples, 0.05%)</title><rect x="0.3352%" y="229" width="0.0548%" height="15" fill="rgb(226,3,54)" fg:x="104" fg:w="17"/><text x="0.5852%" y="239.50"></text></g><g><title>test.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (17 samples, 0.05%)</title><rect x="0.3352%" y="213" width="0.0548%" height="15" fill="rgb(245,192,40)" fg:x="104" fg:w="17"/><text x="0.5852%" y="223.50"></text></g><g><title>test.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (17 samples, 0.05%)</title><rect x="0.3352%" y="197" width="0.0548%" height="15" fill="rgb(238,167,29)" fg:x="104" fg:w="17"/><text x="0.5852%" y="207.50"></text></g><g><title>`0x7FF8173336BD (16 samples, 0.05%)</title><rect x="0.3384%" y="181" width="0.0516%" height="15" fill="rgb(232,182,51)" fg:x="105" fg:w="16"/><text x="0.5884%" y="191.50"></text></g><g><title>`0x7FF8173338E3 (13 samples, 0.04%)</title><rect x="0.3481%" y="165" width="0.0419%" height="15" fill="rgb(231,60,39)" fg:x="108" fg:w="13"/><text x="0.5981%" y="175.50"></text></g><g><title>test.exe`alloc::vec::impl$19::extend(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc::vec::Vec (21 samples, 0.07%)</title><rect x="0.3256%" y="421" width="0.0677%" height="15" fill="rgb(208,69,12)" fg:x="101" fg:w="21"/><text x="0.5756%" y="431.50"></text></g><g><title>test.exe`alloc::vec::spec_extend::impl$2::spec_extend(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc::vec::into_iter::IntoIter (21 samples, 0.07%)</title><rect x="0.3256%" y="405" width="0.0677%" height="15" fill="rgb(235,93,37)" fg:x="101" fg:w="21"/><text x="0.5756%" y="415.50"></text></g><g><title>test.exe`alloc::vec::into_iter::IntoIter&lt;u32,alloc::alloc::Global&gt;::as_slice (20 samples, 0.06%)</title><rect x="0.3288%" y="389" width="0.0645%" height="15" fill="rgb(213,116,39)" fg:x="102" fg:w="20"/><text x="0.5788%" y="399.50"></text></g><g><title>test.exe`core::iter::traits::exact_size::ExactSizeIterator::len(alloc::vec::into_iter::IntoIter (20 samples, 0.06%)</title><rect x="0.3288%" y="373" width="0.0645%" height="15" fill="rgb(222,207,29)" fg:x="102" fg:w="20"/><text x="0.5788%" y="383.50"></text></g><g><title>test.exe`alloc::vec::into_iter::impl$5::size_hint(alloc::vec::into_iter::IntoIter (20 samples, 0.06%)</title><rect x="0.3288%" y="357" width="0.0645%" height="15" fill="rgb(206,96,30)" fg:x="102" fg:w="20"/><text x="0.5788%" y="367.50"></text></g><g><title>test.exe`core::ptr::non_null::NonNull&lt;u32&gt;::offset_from_unsigned(core::ptr::non_null::NonNull&lt;u32&gt;, core::ptr::non_null::NonNull (20 samples, 0.06%)</title><rect x="0.3288%" y="341" width="0.0645%" height="15" fill="rgb(218,138,4)" fg:x="102" fg:w="20"/><text x="0.5788%" y="351.50"></text></g><g><title>test.exe`core::ptr::mut_ptr::impl$0::offset_from_unsigned (20 samples, 0.06%)</title><rect x="0.3288%" y="325" width="0.0645%" height="15" fill="rgb(250,191,14)" fg:x="102" fg:w="20"/><text x="0.5788%" y="335.50"></text></g><g><title>test.exe`core::ptr::const_ptr::impl$0::offset_from_unsigned (20 samples, 0.06%)</title><rect x="0.3288%" y="309" width="0.0645%" height="15" fill="rgb(239,60,40)" fg:x="102" fg:w="20"/><text x="0.5788%" y="319.50"></text></g><g><title>test.exe`alloc::raw_vec::impl$4::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (20 samples, 0.06%)</title><rect x="0.3288%" y="293" width="0.0645%" height="15" fill="rgb(206,27,48)" fg:x="102" fg:w="20"/><text x="0.5788%" y="303.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (19 samples, 0.06%)</title><rect x="0.3320%" y="277" width="0.0612%" height="15" fill="rgb(225,35,8)" fg:x="103" fg:w="19"/><text x="0.5820%" y="287.50"></text></g><g><title>test.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (18 samples, 0.06%)</title><rect x="0.3352%" y="261" width="0.0580%" height="15" fill="rgb(250,213,24)" fg:x="104" fg:w="18"/><text x="0.5852%" y="271.50"></text></g><g><title>test.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (18 samples, 0.06%)</title><rect x="0.3352%" y="245" width="0.0580%" height="15" fill="rgb(247,123,22)" fg:x="104" fg:w="18"/><text x="0.5852%" y="255.50"></text></g><g><title>`0x7FF8173347B1 (8 samples, 0.03%)</title><rect x="0.3965%" y="341" width="0.0258%" height="15" fill="rgb(231,138,38)" fg:x="123" fg:w="8"/><text x="0.6465%" y="351.50"></text></g><g><title>test.exe`alloc::alloc::dealloc (5 samples, 0.02%)</title><rect x="0.4223%" y="341" width="0.0161%" height="15" fill="rgb(231,145,46)" fg:x="131" fg:w="5"/><text x="0.6723%" y="351.50"></text></g><g><title>test.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (15 samples, 0.05%)</title><rect x="0.3965%" y="357" width="0.0483%" height="15" fill="rgb(251,118,11)" fg:x="123" fg:w="15"/><text x="0.6465%" y="367.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::bidirectional_merge(ref$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (4 samples, 0.01%)</title><rect x="0.4642%" y="245" width="0.0129%" height="15" fill="rgb(217,147,25)" fg:x="144" fg:w="4"/><text x="0.7142%" y="255.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::insert_tail(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (5 samples, 0.02%)</title><rect x="0.4771%" y="245" width="0.0161%" height="15" fill="rgb(247,81,37)" fg:x="148" fg:w="5"/><text x="0.7271%" y="255.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::small_sort_general&lt;tuple$&lt;u32,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (11 samples, 0.04%)</title><rect x="0.4642%" y="277" width="0.0355%" height="15" fill="rgb(209,12,38)" fg:x="144" fg:w="11"/><text x="0.7142%" y="287.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::small_sort_general_with_scratch(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;tuple$&lt;u32,f64&gt; &gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (11 samples, 0.04%)</title><rect x="0.4642%" y="261" width="0.0355%" height="15" fill="rgb(227,1,9)" fg:x="144" fg:w="11"/><text x="0.7142%" y="271.50"></text></g><g><title>test.exe`core::slice::impl$0::sort_unstable_by(ref_mut$&lt;slice2$&lt;tuple$ (14 samples, 0.05%)</title><rect x="0.4577%" y="325" width="0.0451%" height="15" fill="rgb(248,47,43)" fg:x="142" fg:w="14"/><text x="0.7077%" y="335.50"></text></g><g><title>test.exe`core::slice::sort::unstable::sort(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (14 samples, 0.05%)</title><rect x="0.4577%" y="309" width="0.0451%" height="15" fill="rgb(221,10,30)" fg:x="142" fg:w="14"/><text x="0.7077%" y="319.50"></text></g><g><title>test.exe`core::slice::sort::unstable::ipnsort&lt;tuple$&lt;u32,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (14 samples, 0.05%)</title><rect x="0.4577%" y="293" width="0.0451%" height="15" fill="rgb(210,229,1)" fg:x="142" fg:w="14"/><text x="0.7077%" y="303.50"></text></g><g><title>test.exe`mchess::evaluation::evaluate_position (7 samples, 0.02%)</title><rect x="0.5093%" y="293" width="0.0226%" height="15" fill="rgb(222,148,37)" fg:x="158" fg:w="7"/><text x="0.7593%" y="303.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (6 samples, 0.02%)</title><rect x="0.5512%" y="213" width="0.0193%" height="15" fill="rgb(234,67,33)" fg:x="171" fg:w="6"/><text x="0.8012%" y="223.50"></text></g><g><title>test.exe`mchess::moves::helper::get_piece_type (13 samples, 0.04%)</title><rect x="0.5318%" y="293" width="0.0419%" height="15" fill="rgb(247,98,35)" fg:x="165" fg:w="13"/><text x="0.7818%" y="303.50"></text></g><g><title>test.exe`mchess::search::order::mvv_lva (12 samples, 0.04%)</title><rect x="0.5351%" y="277" width="0.0387%" height="15" fill="rgb(247,138,52)" fg:x="166" fg:w="12"/><text x="0.7851%" y="287.50"></text></g><g><title>test.exe`mchess::moves::helper::is_capture (7 samples, 0.02%)</title><rect x="0.5512%" y="261" width="0.0226%" height="15" fill="rgb(213,79,30)" fg:x="171" fg:w="7"/><text x="0.8012%" y="271.50"></text></g><g><title>test.exe`mchess::moves::helper::get_move_type (7 samples, 0.02%)</title><rect x="0.5512%" y="245" width="0.0226%" height="15" fill="rgb(246,177,23)" fg:x="171" fg:w="7"/><text x="0.8012%" y="255.50"></text></g><g><title>test.exe`mchess::moves::helper::get_captured (7 samples, 0.02%)</title><rect x="0.5512%" y="229" width="0.0226%" height="15" fill="rgb(230,62,27)" fg:x="171" fg:w="7"/><text x="0.8012%" y="239.50"></text></g><g><title>test.exe`core::ptr::drop_in_place(alloc::vec::Vec (56 samples, 0.18%)</title><rect x="0.3965%" y="421" width="0.1805%" height="15" fill="rgb(216,154,8)" fg:x="123" fg:w="56"/><text x="0.6465%" y="431.50"></text></g><g><title>test.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (56 samples, 0.18%)</title><rect x="0.3965%" y="405" width="0.1805%" height="15" fill="rgb(244,35,45)" fg:x="123" fg:w="56"/><text x="0.6465%" y="415.50"></text></g><g><title>test.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (56 samples, 0.18%)</title><rect x="0.3965%" y="389" width="0.1805%" height="15" fill="rgb(251,115,12)" fg:x="123" fg:w="56"/><text x="0.6465%" y="399.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (56 samples, 0.18%)</title><rect x="0.3965%" y="373" width="0.1805%" height="15" fill="rgb(240,54,50)" fg:x="123" fg:w="56"/><text x="0.6465%" y="383.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (41 samples, 0.13%)</title><rect x="0.4448%" y="357" width="0.1322%" height="15" fill="rgb(233,84,52)" fg:x="138" fg:w="41"/><text x="0.6948%" y="367.50"></text></g><g><title>test.exe`mchess::search::Search::sort_moves(alloc::vec::Vec (41 samples, 0.13%)</title><rect x="0.4448%" y="341" width="0.1322%" height="15" fill="rgb(207,117,47)" fg:x="138" fg:w="41"/><text x="0.6948%" y="351.50"></text></g><g><title>test.exe`mchess::search::Search::evaluate_move (23 samples, 0.07%)</title><rect x="0.5028%" y="325" width="0.0741%" height="15" fill="rgb(249,43,39)" fg:x="156" fg:w="23"/><text x="0.7528%" y="335.50"></text></g><g><title>test.exe`mchess::search::order::ps_table (21 samples, 0.07%)</title><rect x="0.5093%" y="309" width="0.0677%" height="15" fill="rgb(209,38,44)" fg:x="158" fg:w="21"/><text x="0.7593%" y="319.50"></text></g><g><title>test.exe`mchess::board::Board::get_pin (7 samples, 0.02%)</title><rect x="0.5834%" y="309" width="0.0226%" height="15" fill="rgb(236,212,23)" fg:x="181" fg:w="7"/><text x="0.8334%" y="319.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain (11 samples, 0.04%)</title><rect x="0.5770%" y="389" width="0.0355%" height="15" fill="rgb(242,79,21)" fg:x="179" fg:w="11"/><text x="0.8270%" y="399.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain_mut(alloc::vec::impl$1::retain::closure_env$0 (11 samples, 0.04%)</title><rect x="0.5770%" y="373" width="0.0355%" height="15" fill="rgb(211,96,35)" fg:x="179" fg:w="11"/><text x="0.8270%" y="383.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain_mut::process_loop(unsigned long long, alloc::vec::impl$1::retain::closure_env$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$3&gt;*, alloc::vec::impl$1::retain_mut::BackshiftOnDrop (11 samples, 0.04%)</title><rect x="0.5770%" y="357" width="0.0355%" height="15" fill="rgb(253,215,40)" fg:x="179" fg:w="11"/><text x="0.8270%" y="367.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain::closure$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$3&gt;(alloc::vec::impl$1::retain::closure_env$0 (11 samples, 0.04%)</title><rect x="0.5770%" y="341" width="0.0355%" height="15" fill="rgb(211,81,21)" fg:x="179" fg:w="11"/><text x="0.8270%" y="351.50"></text></g><g><title>test.exe`mchess::moves::legal::impl$0::filter_legal_moves::closure$3 (9 samples, 0.03%)</title><rect x="0.5834%" y="325" width="0.0290%" height="15" fill="rgb(208,190,38)" fg:x="181" fg:w="9"/><text x="0.8334%" y="335.50"></text></g><g><title>test.exe`mchess::board::Board::filter_legal_moves(alloc::vec::Vec (13 samples, 0.04%)</title><rect x="0.5770%" y="405" width="0.0419%" height="15" fill="rgb(235,213,38)" fg:x="179" fg:w="13"/><text x="0.8270%" y="415.50"></text></g><g><title>test.exe`mchess::board::Board::get_legal_moves (24 samples, 0.08%)</title><rect x="0.5770%" y="421" width="0.0774%" height="15" fill="rgb(237,122,38)" fg:x="179" fg:w="24"/><text x="0.8270%" y="431.50"></text></g><g><title>test.exe`mchess::board::Board::get_pseudo_legal_moves (11 samples, 0.04%)</title><rect x="0.6189%" y="405" width="0.0355%" height="15" fill="rgb(244,218,35)" fg:x="192" fg:w="11"/><text x="0.8689%" y="415.50"></text></g><g><title>test.exe`mchess::board::Board::add_pawn_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (5 samples, 0.02%)</title><rect x="0.6382%" y="389" width="0.0161%" height="15" fill="rgb(240,68,47)" fg:x="198" fg:w="5"/><text x="0.8882%" y="399.50"></text></g><g><title>test.exe`mchess::board::Board::make_move (15 samples, 0.05%)</title><rect x="0.6543%" y="421" width="0.0483%" height="15" fill="rgb(210,16,53)" fg:x="203" fg:w="15"/><text x="0.9043%" y="431.50"></text></g><g><title>`0x7FF817335B74 (8 samples, 0.03%)</title><rect x="0.7768%" y="373" width="0.0258%" height="15" fill="rgb(235,124,12)" fg:x="241" fg:w="8"/><text x="1.0268%" y="383.50"></text></g><g><title>`0x7FF817335BA1 (5 samples, 0.02%)</title><rect x="0.8026%" y="373" width="0.0161%" height="15" fill="rgb(224,169,11)" fg:x="249" fg:w="5"/><text x="1.0526%" y="383.50"></text></g><g><title>`0x7FF8173B74E8 (6 samples, 0.02%)</title><rect x="0.8413%" y="373" width="0.0193%" height="15" fill="rgb(250,166,2)" fg:x="261" fg:w="6"/><text x="1.0913%" y="383.50"></text></g><g><title>`0x7FF8173B75BA (5 samples, 0.02%)</title><rect x="0.8896%" y="373" width="0.0161%" height="15" fill="rgb(242,216,29)" fg:x="276" fg:w="5"/><text x="1.1396%" y="383.50"></text></g><g><title>`0x7FF8173347B1 (47 samples, 0.15%)</title><rect x="0.7607%" y="389" width="0.1515%" height="15" fill="rgb(230,116,27)" fg:x="236" fg:w="47"/><text x="1.0107%" y="399.50"></text></g><g><title>`0x7FF81733B3C7 (14 samples, 0.05%)</title><rect x="0.9348%" y="373" width="0.0451%" height="15" fill="rgb(228,99,48)" fg:x="290" fg:w="14"/><text x="1.1848%" y="383.50"></text></g><g><title>test.exe`alloc::alloc::exchange_malloc (27 samples, 0.09%)</title><rect x="0.9154%" y="389" width="0.0870%" height="15" fill="rgb(253,11,6)" fg:x="284" fg:w="27"/><text x="1.1654%" y="399.50"></text></g><g><title>`0x7FF8173319E7 (4 samples, 0.01%)</title><rect x="1.0669%" y="117" width="0.0129%" height="15" fill="rgb(247,143,39)" fg:x="331" fg:w="4"/><text x="1.3169%" y="127.50"></text></g><g><title>`0x7FF817331BF2 (25 samples, 0.08%)</title><rect x="1.0959%" y="117" width="0.0806%" height="15" fill="rgb(236,97,10)" fg:x="340" fg:w="25"/><text x="1.3459%" y="127.50"></text></g><g><title>`0x7FF81733B3C7 (16 samples, 0.05%)</title><rect x="1.1249%" y="101" width="0.0516%" height="15" fill="rgb(233,208,19)" fg:x="349" fg:w="16"/><text x="1.3749%" y="111.50"></text></g><g><title>`0x7FF81733B8A4 (5 samples, 0.02%)</title><rect x="1.1604%" y="85" width="0.0161%" height="15" fill="rgb(216,164,2)" fg:x="360" fg:w="5"/><text x="1.4104%" y="95.50"></text></g><g><title>`0x7FF8173B75BA (5 samples, 0.02%)</title><rect x="1.2216%" y="85" width="0.0161%" height="15" fill="rgb(220,129,5)" fg:x="379" fg:w="5"/><text x="1.4716%" y="95.50"></text></g><g><title>`0x7FF8173338E3 (54 samples, 0.17%)</title><rect x="1.0669%" y="133" width="0.1741%" height="15" fill="rgb(242,17,10)" fg:x="331" fg:w="54"/><text x="1.3169%" y="143.50"></text></g><g><title>`0x7FF817331C4F (17 samples, 0.05%)</title><rect x="1.1862%" y="117" width="0.0548%" height="15" fill="rgb(242,107,0)" fg:x="368" fg:w="17"/><text x="1.4362%" y="127.50"></text></g><g><title>`0x7FF8173347B1 (17 samples, 0.05%)</title><rect x="1.1862%" y="101" width="0.0548%" height="15" fill="rgb(251,28,31)" fg:x="368" fg:w="17"/><text x="1.4362%" y="111.50"></text></g><g><title>`0x7FF8173336BD (68 samples, 0.22%)</title><rect x="1.0315%" y="149" width="0.2192%" height="15" fill="rgb(233,223,10)" fg:x="320" fg:w="68"/><text x="1.2815%" y="159.50"></text></g><g><title>test.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (69 samples, 0.22%)</title><rect x="1.0315%" y="197" width="0.2224%" height="15" fill="rgb(215,21,27)" fg:x="320" fg:w="69"/><text x="1.2815%" y="207.50"></text></g><g><title>test.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (69 samples, 0.22%)</title><rect x="1.0315%" y="181" width="0.2224%" height="15" fill="rgb(232,23,21)" fg:x="320" fg:w="69"/><text x="1.2815%" y="191.50"></text></g><g><title>test.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (69 samples, 0.22%)</title><rect x="1.0315%" y="165" width="0.2224%" height="15" fill="rgb(244,5,23)" fg:x="320" fg:w="69"/><text x="1.2815%" y="175.50"></text></g><g><title>test.exe`alloc::vec::impl$19::extend(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc::vec::Vec (77 samples, 0.25%)</title><rect x="1.0089%" y="389" width="0.2482%" height="15" fill="rgb(226,81,46)" fg:x="313" fg:w="77"/><text x="1.2589%" y="399.50"></text></g><g><title>test.exe`alloc::vec::spec_extend::impl$2::spec_extend(alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;*, alloc::vec::into_iter::IntoIter (77 samples, 0.25%)</title><rect x="1.0089%" y="373" width="0.2482%" height="15" fill="rgb(247,70,30)" fg:x="313" fg:w="77"/><text x="1.2589%" y="383.50"></text></g><g><title>test.exe`alloc::vec::into_iter::IntoIter&lt;u32,alloc::alloc::Global&gt;::as_slice (75 samples, 0.24%)</title><rect x="1.0153%" y="357" width="0.2417%" height="15" fill="rgb(212,68,19)" fg:x="315" fg:w="75"/><text x="1.2653%" y="367.50"></text></g><g><title>test.exe`core::iter::traits::exact_size::ExactSizeIterator::len(alloc::vec::into_iter::IntoIter (75 samples, 0.24%)</title><rect x="1.0153%" y="341" width="0.2417%" height="15" fill="rgb(240,187,13)" fg:x="315" fg:w="75"/><text x="1.2653%" y="351.50"></text></g><g><title>test.exe`alloc::vec::into_iter::impl$5::size_hint(alloc::vec::into_iter::IntoIter (75 samples, 0.24%)</title><rect x="1.0153%" y="325" width="0.2417%" height="15" fill="rgb(223,113,26)" fg:x="315" fg:w="75"/><text x="1.2653%" y="335.50"></text></g><g><title>test.exe`core::ptr::non_null::NonNull&lt;u32&gt;::offset_from_unsigned(core::ptr::non_null::NonNull&lt;u32&gt;, core::ptr::non_null::NonNull (75 samples, 0.24%)</title><rect x="1.0153%" y="309" width="0.2417%" height="15" fill="rgb(206,192,2)" fg:x="315" fg:w="75"/><text x="1.2653%" y="319.50"></text></g><g><title>test.exe`core::ptr::mut_ptr::impl$0::offset_from_unsigned (75 samples, 0.24%)</title><rect x="1.0153%" y="293" width="0.2417%" height="15" fill="rgb(241,108,4)" fg:x="315" fg:w="75"/><text x="1.2653%" y="303.50"></text></g><g><title>test.exe`core::ptr::const_ptr::impl$0::offset_from_unsigned (75 samples, 0.24%)</title><rect x="1.0153%" y="277" width="0.2417%" height="15" fill="rgb(247,173,49)" fg:x="315" fg:w="75"/><text x="1.2653%" y="287.50"></text></g><g><title>test.exe`alloc::raw_vec::impl$4::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (75 samples, 0.24%)</title><rect x="1.0153%" y="261" width="0.2417%" height="15" fill="rgb(224,114,35)" fg:x="315" fg:w="75"/><text x="1.2653%" y="271.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (75 samples, 0.24%)</title><rect x="1.0153%" y="245" width="0.2417%" height="15" fill="rgb(245,159,27)" fg:x="315" fg:w="75"/><text x="1.2653%" y="255.50"></text></g><g><title>test.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (72 samples, 0.23%)</title><rect x="1.0250%" y="229" width="0.2321%" height="15" fill="rgb(245,172,44)" fg:x="318" fg:w="72"/><text x="1.2750%" y="239.50"></text></g><g><title>test.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (71 samples, 0.23%)</title><rect x="1.0282%" y="213" width="0.2289%" height="15" fill="rgb(236,23,11)" fg:x="319" fg:w="71"/><text x="1.2782%" y="223.50"></text></g><g><title>test.exe`core::f64::impl$0::min (4 samples, 0.01%)</title><rect x="1.2603%" y="389" width="0.0129%" height="15" fill="rgb(205,117,38)" fg:x="391" fg:w="4"/><text x="1.5103%" y="399.50"></text></g><g><title>`0x7FF8173B75BA (11 samples, 0.04%)</title><rect x="1.3183%" y="293" width="0.0355%" height="15" fill="rgb(237,72,25)" fg:x="409" fg:w="11"/><text x="1.5683%" y="303.50"></text></g><g><title>`0x7FF8173347B1 (27 samples, 0.09%)</title><rect x="1.2797%" y="309" width="0.0870%" height="15" fill="rgb(244,70,9)" fg:x="397" fg:w="27"/><text x="1.5297%" y="319.50"></text></g><g><title>`0x7FF8173347B1 (9 samples, 0.03%)</title><rect x="1.3764%" y="293" width="0.0290%" height="15" fill="rgb(217,125,39)" fg:x="427" fg:w="9"/><text x="1.6264%" y="303.50"></text></g><g><title>test.exe`alloc::alloc::dealloc (11 samples, 0.04%)</title><rect x="1.3764%" y="309" width="0.0355%" height="15" fill="rgb(235,36,10)" fg:x="427" fg:w="11"/><text x="1.6264%" y="319.50"></text></g><g><title>test.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (47 samples, 0.15%)</title><rect x="1.2732%" y="325" width="0.1515%" height="15" fill="rgb(251,123,47)" fg:x="395" fg:w="47"/><text x="1.5232%" y="335.50"></text></g><g><title>test.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (4 samples, 0.01%)</title><rect x="1.4118%" y="309" width="0.0129%" height="15" fill="rgb(221,13,13)" fg:x="438" fg:w="4"/><text x="1.6618%" y="319.50"></text></g><g><title>test.exe`std::sys::alloc::windows::impl$0::dealloc (4 samples, 0.01%)</title><rect x="1.4118%" y="293" width="0.0129%" height="15" fill="rgb(238,131,9)" fg:x="438" fg:w="4"/><text x="1.6618%" y="303.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;tuple$&lt;u32,f64&gt;,alloc::alloc::Global&gt;::as_mut_ptr (9 samples, 0.03%)</title><rect x="1.4569%" y="277" width="0.0290%" height="15" fill="rgb(211,50,8)" fg:x="452" fg:w="9"/><text x="1.7069%" y="287.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;u32,f64&gt;,alloc::alloc::Global&gt;::ptr (9 samples, 0.03%)</title><rect x="1.4569%" y="261" width="0.0290%" height="15" fill="rgb(245,182,24)" fg:x="452" fg:w="9"/><text x="1.7069%" y="271.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (9 samples, 0.03%)</title><rect x="1.4569%" y="245" width="0.0290%" height="15" fill="rgb(242,14,37)" fg:x="452" fg:w="9"/><text x="1.7069%" y="255.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (9 samples, 0.03%)</title><rect x="1.4569%" y="229" width="0.0290%" height="15" fill="rgb(246,228,12)" fg:x="452" fg:w="9"/><text x="1.7069%" y="239.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;tuple$&lt;u32,f64&gt;,alloc::alloc::Global&gt;::push(tuple$ (21 samples, 0.07%)</title><rect x="1.4279%" y="293" width="0.0677%" height="15" fill="rgb(213,55,15)" fg:x="443" fg:w="21"/><text x="1.6779%" y="303.50"></text></g><g><title>`0x7FF81733B86B (6 samples, 0.02%)</title><rect x="1.5536%" y="165" width="0.0193%" height="15" fill="rgb(209,9,3)" fg:x="482" fg:w="6"/><text x="1.8036%" y="175.50"></text></g><g><title>`0x7FF81733B3C7 (15 samples, 0.05%)</title><rect x="1.5311%" y="181" width="0.0483%" height="15" fill="rgb(230,59,30)" fg:x="475" fg:w="15"/><text x="1.7811%" y="191.50"></text></g><g><title>`0x7FF81733B44D (6 samples, 0.02%)</title><rect x="1.5826%" y="181" width="0.0193%" height="15" fill="rgb(209,121,21)" fg:x="491" fg:w="6"/><text x="1.8326%" y="191.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;tuple$&lt;u32,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (29 samples, 0.09%)</title><rect x="1.5182%" y="245" width="0.0935%" height="15" fill="rgb(220,109,13)" fg:x="471" fg:w="29"/><text x="1.7682%" y="255.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;u32,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (29 samples, 0.09%)</title><rect x="1.5182%" y="229" width="0.0935%" height="15" fill="rgb(232,18,1)" fg:x="471" fg:w="29"/><text x="1.7682%" y="239.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (29 samples, 0.09%)</title><rect x="1.5182%" y="213" width="0.0935%" height="15" fill="rgb(215,41,42)" fg:x="471" fg:w="29"/><text x="1.7682%" y="223.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (29 samples, 0.09%)</title><rect x="1.5182%" y="197" width="0.0935%" height="15" fill="rgb(224,123,36)" fg:x="471" fg:w="29"/><text x="1.7682%" y="207.50"></text></g><g><title>test.exe`alloc::vec::impl$11::clone(alloc::vec::Vec&lt;tuple$ (37 samples, 0.12%)</title><rect x="1.4956%" y="293" width="0.1193%" height="15" fill="rgb(240,125,3)" fg:x="464" fg:w="37"/><text x="1.7456%" y="303.50"></text></g><g><title>test.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;tuple$ (37 samples, 0.12%)</title><rect x="1.4956%" y="277" width="0.1193%" height="15" fill="rgb(205,98,50)" fg:x="464" fg:w="37"/><text x="1.7456%" y="287.50"></text></g><g><title>test.exe`alloc::slice::impl$0::to_vec_in::impl$1::to_vec(ref$&lt;slice2$&lt;tuple$ (37 samples, 0.12%)</title><rect x="1.4956%" y="261" width="0.1193%" height="15" fill="rgb(205,185,37)" fg:x="464" fg:w="37"/><text x="1.7456%" y="271.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::insertion_sort_shift_left&lt;tuple$&lt;u32,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, unsigned long long, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (6 samples, 0.02%)</title><rect x="1.6149%" y="261" width="0.0193%" height="15" fill="rgb(238,207,15)" fg:x="501" fg:w="6"/><text x="1.8649%" y="271.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::insert_tail(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (5 samples, 0.02%)</title><rect x="1.6181%" y="245" width="0.0161%" height="15" fill="rgb(213,199,42)" fg:x="502" fg:w="5"/><text x="1.8681%" y="255.50"></text></g><g><title>test.exe`core::ptr::mut_ptr::impl$0::add(tuple$ (12 samples, 0.04%)</title><rect x="1.6697%" y="213" width="0.0387%" height="15" fill="rgb(235,201,11)" fg:x="518" fg:w="12"/><text x="1.9197%" y="223.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::sort8_stable&lt;tuple$&lt;u32,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt; &gt;(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (9 samples, 0.03%)</title><rect x="1.6793%" y="197" width="0.0290%" height="15" fill="rgb(207,46,11)" fg:x="521" fg:w="9"/><text x="1.9293%" y="207.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::sort4_stable(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (5 samples, 0.02%)</title><rect x="1.6922%" y="181" width="0.0161%" height="15" fill="rgb(241,35,35)" fg:x="525" fg:w="5"/><text x="1.9422%" y="191.50"></text></g><g><title>test.exe`core::intrinsics::copy_nonoverlapping(tuple$&lt;u32,f64&gt;*, tuple$ (5 samples, 0.02%)</title><rect x="1.7503%" y="181" width="0.0161%" height="15" fill="rgb(243,32,47)" fg:x="543" fg:w="5"/><text x="2.0003%" y="191.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::merge_down(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (14 samples, 0.05%)</title><rect x="1.7374%" y="197" width="0.0451%" height="15" fill="rgb(247,202,23)" fg:x="539" fg:w="14"/><text x="1.9874%" y="207.50"></text></g><g><title>test.exe`core::cmp::impl$7::eq (5 samples, 0.02%)</title><rect x="1.7922%" y="165" width="0.0161%" height="15" fill="rgb(219,102,11)" fg:x="556" fg:w="5"/><text x="2.0422%" y="175.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::bidirectional_merge(ref$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (33 samples, 0.11%)</title><rect x="1.7084%" y="213" width="0.1064%" height="15" fill="rgb(243,110,44)" fg:x="530" fg:w="33"/><text x="1.9584%" y="223.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::merge_up(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (10 samples, 0.03%)</title><rect x="1.7825%" y="197" width="0.0322%" height="15" fill="rgb(222,74,54)" fg:x="553" fg:w="10"/><text x="2.0325%" y="207.50"></text></g><g><title>test.exe`core::slice::impl$0::sort_unstable_by::closure$0(core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt;*, tuple$&lt;u32,f64&gt;*, tuple$ (7 samples, 0.02%)</title><rect x="1.7922%" y="181" width="0.0226%" height="15" fill="rgb(216,99,12)" fg:x="556" fg:w="7"/><text x="2.0422%" y="191.50"></text></g><g><title>test.exe`core::ptr::drop_in_place(core::slice::sort::shared::smallsort::CopyOnDrop&lt;tuple$ (5 samples, 0.02%)</title><rect x="1.8631%" y="197" width="0.0161%" height="15" fill="rgb(226,22,26)" fg:x="578" fg:w="5"/><text x="2.1131%" y="207.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::impl$7::drop(core::slice::sort::shared::smallsort::CopyOnDrop&lt;tuple$ (5 samples, 0.02%)</title><rect x="1.8631%" y="181" width="0.0161%" height="15" fill="rgb(217,163,10)" fg:x="578" fg:w="5"/><text x="2.1131%" y="191.50"></text></g><g><title>test.exe`core::intrinsics::copy_nonoverlapping(tuple$&lt;u32,f64&gt;*, tuple$ (5 samples, 0.02%)</title><rect x="1.8631%" y="165" width="0.0161%" height="15" fill="rgb(213,25,53)" fg:x="578" fg:w="5"/><text x="2.1131%" y="175.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::insert_tail(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (27 samples, 0.09%)</title><rect x="1.8147%" y="213" width="0.0870%" height="15" fill="rgb(252,105,26)" fg:x="563" fg:w="27"/><text x="2.0647%" y="223.50"></text></g><g><title>test.exe`core::slice::impl$0::sort_unstable_by::closure$0(core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt;*, tuple$&lt;u32,f64&gt;*, tuple$ (6 samples, 0.02%)</title><rect x="1.8824%" y="197" width="0.0193%" height="15" fill="rgb(220,39,43)" fg:x="584" fg:w="6"/><text x="2.1324%" y="207.50"></text></g><g><title>test.exe`mchess::search::order::impl$0::sort_moves::closure$0(mchess::search::order::impl$0::sort_moves::closure_env$0*, tuple$&lt;u32,f64&gt;*, tuple$ (5 samples, 0.02%)</title><rect x="1.8856%" y="181" width="0.0161%" height="15" fill="rgb(229,68,48)" fg:x="585" fg:w="5"/><text x="2.1356%" y="191.50"></text></g><g><title>test.exe`core::f64::impl$0::total_cmp (5 samples, 0.02%)</title><rect x="1.8856%" y="165" width="0.0161%" height="15" fill="rgb(252,8,32)" fg:x="585" fg:w="5"/><text x="2.1356%" y="175.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::small_sort_general&lt;tuple$&lt;u32,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (84 samples, 0.27%)</title><rect x="1.6568%" y="245" width="0.2708%" height="15" fill="rgb(223,20,43)" fg:x="514" fg:w="84"/><text x="1.9068%" y="255.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::small_sort_general_with_scratch(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;tuple$&lt;u32,f64&gt; &gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (81 samples, 0.26%)</title><rect x="1.6665%" y="229" width="0.2611%" height="15" fill="rgb(229,81,49)" fg:x="517" fg:w="81"/><text x="1.9165%" y="239.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::sort8_stable&lt;tuple$&lt;u32,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt; &gt;(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (8 samples, 0.03%)</title><rect x="1.9018%" y="213" width="0.0258%" height="15" fill="rgb(236,28,36)" fg:x="590" fg:w="8"/><text x="2.1518%" y="223.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::sort4_stable(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (5 samples, 0.02%)</title><rect x="1.9114%" y="197" width="0.0161%" height="15" fill="rgb(249,185,26)" fg:x="593" fg:w="5"/><text x="2.1614%" y="207.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::bidirectional_merge(ref$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (5 samples, 0.02%)</title><rect x="1.9501%" y="197" width="0.0161%" height="15" fill="rgb(249,174,33)" fg:x="605" fg:w="5"/><text x="2.2001%" y="207.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::small_sort_general&lt;tuple$&lt;u32,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (14 samples, 0.05%)</title><rect x="1.9372%" y="229" width="0.0451%" height="15" fill="rgb(233,201,37)" fg:x="601" fg:w="14"/><text x="2.1872%" y="239.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::small_sort_general_with_scratch(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;tuple$&lt;u32,f64&gt; &gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (13 samples, 0.04%)</title><rect x="1.9404%" y="213" width="0.0419%" height="15" fill="rgb(221,78,26)" fg:x="602" fg:w="13"/><text x="2.1904%" y="223.50"></text></g><g><title>test.exe`core::slice::impl$0::sort_unstable_by(ref_mut$&lt;slice2$&lt;tuple$ (119 samples, 0.38%)</title><rect x="1.6149%" y="293" width="0.3836%" height="15" fill="rgb(250,127,30)" fg:x="501" fg:w="119"/><text x="1.8649%" y="303.50"></text></g><g><title>test.exe`core::slice::sort::unstable::sort(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (119 samples, 0.38%)</title><rect x="1.6149%" y="277" width="0.3836%" height="15" fill="rgb(230,49,44)" fg:x="501" fg:w="119"/><text x="1.8649%" y="287.50"></text></g><g><title>test.exe`core::slice::sort::unstable::ipnsort&lt;tuple$&lt;u32,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (113 samples, 0.36%)</title><rect x="1.6342%" y="261" width="0.3642%" height="15" fill="rgb(229,67,23)" fg:x="507" fg:w="113"/><text x="1.8842%" y="271.50"></text></g><g><title>test.exe`core::slice::sort::unstable::quicksort::quicksort&lt;tuple$&lt;u32,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, enum2$&lt;core::option::Option&lt;ref$&lt;tuple$&lt;u32,f64&gt; &gt; &gt; &gt;, unsigned int, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (22 samples, 0.07%)</title><rect x="1.9275%" y="245" width="0.0709%" height="15" fill="rgb(249,83,47)" fg:x="598" fg:w="22"/><text x="2.1775%" y="255.50"></text></g><g><title>test.exe`core::slice::sort::unstable::quicksort::partition(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, unsigned long long, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (5 samples, 0.02%)</title><rect x="1.9823%" y="229" width="0.0161%" height="15" fill="rgb(215,43,3)" fg:x="615" fg:w="5"/><text x="2.2323%" y="239.50"></text></g><g><title>test.exe`core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (5 samples, 0.02%)</title><rect x="1.9823%" y="213" width="0.0161%" height="15" fill="rgb(238,154,13)" fg:x="615" fg:w="5"/><text x="2.2323%" y="223.50"></text></g><g><title>test.exe`core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::closure$0(core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::closure_env$0&lt;tuple$&lt;u32,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt; &gt;*, core::slice::sort::unstable::quicksort::PartitionState&lt;tuple$ (4 samples, 0.01%)</title><rect x="1.9856%" y="197" width="0.0129%" height="15" fill="rgb(219,56,2)" fg:x="616" fg:w="4"/><text x="2.2356%" y="207.50"></text></g><g><title>test.exe`mchess::moves::helper::is_castling (12 samples, 0.04%)</title><rect x="2.0210%" y="277" width="0.0387%" height="15" fill="rgb(233,0,4)" fg:x="627" fg:w="12"/><text x="2.2710%" y="287.50"></text></g><g><title>test.exe`mchess::moves::helper::get_move_type (12 samples, 0.04%)</title><rect x="2.0210%" y="261" width="0.0387%" height="15" fill="rgb(235,30,7)" fg:x="627" fg:w="12"/><text x="2.2710%" y="271.50"></text></g><g><title>test.exe`mchess::evaluation::evaluate_position (43 samples, 0.14%)</title><rect x="2.0694%" y="261" width="0.1386%" height="15" fill="rgb(250,79,13)" fg:x="642" fg:w="43"/><text x="2.3194%" y="271.50"></text></g><g><title>test.exe`mchess::board::Board::calculate_phase (6 samples, 0.02%)</title><rect x="2.1886%" y="245" width="0.0193%" height="15" fill="rgb(211,146,34)" fg:x="679" fg:w="6"/><text x="2.4386%" y="255.50"></text></g><g><title>test.exe`mchess::moves::Position::from_bitboard (5 samples, 0.02%)</title><rect x="2.2080%" y="261" width="0.0161%" height="15" fill="rgb(228,22,38)" fg:x="685" fg:w="5"/><text x="2.4580%" y="271.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (26 samples, 0.08%)</title><rect x="2.2950%" y="181" width="0.0838%" height="15" fill="rgb(235,168,5)" fg:x="712" fg:w="26"/><text x="2.5450%" y="191.50"></text></g><g><title>test.exe`mchess::moves::helper::get_to (4 samples, 0.01%)</title><rect x="2.3788%" y="181" width="0.0129%" height="15" fill="rgb(221,155,16)" fg:x="738" fg:w="4"/><text x="2.6288%" y="191.50"></text></g><g><title>test.exe`core::ptr::drop_in_place(alloc::vec::Vec (356 samples, 1.15%)</title><rect x="1.2732%" y="389" width="1.1475%" height="15" fill="rgb(215,215,53)" fg:x="395" fg:w="356"/><text x="1.5232%" y="399.50"></text></g><g><title>test.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (356 samples, 1.15%)</title><rect x="1.2732%" y="373" width="1.1475%" height="15" fill="rgb(223,4,10)" fg:x="395" fg:w="356"/><text x="1.5232%" y="383.50"></text></g><g><title>test.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (356 samples, 1.15%)</title><rect x="1.2732%" y="357" width="1.1475%" height="15" fill="rgb(234,103,6)" fg:x="395" fg:w="356"/><text x="1.5232%" y="367.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (356 samples, 1.15%)</title><rect x="1.2732%" y="341" width="1.1475%" height="15" fill="rgb(227,97,0)" fg:x="395" fg:w="356"/><text x="1.5232%" y="351.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (309 samples, 1.00%)</title><rect x="1.4247%" y="325" width="0.9960%" height="15" fill="rgb(234,150,53)" fg:x="442" fg:w="309"/><text x="1.6747%" y="335.50"></text></g><g><title>test.exe`mchess::search::Search::sort_moves(alloc::vec::Vec (309 samples, 1.00%)</title><rect x="1.4247%" y="309" width="0.9960%" height="15" fill="rgb(228,201,54)" fg:x="442" fg:w="309"/><text x="1.6747%" y="319.50"></text></g><g><title>test.exe`mchess::search::Search::evaluate_move (131 samples, 0.42%)</title><rect x="1.9985%" y="293" width="0.4223%" height="15" fill="rgb(222,22,37)" fg:x="620" fg:w="131"/><text x="2.2485%" y="303.50"></text></g><g><title>test.exe`mchess::search::order::ps_table (112 samples, 0.36%)</title><rect x="2.0597%" y="277" width="0.3610%" height="15" fill="rgb(237,53,32)" fg:x="639" fg:w="112"/><text x="2.3097%" y="287.50"></text></g><g><title>test.exe`mchess::moves::helper::get_piece_type (61 samples, 0.20%)</title><rect x="2.2241%" y="261" width="0.1966%" height="15" fill="rgb(233,25,53)" fg:x="690" fg:w="61"/><text x="2.4741%" y="271.50"></text></g><g><title>test.exe`mchess::search::order::mvv_lva (58 samples, 0.19%)</title><rect x="2.2338%" y="245" width="0.1870%" height="15" fill="rgb(210,40,34)" fg:x="693" fg:w="58"/><text x="2.4838%" y="255.50"></text></g><g><title>test.exe`mchess::moves::helper::is_capture (44 samples, 0.14%)</title><rect x="2.2789%" y="229" width="0.1418%" height="15" fill="rgb(241,220,44)" fg:x="707" fg:w="44"/><text x="2.5289%" y="239.50"></text></g><g><title>test.exe`mchess::moves::helper::get_move_type (44 samples, 0.14%)</title><rect x="2.2789%" y="213" width="0.1418%" height="15" fill="rgb(235,28,35)" fg:x="707" fg:w="44"/><text x="2.5289%" y="223.50"></text></g><g><title>test.exe`mchess::moves::helper::get_captured (39 samples, 0.13%)</title><rect x="2.2950%" y="197" width="0.1257%" height="15" fill="rgb(210,56,17)" fg:x="712" fg:w="39"/><text x="2.5450%" y="207.50"></text></g><g><title>test.exe`mchess::moves::helper::is_en_passant (9 samples, 0.03%)</title><rect x="2.3917%" y="181" width="0.0290%" height="15" fill="rgb(224,130,29)" fg:x="742" fg:w="9"/><text x="2.6417%" y="191.50"></text></g><g><title>test.exe`mchess::moves::helper::get_move_type (9 samples, 0.03%)</title><rect x="2.3917%" y="165" width="0.0290%" height="15" fill="rgb(235,212,8)" fg:x="742" fg:w="9"/><text x="2.6417%" y="175.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain_mut::process_loop(unsigned long long, alloc::vec::impl$1::retain::closure_env$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$2&gt;*, alloc::vec::impl$1::retain_mut::BackshiftOnDrop (4 samples, 0.01%)</title><rect x="2.4239%" y="325" width="0.0129%" height="15" fill="rgb(223,33,50)" fg:x="752" fg:w="4"/><text x="2.6739%" y="335.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (24 samples, 0.08%)</title><rect x="2.7334%" y="261" width="0.0774%" height="15" fill="rgb(219,149,13)" fg:x="848" fg:w="24"/><text x="2.9834%" y="271.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_bishop_moves (7 samples, 0.02%)</title><rect x="2.8107%" y="261" width="0.0226%" height="15" fill="rgb(250,156,29)" fg:x="872" fg:w="7"/><text x="3.0607%" y="271.50"></text></g><g><title>test.exe`mchess::moves::tables::AttackTables::get_line_mask (13 samples, 0.04%)</title><rect x="2.8365%" y="261" width="0.0419%" height="15" fill="rgb(216,193,19)" fg:x="880" fg:w="13"/><text x="3.0865%" y="271.50"></text></g><g><title>test.exe`core::num::impl$9::trailing_zeros (7 samples, 0.02%)</title><rect x="2.8559%" y="245" width="0.0226%" height="15" fill="rgb(216,135,14)" fg:x="886" fg:w="7"/><text x="3.1059%" y="255.50"></text></g><g><title>test.exe`mchess::board::Board::get_pin (111 samples, 0.36%)</title><rect x="2.5335%" y="277" width="0.3578%" height="15" fill="rgb(241,47,5)" fg:x="786" fg:w="111"/><text x="2.7835%" y="287.50"></text></g><g><title>test.exe`mchess::piece::impl$7::eq (4 samples, 0.01%)</title><rect x="2.8784%" y="261" width="0.0129%" height="15" fill="rgb(233,42,35)" fg:x="893" fg:w="4"/><text x="3.1284%" y="271.50"></text></g><g><title>test.exe`mchess::moves::helper::get_from (6 samples, 0.02%)</title><rect x="2.8913%" y="277" width="0.0193%" height="15" fill="rgb(231,13,6)" fg:x="897" fg:w="6"/><text x="3.1413%" y="287.50"></text></g><g><title>test.exe`mchess::moves::helper::is_en_passant (6 samples, 0.02%)</title><rect x="2.9106%" y="277" width="0.0193%" height="15" fill="rgb(207,181,40)" fg:x="903" fg:w="6"/><text x="3.1606%" y="287.50"></text></g><g><title>test.exe`mchess::moves::helper::get_move_type (6 samples, 0.02%)</title><rect x="2.9106%" y="261" width="0.0193%" height="15" fill="rgb(254,173,49)" fg:x="903" fg:w="6"/><text x="3.1606%" y="271.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain (162 samples, 0.52%)</title><rect x="2.4239%" y="357" width="0.5222%" height="15" fill="rgb(221,1,38)" fg:x="752" fg:w="162"/><text x="2.6739%" y="367.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain_mut(alloc::vec::impl$1::retain::closure_env$0 (162 samples, 0.52%)</title><rect x="2.4239%" y="341" width="0.5222%" height="15" fill="rgb(206,124,46)" fg:x="752" fg:w="162"/><text x="2.6739%" y="351.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain_mut::process_loop(unsigned long long, alloc::vec::impl$1::retain::closure_env$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$3&gt;*, alloc::vec::impl$1::retain_mut::BackshiftOnDrop (158 samples, 0.51%)</title><rect x="2.4368%" y="325" width="0.5093%" height="15" fill="rgb(249,21,11)" fg:x="756" fg:w="158"/><text x="2.6868%" y="335.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain::closure$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$3&gt;(alloc::vec::impl$1::retain::closure_env$0 (148 samples, 0.48%)</title><rect x="2.4691%" y="309" width="0.4771%" height="15" fill="rgb(222,201,40)" fg:x="766" fg:w="148"/><text x="2.7191%" y="319.50"></text></g><g><title>test.exe`mchess::moves::legal::impl$0::filter_legal_moves::closure$3 (131 samples, 0.42%)</title><rect x="2.5239%" y="293" width="0.4223%" height="15" fill="rgb(235,61,29)" fg:x="783" fg:w="131"/><text x="2.7739%" y="303.50"></text></g><g><title>test.exe`mchess::piece::impl$7::eq (5 samples, 0.02%)</title><rect x="2.9300%" y="277" width="0.0161%" height="15" fill="rgb(219,207,3)" fg:x="909" fg:w="5"/><text x="3.1800%" y="287.50"></text></g><g><title>test.exe`mchess::moves::helper::get_piece_type (5 samples, 0.02%)</title><rect x="2.9622%" y="277" width="0.0161%" height="15" fill="rgb(222,56,46)" fg:x="919" fg:w="5"/><text x="3.2122%" y="287.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain::closure$0(alloc::vec::impl$1::retain::closure_env$0 (7 samples, 0.02%)</title><rect x="2.9622%" y="309" width="0.0226%" height="15" fill="rgb(239,76,54)" fg:x="919" fg:w="7"/><text x="3.2122%" y="319.50"></text></g><g><title>test.exe`mchess::moves::legal::impl$0::filter_legal_moves::closure$0 (7 samples, 0.02%)</title><rect x="2.9622%" y="293" width="0.0226%" height="15" fill="rgb(231,124,27)" fg:x="919" fg:w="7"/><text x="3.2122%" y="303.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain_mut::process_loop(unsigned long long, alloc::vec::impl$1::retain::closure_env$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$0&gt;*, alloc::vec::impl$1::retain_mut::BackshiftOnDrop (16 samples, 0.05%)</title><rect x="2.9526%" y="325" width="0.0516%" height="15" fill="rgb(249,195,6)" fg:x="916" fg:w="16"/><text x="3.2026%" y="335.50"></text></g><g><title>test.exe`mchess::board::Board::is_attacked (6 samples, 0.02%)</title><rect x="2.9848%" y="309" width="0.0193%" height="15" fill="rgb(237,174,47)" fg:x="926" fg:w="6"/><text x="3.2348%" y="319.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (5 samples, 0.02%)</title><rect x="2.9880%" y="293" width="0.0161%" height="15" fill="rgb(206,201,31)" fg:x="927" fg:w="5"/><text x="3.2380%" y="303.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$0&gt; (19 samples, 0.06%)</title><rect x="2.9461%" y="357" width="0.0612%" height="15" fill="rgb(231,57,52)" fg:x="914" fg:w="19"/><text x="3.1961%" y="367.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain_mut(alloc::vec::impl$1::retain::closure_env$0 (17 samples, 0.05%)</title><rect x="2.9526%" y="341" width="0.0548%" height="15" fill="rgb(248,177,22)" fg:x="916" fg:w="17"/><text x="3.2026%" y="351.50"></text></g><g><title>test.exe`mchess::board::Board::is_checked (9 samples, 0.03%)</title><rect x="3.0073%" y="357" width="0.0290%" height="15" fill="rgb(215,211,37)" fg:x="933" fg:w="9"/><text x="3.2573%" y="367.50"></text></g><g><title>test.exe`mchess::board::Board::is_attacked (9 samples, 0.03%)</title><rect x="3.0073%" y="341" width="0.0290%" height="15" fill="rgb(241,128,51)" fg:x="933" fg:w="9"/><text x="3.2573%" y="351.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (9 samples, 0.03%)</title><rect x="3.0073%" y="325" width="0.0290%" height="15" fill="rgb(227,165,31)" fg:x="933" fg:w="9"/><text x="3.2573%" y="335.50"></text></g><g><title>test.exe`mchess::board::Board::filter_legal_moves(alloc::vec::Vec (191 samples, 0.62%)</title><rect x="2.4239%" y="373" width="0.6157%" height="15" fill="rgb(228,167,24)" fg:x="752" fg:w="191"/><text x="2.6739%" y="383.50"></text></g><g><title>`0x7FF81733B3C7 (6 samples, 0.02%)</title><rect x="3.0783%" y="277" width="0.0193%" height="15" fill="rgb(228,143,12)" fg:x="955" fg:w="6"/><text x="3.3283%" y="287.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::with_capacity (12 samples, 0.04%)</title><rect x="3.0718%" y="357" width="0.0387%" height="15" fill="rgb(249,149,8)" fg:x="953" fg:w="12"/><text x="3.3218%" y="367.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::with_capacity_in (12 samples, 0.04%)</title><rect x="3.0718%" y="341" width="0.0387%" height="15" fill="rgb(243,35,44)" fg:x="953" fg:w="12"/><text x="3.3218%" y="351.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u32,alloc::alloc::Global&gt;::with_capacity_in (12 samples, 0.04%)</title><rect x="3.0718%" y="325" width="0.0387%" height="15" fill="rgb(246,89,9)" fg:x="953" fg:w="12"/><text x="3.3218%" y="335.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (12 samples, 0.04%)</title><rect x="3.0718%" y="309" width="0.0387%" height="15" fill="rgb(233,213,13)" fg:x="953" fg:w="12"/><text x="3.3218%" y="319.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (12 samples, 0.04%)</title><rect x="3.0718%" y="293" width="0.0387%" height="15" fill="rgb(233,141,41)" fg:x="953" fg:w="12"/><text x="3.3218%" y="303.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (24 samples, 0.08%)</title><rect x="3.1105%" y="357" width="0.0774%" height="15" fill="rgb(239,167,4)" fg:x="965" fg:w="24"/><text x="3.3605%" y="367.50"></text></g><g><title>test.exe`mchess::board::Board::add_bishop_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (4 samples, 0.01%)</title><rect x="3.1879%" y="357" width="0.0129%" height="15" fill="rgb(209,217,16)" fg:x="989" fg:w="4"/><text x="3.4379%" y="367.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_bishop_moves (4 samples, 0.01%)</title><rect x="3.2201%" y="309" width="0.0129%" height="15" fill="rgb(219,88,35)" fg:x="999" fg:w="4"/><text x="3.4701%" y="319.50"></text></g><g><title>test.exe`mchess::board::Board::is_attacked (8 samples, 0.03%)</title><rect x="3.2136%" y="341" width="0.0258%" height="15" fill="rgb(220,193,23)" fg:x="997" fg:w="8"/><text x="3.4636%" y="351.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (8 samples, 0.03%)</title><rect x="3.2136%" y="325" width="0.0258%" height="15" fill="rgb(230,90,52)" fg:x="997" fg:w="8"/><text x="3.4636%" y="335.50"></text></g><g><title>test.exe`mchess::board::Board::add_king_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (13 samples, 0.04%)</title><rect x="3.2007%" y="357" width="0.0419%" height="15" fill="rgb(252,106,19)" fg:x="993" fg:w="13"/><text x="3.4507%" y="367.50"></text></g><g><title>test.exe`mchess::board::Board::add_knight_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (4 samples, 0.01%)</title><rect x="3.2427%" y="357" width="0.0129%" height="15" fill="rgb(206,74,20)" fg:x="1006" fg:w="4"/><text x="3.4927%" y="367.50"></text></g><g><title>test.exe`mchess::board::Board::add_pawn_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (25 samples, 0.08%)</title><rect x="3.2555%" y="357" width="0.0806%" height="15" fill="rgb(230,138,44)" fg:x="1010" fg:w="25"/><text x="3.5055%" y="367.50"></text></g><g><title>test.exe`mchess::board::Board::get_legal_moves (289 samples, 0.93%)</title><rect x="2.4207%" y="389" width="0.9315%" height="15" fill="rgb(235,182,43)" fg:x="751" fg:w="289"/><text x="2.6707%" y="399.50"></text></g><g><title>test.exe`mchess::board::Board::get_pseudo_legal_moves (97 samples, 0.31%)</title><rect x="3.0396%" y="373" width="0.3127%" height="15" fill="rgb(242,16,51)" fg:x="943" fg:w="97"/><text x="3.2896%" y="383.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain (5 samples, 0.02%)</title><rect x="3.3587%" y="341" width="0.0161%" height="15" fill="rgb(248,9,4)" fg:x="1042" fg:w="5"/><text x="3.6087%" y="351.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain_mut(alloc::vec::impl$1::retain::closure_env$0 (5 samples, 0.02%)</title><rect x="3.3587%" y="325" width="0.0161%" height="15" fill="rgb(210,31,22)" fg:x="1042" fg:w="5"/><text x="3.6087%" y="335.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain_mut::process_loop(unsigned long long, alloc::vec::impl$1::retain::closure_env$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$2&gt;*, alloc::vec::impl$1::retain_mut::BackshiftOnDrop (5 samples, 0.02%)</title><rect x="3.3587%" y="309" width="0.0161%" height="15" fill="rgb(239,54,39)" fg:x="1042" fg:w="5"/><text x="3.6087%" y="319.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain::closure$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$2&gt;(alloc::vec::impl$1::retain::closure_env$0 (5 samples, 0.02%)</title><rect x="3.3587%" y="293" width="0.0161%" height="15" fill="rgb(230,99,41)" fg:x="1042" fg:w="5"/><text x="3.6087%" y="303.50"></text></g><g><title>test.exe`mchess::moves::legal::impl$0::filter_legal_moves::closure$2 (4 samples, 0.01%)</title><rect x="3.3619%" y="277" width="0.0129%" height="15" fill="rgb(253,106,12)" fg:x="1043" fg:w="4"/><text x="3.6119%" y="287.50"></text></g><g><title>test.exe`mchess::board::Board::filter_legal_moves(alloc::vec::Vec (6 samples, 0.02%)</title><rect x="3.3587%" y="357" width="0.0193%" height="15" fill="rgb(213,46,41)" fg:x="1042" fg:w="6"/><text x="3.6087%" y="367.50"></text></g><g><title>test.exe`mchess::board::Board::get_legal_moves (8 samples, 0.03%)</title><rect x="3.3587%" y="373" width="0.0258%" height="15" fill="rgb(215,133,35)" fg:x="1042" fg:w="8"/><text x="3.6087%" y="383.50"></text></g><g><title>test.exe`mchess::board::Board::is_checkmate (14 samples, 0.05%)</title><rect x="3.3522%" y="389" width="0.0451%" height="15" fill="rgb(213,28,5)" fg:x="1040" fg:w="14"/><text x="3.6022%" y="399.50"></text></g><g><title>test.exe`mchess::board::Board::is_checked (4 samples, 0.01%)</title><rect x="3.3845%" y="373" width="0.0129%" height="15" fill="rgb(215,77,49)" fg:x="1050" fg:w="4"/><text x="3.6345%" y="383.50"></text></g><g><title>test.exe`mchess::board::Board::is_attacked (4 samples, 0.01%)</title><rect x="3.3845%" y="357" width="0.0129%" height="15" fill="rgb(248,100,22)" fg:x="1050" fg:w="4"/><text x="3.6345%" y="367.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (4 samples, 0.01%)</title><rect x="3.3845%" y="341" width="0.0129%" height="15" fill="rgb(208,67,9)" fg:x="1050" fg:w="4"/><text x="3.6345%" y="351.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (12 samples, 0.04%)</title><rect x="3.5682%" y="357" width="0.0387%" height="15" fill="rgb(219,133,21)" fg:x="1107" fg:w="12"/><text x="3.8182%" y="367.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::move_piece (27 samples, 0.09%)</title><rect x="3.5392%" y="373" width="0.0870%" height="15" fill="rgb(246,46,29)" fg:x="1098" fg:w="27"/><text x="3.7892%" y="383.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::remove_piece (6 samples, 0.02%)</title><rect x="3.6069%" y="357" width="0.0193%" height="15" fill="rgb(246,185,52)" fg:x="1119" fg:w="6"/><text x="3.8569%" y="367.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::remove_piece_at (6 samples, 0.02%)</title><rect x="3.6262%" y="373" width="0.0193%" height="15" fill="rgb(252,136,11)" fg:x="1125" fg:w="6"/><text x="3.8762%" y="383.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (5 samples, 0.02%)</title><rect x="3.6294%" y="357" width="0.0161%" height="15" fill="rgb(219,138,53)" fg:x="1126" fg:w="5"/><text x="3.8794%" y="367.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (6 samples, 0.02%)</title><rect x="3.7197%" y="357" width="0.0193%" height="15" fill="rgb(211,51,23)" fg:x="1154" fg:w="6"/><text x="3.9697%" y="367.50"></text></g><g><title>test.exe`mchess::board::Board::update_hash(unsigned int, tuple$ (30 samples, 0.10%)</title><rect x="3.6552%" y="373" width="0.0967%" height="15" fill="rgb(247,221,28)" fg:x="1134" fg:w="30"/><text x="3.9052%" y="383.50"></text></g><g><title>test.exe`mchess::moves::helper::get_to (4 samples, 0.01%)</title><rect x="3.7390%" y="357" width="0.0129%" height="15" fill="rgb(251,222,45)" fg:x="1160" fg:w="4"/><text x="3.9890%" y="367.50"></text></g><g><title>test.exe`mchess::board::Board::make_move (114 samples, 0.37%)</title><rect x="3.3974%" y="389" width="0.3675%" height="15" fill="rgb(217,162,53)" fg:x="1054" fg:w="114"/><text x="3.6474%" y="399.50"></text></g><g><title>`0x7FF8165B5880 (7 samples, 0.02%)</title><rect x="4.1774%" y="357" width="0.0226%" height="15" fill="rgb(229,93,14)" fg:x="1296" fg:w="7"/><text x="4.4274%" y="367.50"></text></g><g><title>`0x7FF817334765 (6 samples, 0.02%)</title><rect x="4.2096%" y="357" width="0.0193%" height="15" fill="rgb(209,67,49)" fg:x="1306" fg:w="6"/><text x="4.4596%" y="367.50"></text></g><g><title>`0x7FF817336491 (4 samples, 0.01%)</title><rect x="4.3837%" y="325" width="0.0129%" height="15" fill="rgb(213,87,29)" fg:x="1360" fg:w="4"/><text x="4.6337%" y="335.50"></text></g><g><title>`0x7FF817335B74 (24 samples, 0.08%)</title><rect x="4.3515%" y="341" width="0.0774%" height="15" fill="rgb(205,151,52)" fg:x="1350" fg:w="24"/><text x="4.6015%" y="351.50"></text></g><g><title>`0x7FF817335BA1 (4 samples, 0.01%)</title><rect x="4.4449%" y="341" width="0.0129%" height="15" fill="rgb(253,215,39)" fg:x="1379" fg:w="4"/><text x="4.6949%" y="351.50"></text></g><g><title>`0x7FF8173B74BA (9 samples, 0.03%)</title><rect x="4.5030%" y="341" width="0.0290%" height="15" fill="rgb(221,220,41)" fg:x="1397" fg:w="9"/><text x="4.7530%" y="351.50"></text></g><g><title>`0x7FF8173B74CF (6 samples, 0.02%)</title><rect x="4.5352%" y="341" width="0.0193%" height="15" fill="rgb(218,133,21)" fg:x="1407" fg:w="6"/><text x="4.7852%" y="351.50"></text></g><g><title>`0x7FF8173B74E8 (11 samples, 0.04%)</title><rect x="4.5642%" y="341" width="0.0355%" height="15" fill="rgb(221,193,43)" fg:x="1416" fg:w="11"/><text x="4.8142%" y="351.50"></text></g><g><title>`0x7FF8173B74F6 (5 samples, 0.02%)</title><rect x="4.6093%" y="341" width="0.0161%" height="15" fill="rgb(240,128,52)" fg:x="1430" fg:w="5"/><text x="4.8593%" y="351.50"></text></g><g><title>`0x7FF8173B7506 (5 samples, 0.02%)</title><rect x="4.6351%" y="341" width="0.0161%" height="15" fill="rgb(253,114,12)" fg:x="1438" fg:w="5"/><text x="4.8851%" y="351.50"></text></g><g><title>`0x7FF8173B7587 (4 samples, 0.01%)</title><rect x="4.6770%" y="341" width="0.0129%" height="15" fill="rgb(215,223,47)" fg:x="1451" fg:w="4"/><text x="4.9270%" y="351.50"></text></g><g><title>`0x7FF8173B75BA (26 samples, 0.08%)</title><rect x="4.7028%" y="341" width="0.0838%" height="15" fill="rgb(248,225,23)" fg:x="1459" fg:w="26"/><text x="4.9528%" y="351.50"></text></g><g><title>`0x7FF8173B75F6 (4 samples, 0.01%)</title><rect x="4.7898%" y="341" width="0.0129%" height="15" fill="rgb(250,108,0)" fg:x="1486" fg:w="4"/><text x="5.0398%" y="351.50"></text></g><g><title>`0x7FF8173B75FA (5 samples, 0.02%)</title><rect x="4.8027%" y="341" width="0.0161%" height="15" fill="rgb(228,208,7)" fg:x="1490" fg:w="5"/><text x="5.0527%" y="351.50"></text></g><g><title>`0x7FF8173347B1 (171 samples, 0.55%)</title><rect x="4.2838%" y="357" width="0.5512%" height="15" fill="rgb(244,45,10)" fg:x="1329" fg:w="171"/><text x="4.5338%" y="367.50"></text></g><g><title>test.exe`__rust_dealloc (4 samples, 0.01%)</title><rect x="4.8446%" y="357" width="0.0129%" height="15" fill="rgb(207,125,25)" fg:x="1503" fg:w="4"/><text x="5.0946%" y="367.50"></text></g><g><title>`0x7FF81733B39E (5 samples, 0.02%)</title><rect x="4.9768%" y="341" width="0.0161%" height="15" fill="rgb(210,195,18)" fg:x="1544" fg:w="5"/><text x="5.2268%" y="351.50"></text></g><g><title>`0x7FF81733B73C (5 samples, 0.02%)</title><rect x="5.0670%" y="325" width="0.0161%" height="15" fill="rgb(249,80,12)" fg:x="1572" fg:w="5"/><text x="5.3170%" y="335.50"></text></g><g><title>`0x7FF81733B748 (5 samples, 0.02%)</title><rect x="5.0896%" y="325" width="0.0161%" height="15" fill="rgb(221,65,9)" fg:x="1579" fg:w="5"/><text x="5.3396%" y="335.50"></text></g><g><title>`0x7FF81733B7A2 (22 samples, 0.07%)</title><rect x="5.1251%" y="325" width="0.0709%" height="15" fill="rgb(235,49,36)" fg:x="1590" fg:w="22"/><text x="5.3751%" y="335.50"></text></g><g><title>`0x7FF817314452 (7 samples, 0.02%)</title><rect x="5.2572%" y="309" width="0.0226%" height="15" fill="rgb(225,32,20)" fg:x="1631" fg:w="7"/><text x="5.5072%" y="319.50"></text></g><g><title>`0x7FF81733B86B (26 samples, 0.08%)</title><rect x="5.2121%" y="325" width="0.0838%" height="15" fill="rgb(215,141,46)" fg:x="1617" fg:w="26"/><text x="5.4621%" y="335.50"></text></g><g><title>`0x7FF81733B8A4 (13 samples, 0.04%)</title><rect x="5.3314%" y="325" width="0.0419%" height="15" fill="rgb(250,160,47)" fg:x="1654" fg:w="13"/><text x="5.5814%" y="335.50"></text></g><g><title>`0x7FF81733B3C7 (118 samples, 0.38%)</title><rect x="5.0155%" y="341" width="0.3804%" height="15" fill="rgb(216,222,40)" fg:x="1556" fg:w="118"/><text x="5.2655%" y="351.50"></text></g><g><title>test.exe`alloc::alloc::impl$1::allocate (4 samples, 0.01%)</title><rect x="5.4248%" y="341" width="0.0129%" height="15" fill="rgb(234,217,39)" fg:x="1683" fg:w="4"/><text x="5.6748%" y="351.50"></text></g><g><title>test.exe`alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="5.4248%" y="325" width="0.0129%" height="15" fill="rgb(207,178,40)" fg:x="1683" fg:w="4"/><text x="5.6748%" y="335.50"></text></g><g><title>test.exe`alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="5.4248%" y="309" width="0.0129%" height="15" fill="rgb(221,136,13)" fg:x="1683" fg:w="4"/><text x="5.6748%" y="319.50"></text></g><g><title>test.exe`std::alloc::__default_lib_allocator::__rdl_alloc (13 samples, 0.04%)</title><rect x="5.4377%" y="341" width="0.0419%" height="15" fill="rgb(249,199,10)" fg:x="1687" fg:w="13"/><text x="5.6877%" y="351.50"></text></g><g><title>test.exe`std::sys::alloc::windows::impl$0::alloc (6 samples, 0.02%)</title><rect x="5.4603%" y="325" width="0.0193%" height="15" fill="rgb(249,222,13)" fg:x="1694" fg:w="6"/><text x="5.7103%" y="335.50"></text></g><g><title>test.exe`std::sys::alloc::windows::allocate (6 samples, 0.02%)</title><rect x="5.4603%" y="309" width="0.0193%" height="15" fill="rgb(244,185,38)" fg:x="1694" fg:w="6"/><text x="5.7103%" y="319.50"></text></g><g><title>`0x7FF814AFCDE0 (5 samples, 0.02%)</title><rect x="5.5022%" y="309" width="0.0161%" height="15" fill="rgb(236,202,9)" fg:x="1707" fg:w="5"/><text x="5.7522%" y="319.50"></text></g><g><title>test.exe`alloc::alloc::exchange_malloc (206 samples, 0.66%)</title><rect x="4.8575%" y="357" width="0.6640%" height="15" fill="rgb(250,229,37)" fg:x="1507" fg:w="206"/><text x="5.1075%" y="367.50"></text></g><g><title>test.exe`std::sys::alloc::windows::process_heap_alloc (13 samples, 0.04%)</title><rect x="5.4796%" y="341" width="0.0419%" height="15" fill="rgb(206,174,23)" fg:x="1700" fg:w="13"/><text x="5.7296%" y="351.50"></text></g><g><title>test.exe`core::intrinsics::unlikely (7 samples, 0.02%)</title><rect x="5.4990%" y="325" width="0.0226%" height="15" fill="rgb(211,33,43)" fg:x="1706" fg:w="7"/><text x="5.7490%" y="335.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::is_empty (12 samples, 0.04%)</title><rect x="5.5215%" y="357" width="0.0387%" height="15" fill="rgb(245,58,50)" fg:x="1713" fg:w="12"/><text x="5.7715%" y="367.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::len (12 samples, 0.04%)</title><rect x="5.5215%" y="341" width="0.0387%" height="15" fill="rgb(244,68,36)" fg:x="1713" fg:w="12"/><text x="5.7715%" y="351.50"></text></g><g><title>test.exe`core::ptr::non_null::NonNull&lt;tuple$&lt;u32,f64&gt; &gt;::read(core::ptr::non_null::NonNull&lt;tuple$ (14 samples, 0.05%)</title><rect x="5.5634%" y="341" width="0.0451%" height="15" fill="rgb(232,229,15)" fg:x="1726" fg:w="14"/><text x="5.8134%" y="351.50"></text></g><g><title>test.exe`core::ptr::read(tuple$ (14 samples, 0.05%)</title><rect x="5.5634%" y="325" width="0.0451%" height="15" fill="rgb(254,30,23)" fg:x="1726" fg:w="14"/><text x="5.8134%" y="335.50"></text></g><g><title>test.exe`alloc::vec::into_iter::impl$5::next(alloc::vec::into_iter::IntoIter&lt;tuple$ (17 samples, 0.05%)</title><rect x="5.5634%" y="357" width="0.0548%" height="15" fill="rgb(235,160,14)" fg:x="1726" fg:w="17"/><text x="5.8134%" y="367.50"></text></g><g><title>test.exe`core::f64::impl$0::max (22 samples, 0.07%)</title><rect x="5.6182%" y="357" width="0.0709%" height="15" fill="rgb(212,155,44)" fg:x="1743" fg:w="22"/><text x="5.8682%" y="367.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;tuple$&lt;u32,f64&gt;,alloc::alloc::Global&gt;::as_mut_ptr (40 samples, 0.13%)</title><rect x="5.8535%" y="245" width="0.1289%" height="15" fill="rgb(226,2,50)" fg:x="1816" fg:w="40"/><text x="6.1035%" y="255.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;u32,f64&gt;,alloc::alloc::Global&gt;::ptr (39 samples, 0.13%)</title><rect x="5.8568%" y="229" width="0.1257%" height="15" fill="rgb(234,177,6)" fg:x="1817" fg:w="39"/><text x="6.1068%" y="239.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (39 samples, 0.13%)</title><rect x="5.8568%" y="213" width="0.1257%" height="15" fill="rgb(217,24,9)" fg:x="1817" fg:w="39"/><text x="6.1068%" y="223.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (39 samples, 0.13%)</title><rect x="5.8568%" y="197" width="0.1257%" height="15" fill="rgb(220,13,46)" fg:x="1817" fg:w="39"/><text x="6.1068%" y="207.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;tuple$&lt;u32,f64&gt;,alloc::alloc::Global&gt;::push(tuple$ (86 samples, 0.28%)</title><rect x="5.7762%" y="261" width="0.2772%" height="15" fill="rgb(239,221,27)" fg:x="1792" fg:w="86"/><text x="6.0262%" y="271.50"></text></g><g><title>test.exe`core::ptr::write(tuple$&lt;u32,f64&gt;*, tuple$ (22 samples, 0.07%)</title><rect x="5.9825%" y="245" width="0.0709%" height="15" fill="rgb(222,198,25)" fg:x="1856" fg:w="22"/><text x="6.2325%" y="255.50"></text></g><g><title>`0x7FF81733B721 (4 samples, 0.01%)</title><rect x="6.2371%" y="133" width="0.0129%" height="15" fill="rgb(211,99,13)" fg:x="1935" fg:w="4"/><text x="6.4871%" y="143.50"></text></g><g><title>`0x7FF81733B748 (7 samples, 0.02%)</title><rect x="6.2597%" y="133" width="0.0226%" height="15" fill="rgb(232,111,31)" fg:x="1942" fg:w="7"/><text x="6.5097%" y="143.50"></text></g><g><title>`0x7FF81733B7A2 (9 samples, 0.03%)</title><rect x="6.2887%" y="133" width="0.0290%" height="15" fill="rgb(245,82,37)" fg:x="1951" fg:w="9"/><text x="6.5387%" y="143.50"></text></g><g><title>`0x7FF81733B86B (11 samples, 0.04%)</title><rect x="6.3338%" y="133" width="0.0355%" height="15" fill="rgb(227,149,46)" fg:x="1965" fg:w="11"/><text x="6.5838%" y="143.50"></text></g><g><title>`0x7FF81733B8A4 (12 samples, 0.04%)</title><rect x="6.3725%" y="133" width="0.0387%" height="15" fill="rgb(218,36,50)" fg:x="1977" fg:w="12"/><text x="6.6225%" y="143.50"></text></g><g><title>`0x7FF81733B3C7 (65 samples, 0.21%)</title><rect x="6.2178%" y="149" width="0.2095%" height="15" fill="rgb(226,80,48)" fg:x="1929" fg:w="65"/><text x="6.4678%" y="159.50"></text></g><g><title>`0x7FF81733B44D (28 samples, 0.09%)</title><rect x="6.4273%" y="149" width="0.0903%" height="15" fill="rgb(238,224,15)" fg:x="1994" fg:w="28"/><text x="6.6773%" y="159.50"></text></g><g><title>test.exe`std::alloc::__default_lib_allocator::__rdl_alloc (4 samples, 0.01%)</title><rect x="6.5272%" y="149" width="0.0129%" height="15" fill="rgb(241,136,10)" fg:x="2025" fg:w="4"/><text x="6.7772%" y="159.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;tuple$&lt;u32,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (122 samples, 0.39%)</title><rect x="6.1630%" y="213" width="0.3932%" height="15" fill="rgb(208,32,45)" fg:x="1912" fg:w="122"/><text x="6.4130%" y="223.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;u32,f64&gt;,alloc::alloc::Global&gt;::with_capacity_in (122 samples, 0.39%)</title><rect x="6.1630%" y="197" width="0.3932%" height="15" fill="rgb(207,135,9)" fg:x="1912" fg:w="122"/><text x="6.4130%" y="207.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (122 samples, 0.39%)</title><rect x="6.1630%" y="181" width="0.3932%" height="15" fill="rgb(206,86,44)" fg:x="1912" fg:w="122"/><text x="6.4130%" y="191.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (122 samples, 0.39%)</title><rect x="6.1630%" y="165" width="0.3932%" height="15" fill="rgb(245,177,15)" fg:x="1912" fg:w="122"/><text x="6.4130%" y="175.50"></text></g><g><title>test.exe`std::sys::alloc::windows::process_heap_alloc (5 samples, 0.02%)</title><rect x="6.5401%" y="149" width="0.0161%" height="15" fill="rgb(206,64,50)" fg:x="2029" fg:w="5"/><text x="6.7901%" y="159.50"></text></g><g><title>test.exe`core::intrinsics::unlikely (4 samples, 0.01%)</title><rect x="6.5433%" y="133" width="0.0129%" height="15" fill="rgb(234,36,40)" fg:x="2030" fg:w="4"/><text x="6.7933%" y="143.50"></text></g><g><title>test.exe`alloc::slice::impl$0::to_vec_in::impl$1::to_vec(ref$&lt;slice2$&lt;tuple$ (157 samples, 0.51%)</title><rect x="6.0534%" y="229" width="0.5061%" height="15" fill="rgb(213,64,8)" fg:x="1878" fg:w="157"/><text x="6.3034%" y="239.50"></text></g><g><title>test.exe`alloc::vec::impl$11::clone(alloc::vec::Vec&lt;tuple$ (158 samples, 0.51%)</title><rect x="6.0534%" y="261" width="0.5093%" height="15" fill="rgb(210,75,36)" fg:x="1878" fg:w="158"/><text x="6.3034%" y="271.50"></text></g><g><title>test.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;tuple$ (158 samples, 0.51%)</title><rect x="6.0534%" y="245" width="0.5093%" height="15" fill="rgb(229,88,21)" fg:x="1878" fg:w="158"/><text x="6.3034%" y="255.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::insertion_sort_shift_left&lt;tuple$&lt;u32,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, unsigned long long, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (7 samples, 0.02%)</title><rect x="6.5788%" y="229" width="0.0226%" height="15" fill="rgb(252,204,47)" fg:x="2041" fg:w="7"/><text x="6.8288%" y="239.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::insert_tail(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (5 samples, 0.02%)</title><rect x="6.5852%" y="213" width="0.0161%" height="15" fill="rgb(208,77,27)" fg:x="2043" fg:w="5"/><text x="6.8352%" y="223.50"></text></g><g><title>test.exe`core::slice::sort::shared::find_existing_run(ref$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (9 samples, 0.03%)</title><rect x="6.6304%" y="213" width="0.0290%" height="15" fill="rgb(221,76,26)" fg:x="2057" fg:w="9"/><text x="6.8804%" y="223.50"></text></g><g><title>test.exe`core::slice::impl$0::sort_unstable_by::closure$0(core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt;*, tuple$&lt;u32,f64&gt;*, tuple$ (6 samples, 0.02%)</title><rect x="6.6400%" y="197" width="0.0193%" height="15" fill="rgb(225,139,18)" fg:x="2060" fg:w="6"/><text x="6.8900%" y="207.50"></text></g><g><title>test.exe`mchess::search::order::impl$0::sort_moves::closure$0(mchess::search::order::impl$0::sort_moves::closure_env$0*, tuple$&lt;u32,f64&gt;*, tuple$ (4 samples, 0.01%)</title><rect x="6.6465%" y="181" width="0.0129%" height="15" fill="rgb(230,137,11)" fg:x="2062" fg:w="4"/><text x="6.8965%" y="191.50"></text></g><g><title>test.exe`core::f64::impl$0::total_cmp (4 samples, 0.01%)</title><rect x="6.6465%" y="165" width="0.0129%" height="15" fill="rgb(212,28,1)" fg:x="2062" fg:w="4"/><text x="6.8965%" y="175.50"></text></g><g><title>test.exe`core::iter::range::impl$6::next(core::ops::range::Range (19 samples, 0.06%)</title><rect x="6.6980%" y="181" width="0.0612%" height="15" fill="rgb(248,164,17)" fg:x="2078" fg:w="19"/><text x="6.9480%" y="191.50"></text></g><g><title>test.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (19 samples, 0.06%)</title><rect x="6.6980%" y="165" width="0.0612%" height="15" fill="rgb(222,171,42)" fg:x="2078" fg:w="19"/><text x="6.9480%" y="175.50"></text></g><g><title>test.exe`core::cmp::impls::impl$58::lt (15 samples, 0.05%)</title><rect x="6.7109%" y="149" width="0.0483%" height="15" fill="rgb(243,84,45)" fg:x="2082" fg:w="15"/><text x="6.9609%" y="159.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::merge_down(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (9 samples, 0.03%)</title><rect x="6.8528%" y="133" width="0.0290%" height="15" fill="rgb(252,49,23)" fg:x="2126" fg:w="9"/><text x="7.1028%" y="143.50"></text></g><g><title>test.exe`core::slice::impl$0::sort_unstable_by::closure$0(core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt;*, tuple$&lt;u32,f64&gt;*, tuple$ (4 samples, 0.01%)</title><rect x="6.8689%" y="117" width="0.0129%" height="15" fill="rgb(215,19,7)" fg:x="2131" fg:w="4"/><text x="7.1189%" y="127.50"></text></g><g><title>test.exe`core::intrinsics::copy_nonoverlapping(tuple$&lt;u32,f64&gt;*, tuple$ (4 samples, 0.01%)</title><rect x="6.8882%" y="117" width="0.0129%" height="15" fill="rgb(238,81,41)" fg:x="2137" fg:w="4"/><text x="7.1382%" y="127.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::bidirectional_merge(ref$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (19 samples, 0.06%)</title><rect x="6.8528%" y="149" width="0.0612%" height="15" fill="rgb(210,199,37)" fg:x="2126" fg:w="19"/><text x="7.1028%" y="159.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::merge_up(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (10 samples, 0.03%)</title><rect x="6.8818%" y="133" width="0.0322%" height="15" fill="rgb(244,192,49)" fg:x="2135" fg:w="10"/><text x="7.1318%" y="143.50"></text></g><g><title>test.exe`core::bool::impl$0::select_unpredictable(bool, tuple$&lt;u32,f64&gt;*, tuple$ (7 samples, 0.02%)</title><rect x="6.9333%" y="133" width="0.0226%" height="15" fill="rgb(226,211,11)" fg:x="2151" fg:w="7"/><text x="7.1833%" y="143.50"></text></g><g><title>test.exe`core::intrinsics::copy_nonoverlapping(tuple$&lt;u32,f64&gt;*, tuple$ (4 samples, 0.01%)</title><rect x="6.9559%" y="133" width="0.0129%" height="15" fill="rgb(236,162,54)" fg:x="2158" fg:w="4"/><text x="7.2059%" y="143.50"></text></g><g><title>test.exe`core::ptr::const_ptr::impl$0::add(tuple$ (4 samples, 0.01%)</title><rect x="6.9688%" y="133" width="0.0129%" height="15" fill="rgb(220,229,9)" fg:x="2162" fg:w="4"/><text x="7.2188%" y="143.50"></text></g><g><title>test.exe`core::cmp::impl$7::eq (5 samples, 0.02%)</title><rect x="6.9817%" y="117" width="0.0161%" height="15" fill="rgb(250,87,22)" fg:x="2166" fg:w="5"/><text x="7.2317%" y="127.50"></text></g><g><title>test.exe`core::ptr::mut_ptr::impl$0::add(tuple$ (83 samples, 0.27%)</title><rect x="6.7593%" y="181" width="0.2675%" height="15" fill="rgb(239,43,17)" fg:x="2097" fg:w="83"/><text x="7.0093%" y="191.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::sort8_stable&lt;tuple$&lt;u32,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt; &gt;(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (56 samples, 0.18%)</title><rect x="6.8463%" y="165" width="0.1805%" height="15" fill="rgb(231,177,25)" fg:x="2124" fg:w="56"/><text x="7.0963%" y="175.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::sort4_stable(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (35 samples, 0.11%)</title><rect x="6.9140%" y="149" width="0.1128%" height="15" fill="rgb(219,179,1)" fg:x="2145" fg:w="35"/><text x="7.1640%" y="159.50"></text></g><g><title>test.exe`core::slice::impl$0::sort_unstable_by::closure$0(core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt;*, tuple$&lt;u32,f64&gt;*, tuple$ (14 samples, 0.05%)</title><rect x="6.9817%" y="133" width="0.0451%" height="15" fill="rgb(238,219,53)" fg:x="2166" fg:w="14"/><text x="7.2317%" y="143.50"></text></g><g><title>test.exe`mchess::search::order::impl$0::sort_moves::closure$0(mchess::search::order::impl$0::sort_moves::closure_env$0*, tuple$&lt;u32,f64&gt;*, tuple$ (9 samples, 0.03%)</title><rect x="6.9978%" y="117" width="0.0290%" height="15" fill="rgb(232,167,36)" fg:x="2171" fg:w="9"/><text x="7.2478%" y="127.50"></text></g><g><title>test.exe`core::f64::impl$0::total_cmp (9 samples, 0.03%)</title><rect x="6.9978%" y="101" width="0.0290%" height="15" fill="rgb(244,19,51)" fg:x="2171" fg:w="9"/><text x="7.2478%" y="111.50"></text></g><g><title>test.exe`core::iter::range::impl$6::next(core::ops::range::Range (5 samples, 0.02%)</title><rect x="7.0558%" y="165" width="0.0161%" height="15" fill="rgb(224,6,22)" fg:x="2189" fg:w="5"/><text x="7.3058%" y="175.50"></text></g><g><title>test.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (5 samples, 0.02%)</title><rect x="7.0558%" y="149" width="0.0161%" height="15" fill="rgb(224,145,5)" fg:x="2189" fg:w="5"/><text x="7.3058%" y="159.50"></text></g><g><title>test.exe`core::cmp::impls::impl$58::lt (5 samples, 0.02%)</title><rect x="7.0558%" y="133" width="0.0161%" height="15" fill="rgb(234,130,49)" fg:x="2189" fg:w="5"/><text x="7.3058%" y="143.50"></text></g><g><title>test.exe`core::intrinsics::copy_nonoverlapping(tuple$&lt;u32,f64&gt;*, tuple$ (28 samples, 0.09%)</title><rect x="7.1429%" y="149" width="0.0903%" height="15" fill="rgb(254,6,2)" fg:x="2216" fg:w="28"/><text x="7.3929%" y="159.50"></text></g><g><title>test.exe`core::ptr::const_ptr::impl$0::wrapping_sub(tuple$ (12 samples, 0.04%)</title><rect x="7.2331%" y="149" width="0.0387%" height="15" fill="rgb(208,96,46)" fg:x="2244" fg:w="12"/><text x="7.4831%" y="159.50"></text></g><g><title>test.exe`core::ptr::const_ptr::impl$0::wrapping_offset(tuple$ (12 samples, 0.04%)</title><rect x="7.2331%" y="133" width="0.0387%" height="15" fill="rgb(239,3,39)" fg:x="2244" fg:w="12"/><text x="7.4831%" y="143.50"></text></g><g><title>test.exe`core::cmp::impl$7::eq (10 samples, 0.03%)</title><rect x="7.2750%" y="133" width="0.0322%" height="15" fill="rgb(233,210,1)" fg:x="2257" fg:w="10"/><text x="7.5250%" y="143.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::merge_down(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (98 samples, 0.32%)</title><rect x="7.0719%" y="165" width="0.3159%" height="15" fill="rgb(244,137,37)" fg:x="2194" fg:w="98"/><text x="7.3219%" y="175.50"></text></g><g><title>test.exe`core::slice::impl$0::sort_unstable_by::closure$0(core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt;*, tuple$&lt;u32,f64&gt;*, tuple$ (35 samples, 0.11%)</title><rect x="7.2750%" y="149" width="0.1128%" height="15" fill="rgb(240,136,2)" fg:x="2257" fg:w="35"/><text x="7.5250%" y="159.50"></text></g><g><title>test.exe`mchess::search::order::impl$0::sort_moves::closure$0(mchess::search::order::impl$0::sort_moves::closure_env$0*, tuple$&lt;u32,f64&gt;*, tuple$ (25 samples, 0.08%)</title><rect x="7.3072%" y="133" width="0.0806%" height="15" fill="rgb(239,18,37)" fg:x="2267" fg:w="25"/><text x="7.5572%" y="143.50"></text></g><g><title>test.exe`core::f64::impl$0::total_cmp (25 samples, 0.08%)</title><rect x="7.3072%" y="117" width="0.0806%" height="15" fill="rgb(218,185,22)" fg:x="2267" fg:w="25"/><text x="7.5572%" y="127.50"></text></g><g><title>test.exe`core::intrinsics::copy_nonoverlapping(tuple$&lt;u32,f64&gt;*, tuple$ (23 samples, 0.07%)</title><rect x="7.4265%" y="149" width="0.0741%" height="15" fill="rgb(225,218,4)" fg:x="2304" fg:w="23"/><text x="7.6765%" y="159.50"></text></g><g><title>test.exe`core::cmp::impl$7::eq (19 samples, 0.06%)</title><rect x="7.5006%" y="133" width="0.0612%" height="15" fill="rgb(230,182,32)" fg:x="2327" fg:w="19"/><text x="7.7506%" y="143.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::bidirectional_merge(ref$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (186 samples, 0.60%)</title><rect x="7.0268%" y="181" width="0.5995%" height="15" fill="rgb(242,56,43)" fg:x="2180" fg:w="186"/><text x="7.2768%" y="191.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::merge_up(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (74 samples, 0.24%)</title><rect x="7.3878%" y="165" width="0.2385%" height="15" fill="rgb(233,99,24)" fg:x="2292" fg:w="74"/><text x="7.6378%" y="175.50"></text></g><g><title>test.exe`core::slice::impl$0::sort_unstable_by::closure$0(core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt;*, tuple$&lt;u32,f64&gt;*, tuple$ (39 samples, 0.13%)</title><rect x="7.5006%" y="149" width="0.1257%" height="15" fill="rgb(234,209,42)" fg:x="2327" fg:w="39"/><text x="7.7506%" y="159.50"></text></g><g><title>test.exe`mchess::search::order::impl$0::sort_moves::closure$0(mchess::search::order::impl$0::sort_moves::closure_env$0*, tuple$&lt;u32,f64&gt;*, tuple$ (20 samples, 0.06%)</title><rect x="7.5619%" y="133" width="0.0645%" height="15" fill="rgb(227,7,12)" fg:x="2346" fg:w="20"/><text x="7.8119%" y="143.50"></text></g><g><title>test.exe`core::f64::impl$0::total_cmp (20 samples, 0.06%)</title><rect x="7.5619%" y="117" width="0.0645%" height="15" fill="rgb(245,203,43)" fg:x="2346" fg:w="20"/><text x="7.8119%" y="127.50"></text></g><g><title>test.exe`core::intrinsics::copy_nonoverlapping(tuple$&lt;u32,f64&gt;*, tuple$ (27 samples, 0.09%)</title><rect x="7.9197%" y="165" width="0.0870%" height="15" fill="rgb(238,205,33)" fg:x="2457" fg:w="27"/><text x="8.1697%" y="175.50"></text></g><g><title>test.exe`core::ptr::drop_in_place(core::slice::sort::shared::smallsort::CopyOnDrop&lt;tuple$ (14 samples, 0.05%)</title><rect x="8.0067%" y="165" width="0.0451%" height="15" fill="rgb(231,56,7)" fg:x="2484" fg:w="14"/><text x="8.2567%" y="175.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::impl$7::drop(core::slice::sort::shared::smallsort::CopyOnDrop&lt;tuple$ (14 samples, 0.05%)</title><rect x="8.0067%" y="149" width="0.0451%" height="15" fill="rgb(244,186,29)" fg:x="2484" fg:w="14"/><text x="8.2567%" y="159.50"></text></g><g><title>test.exe`core::intrinsics::copy_nonoverlapping(tuple$&lt;u32,f64&gt;*, tuple$ (14 samples, 0.05%)</title><rect x="8.0067%" y="133" width="0.0451%" height="15" fill="rgb(234,111,31)" fg:x="2484" fg:w="14"/><text x="8.2567%" y="143.50"></text></g><g><title>test.exe`core::ptr::mut_ptr::impl$0::read(tuple$ (8 samples, 0.03%)</title><rect x="8.0518%" y="165" width="0.0258%" height="15" fill="rgb(241,149,10)" fg:x="2498" fg:w="8"/><text x="8.3018%" y="175.50"></text></g><g><title>test.exe`core::ptr::read(tuple$ (8 samples, 0.03%)</title><rect x="8.0518%" y="149" width="0.0258%" height="15" fill="rgb(249,206,44)" fg:x="2498" fg:w="8"/><text x="8.3018%" y="159.50"></text></g><g><title>test.exe`core::cmp::impl$7::eq (7 samples, 0.02%)</title><rect x="8.0776%" y="149" width="0.0226%" height="15" fill="rgb(251,153,30)" fg:x="2506" fg:w="7"/><text x="8.3276%" y="159.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::insert_tail(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (195 samples, 0.63%)</title><rect x="7.6264%" y="181" width="0.6285%" height="15" fill="rgb(239,152,38)" fg:x="2366" fg:w="195"/><text x="7.8764%" y="191.50"></text></g><g><title>test.exe`core::slice::impl$0::sort_unstable_by::closure$0(core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt;*, tuple$&lt;u32,f64&gt;*, tuple$ (55 samples, 0.18%)</title><rect x="8.0776%" y="165" width="0.1773%" height="15" fill="rgb(249,139,47)" fg:x="2506" fg:w="55"/><text x="8.3276%" y="175.50"></text></g><g><title>test.exe`mchess::search::order::impl$0::sort_moves::closure$0(mchess::search::order::impl$0::sort_moves::closure_env$0*, tuple$&lt;u32,f64&gt;*, tuple$ (48 samples, 0.15%)</title><rect x="8.1002%" y="149" width="0.1547%" height="15" fill="rgb(244,64,35)" fg:x="2513" fg:w="48"/><text x="8.3502%" y="159.50"></text></g><g><title>test.exe`core::f64::impl$0::total_cmp (48 samples, 0.15%)</title><rect x="8.1002%" y="133" width="0.1547%" height="15" fill="rgb(216,46,15)" fg:x="2513" fg:w="48"/><text x="8.3502%" y="143.50"></text></g><g><title>test.exe`core::ptr::const_ptr::impl$0::wrapping_sub(tuple$ (7 samples, 0.02%)</title><rect x="8.2742%" y="133" width="0.0226%" height="15" fill="rgb(250,74,19)" fg:x="2567" fg:w="7"/><text x="8.5242%" y="143.50"></text></g><g><title>test.exe`core::ptr::const_ptr::impl$0::wrapping_offset(tuple$ (7 samples, 0.02%)</title><rect x="8.2742%" y="117" width="0.0226%" height="15" fill="rgb(249,42,33)" fg:x="2567" fg:w="7"/><text x="8.5242%" y="127.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::merge_down(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (16 samples, 0.05%)</title><rect x="8.2613%" y="149" width="0.0516%" height="15" fill="rgb(242,149,17)" fg:x="2563" fg:w="16"/><text x="8.5113%" y="159.50"></text></g><g><title>test.exe`core::slice::impl$0::sort_unstable_by::closure$0(core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt;*, tuple$&lt;u32,f64&gt;*, tuple$ (5 samples, 0.02%)</title><rect x="8.2968%" y="133" width="0.0161%" height="15" fill="rgb(244,29,21)" fg:x="2574" fg:w="5"/><text x="8.5468%" y="143.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::bidirectional_merge(ref$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (28 samples, 0.09%)</title><rect x="8.2613%" y="165" width="0.0903%" height="15" fill="rgb(220,130,37)" fg:x="2563" fg:w="28"/><text x="8.5113%" y="175.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::merge_up(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (12 samples, 0.04%)</title><rect x="8.3129%" y="149" width="0.0387%" height="15" fill="rgb(211,67,2)" fg:x="2579" fg:w="12"/><text x="8.5629%" y="159.50"></text></g><g><title>test.exe`core::slice::impl$0::sort_unstable_by::closure$0(core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt;*, tuple$&lt;u32,f64&gt;*, tuple$ (5 samples, 0.02%)</title><rect x="8.3355%" y="133" width="0.0161%" height="15" fill="rgb(235,68,52)" fg:x="2586" fg:w="5"/><text x="8.5855%" y="143.50"></text></g><g><title>test.exe`core::intrinsics::copy_nonoverlapping(tuple$&lt;u32,f64&gt;*, tuple$ (6 samples, 0.02%)</title><rect x="8.3709%" y="149" width="0.0193%" height="15" fill="rgb(246,142,3)" fg:x="2597" fg:w="6"/><text x="8.6209%" y="159.50"></text></g><g><title>test.exe`core::cmp::impl$7::eq (5 samples, 0.02%)</title><rect x="8.4032%" y="133" width="0.0161%" height="15" fill="rgb(241,25,7)" fg:x="2607" fg:w="5"/><text x="8.6532%" y="143.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::small_sort_general&lt;tuple$&lt;u32,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (556 samples, 1.79%)</title><rect x="6.6594%" y="213" width="1.7922%" height="15" fill="rgb(242,119,39)" fg:x="2066" fg:w="556"/><text x="6.9094%" y="223.50">t..</text></g><g><title>test.exe`core::slice::sort::shared::smallsort::small_sort_general_with_scratch(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;tuple$&lt;u32,f64&gt; &gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (549 samples, 1.77%)</title><rect x="6.6819%" y="197" width="1.7696%" height="15" fill="rgb(241,98,45)" fg:x="2073" fg:w="549"/><text x="6.9319%" y="207.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::sort8_stable&lt;tuple$&lt;u32,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt; &gt;(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (60 samples, 0.19%)</title><rect x="8.2581%" y="181" width="0.1934%" height="15" fill="rgb(254,28,30)" fg:x="2562" fg:w="60"/><text x="8.5081%" y="191.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::sort4_stable(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (31 samples, 0.10%)</title><rect x="8.3516%" y="165" width="0.0999%" height="15" fill="rgb(241,142,54)" fg:x="2591" fg:w="31"/><text x="8.6016%" y="175.50"></text></g><g><title>test.exe`core::slice::impl$0::sort_unstable_by::closure$0(core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt;*, tuple$&lt;u32,f64&gt;*, tuple$ (15 samples, 0.05%)</title><rect x="8.4032%" y="149" width="0.0483%" height="15" fill="rgb(222,85,15)" fg:x="2607" fg:w="15"/><text x="8.6532%" y="159.50"></text></g><g><title>test.exe`mchess::search::order::impl$0::sort_moves::closure$0(mchess::search::order::impl$0::sort_moves::closure_env$0*, tuple$&lt;u32,f64&gt;*, tuple$ (10 samples, 0.03%)</title><rect x="8.4193%" y="133" width="0.0322%" height="15" fill="rgb(210,85,47)" fg:x="2612" fg:w="10"/><text x="8.6693%" y="143.50"></text></g><g><title>test.exe`core::f64::impl$0::total_cmp (10 samples, 0.03%)</title><rect x="8.4193%" y="117" width="0.0322%" height="15" fill="rgb(224,206,25)" fg:x="2612" fg:w="10"/><text x="8.6693%" y="127.50"></text></g><g><title>test.exe`core::slice::sort::shared::pivot::choose_pivot(ref$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (11 samples, 0.04%)</title><rect x="8.4612%" y="197" width="0.0355%" height="15" fill="rgb(243,201,19)" fg:x="2625" fg:w="11"/><text x="8.7112%" y="207.50"></text></g><g><title>test.exe`core::slice::sort::shared::pivot::median3(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (5 samples, 0.02%)</title><rect x="8.4805%" y="181" width="0.0161%" height="15" fill="rgb(236,59,4)" fg:x="2631" fg:w="5"/><text x="8.7305%" y="191.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::impl$3::small_sort(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (4 samples, 0.01%)</title><rect x="8.4966%" y="197" width="0.0129%" height="15" fill="rgb(254,179,45)" fg:x="2636" fg:w="4"/><text x="8.7466%" y="207.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::impl$6::small_sort(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (4 samples, 0.01%)</title><rect x="8.4966%" y="181" width="0.0129%" height="15" fill="rgb(226,14,10)" fg:x="2636" fg:w="4"/><text x="8.7466%" y="191.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::bidirectional_merge(ref$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (5 samples, 0.02%)</title><rect x="8.5514%" y="133" width="0.0161%" height="15" fill="rgb(244,27,41)" fg:x="2653" fg:w="5"/><text x="8.8014%" y="143.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::merge_up(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (4 samples, 0.01%)</title><rect x="8.5547%" y="117" width="0.0129%" height="15" fill="rgb(235,35,32)" fg:x="2654" fg:w="4"/><text x="8.8047%" y="127.50"></text></g><g><title>test.exe`core::ptr::mut_ptr::impl$0::add(tuple$ (14 samples, 0.05%)</title><rect x="8.5353%" y="165" width="0.0451%" height="15" fill="rgb(218,68,31)" fg:x="2648" fg:w="14"/><text x="8.7853%" y="175.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::sort8_stable&lt;tuple$&lt;u32,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt; &gt;(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (10 samples, 0.03%)</title><rect x="8.5482%" y="149" width="0.0322%" height="15" fill="rgb(207,120,37)" fg:x="2652" fg:w="10"/><text x="8.7982%" y="159.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::sort4_stable(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (4 samples, 0.01%)</title><rect x="8.5676%" y="133" width="0.0129%" height="15" fill="rgb(227,98,0)" fg:x="2658" fg:w="4"/><text x="8.8176%" y="143.50"></text></g><g><title>test.exe`core::intrinsics::copy_nonoverlapping(tuple$&lt;u32,f64&gt;*, tuple$ (6 samples, 0.02%)</title><rect x="8.6256%" y="133" width="0.0193%" height="15" fill="rgb(207,7,3)" fg:x="2676" fg:w="6"/><text x="8.8756%" y="143.50"></text></g><g><title>test.exe`core::cmp::impl$7::eq (4 samples, 0.01%)</title><rect x="8.6610%" y="117" width="0.0129%" height="15" fill="rgb(206,98,19)" fg:x="2687" fg:w="4"/><text x="8.9110%" y="127.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::merge_down(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (38 samples, 0.12%)</title><rect x="8.5933%" y="149" width="0.1225%" height="15" fill="rgb(217,5,26)" fg:x="2666" fg:w="38"/><text x="8.8433%" y="159.50"></text></g><g><title>test.exe`core::slice::impl$0::sort_unstable_by::closure$0(core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt;*, tuple$&lt;u32,f64&gt;*, tuple$ (17 samples, 0.05%)</title><rect x="8.6610%" y="133" width="0.0548%" height="15" fill="rgb(235,190,38)" fg:x="2687" fg:w="17"/><text x="8.9110%" y="143.50"></text></g><g><title>test.exe`mchess::search::order::impl$0::sort_moves::closure$0(mchess::search::order::impl$0::sort_moves::closure_env$0*, tuple$&lt;u32,f64&gt;*, tuple$ (13 samples, 0.04%)</title><rect x="8.6739%" y="117" width="0.0419%" height="15" fill="rgb(247,86,24)" fg:x="2691" fg:w="13"/><text x="8.9239%" y="127.50"></text></g><g><title>test.exe`core::f64::impl$0::total_cmp (13 samples, 0.04%)</title><rect x="8.6739%" y="101" width="0.0419%" height="15" fill="rgb(205,101,16)" fg:x="2691" fg:w="13"/><text x="8.9239%" y="111.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::bidirectional_merge(ref$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (55 samples, 0.18%)</title><rect x="8.5805%" y="165" width="0.1773%" height="15" fill="rgb(246,168,33)" fg:x="2662" fg:w="55"/><text x="8.8305%" y="175.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::merge_up(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (13 samples, 0.04%)</title><rect x="8.7158%" y="149" width="0.0419%" height="15" fill="rgb(231,114,1)" fg:x="2704" fg:w="13"/><text x="8.9658%" y="159.50"></text></g><g><title>test.exe`core::slice::impl$0::sort_unstable_by::closure$0(core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt;*, tuple$&lt;u32,f64&gt;*, tuple$ (6 samples, 0.02%)</title><rect x="8.7384%" y="133" width="0.0193%" height="15" fill="rgb(207,184,53)" fg:x="2711" fg:w="6"/><text x="8.9884%" y="143.50"></text></g><g><title>test.exe`mchess::search::order::impl$0::sort_moves::closure$0(mchess::search::order::impl$0::sort_moves::closure_env$0*, tuple$&lt;u32,f64&gt;*, tuple$ (4 samples, 0.01%)</title><rect x="8.7448%" y="117" width="0.0129%" height="15" fill="rgb(224,95,51)" fg:x="2713" fg:w="4"/><text x="8.9948%" y="127.50"></text></g><g><title>test.exe`core::f64::impl$0::total_cmp (4 samples, 0.01%)</title><rect x="8.7448%" y="101" width="0.0129%" height="15" fill="rgb(212,188,45)" fg:x="2713" fg:w="4"/><text x="8.9948%" y="111.50"></text></g><g><title>test.exe`core::intrinsics::copy_nonoverlapping(tuple$&lt;u32,f64&gt;*, tuple$ (4 samples, 0.01%)</title><rect x="8.8222%" y="149" width="0.0129%" height="15" fill="rgb(223,154,38)" fg:x="2737" fg:w="4"/><text x="9.0722%" y="159.50"></text></g><g><title>test.exe`core::ptr::mut_ptr::impl$0::read(tuple$ (5 samples, 0.02%)</title><rect x="8.8448%" y="149" width="0.0161%" height="15" fill="rgb(251,22,52)" fg:x="2744" fg:w="5"/><text x="9.0948%" y="159.50"></text></g><g><title>test.exe`core::ptr::read(tuple$ (5 samples, 0.02%)</title><rect x="8.8448%" y="133" width="0.0161%" height="15" fill="rgb(229,209,22)" fg:x="2744" fg:w="5"/><text x="9.0948%" y="143.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::insert_tail(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (39 samples, 0.13%)</title><rect x="8.7577%" y="165" width="0.1257%" height="15" fill="rgb(234,138,34)" fg:x="2717" fg:w="39"/><text x="9.0077%" y="175.50"></text></g><g><title>test.exe`core::slice::impl$0::sort_unstable_by::closure$0(core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt;*, tuple$&lt;u32,f64&gt;*, tuple$ (7 samples, 0.02%)</title><rect x="8.8609%" y="149" width="0.0226%" height="15" fill="rgb(212,95,11)" fg:x="2749" fg:w="7"/><text x="9.1109%" y="159.50"></text></g><g><title>test.exe`mchess::search::order::impl$0::sort_moves::closure$0(mchess::search::order::impl$0::sort_moves::closure_env$0*, tuple$&lt;u32,f64&gt;*, tuple$ (4 samples, 0.01%)</title><rect x="8.8706%" y="133" width="0.0129%" height="15" fill="rgb(240,179,47)" fg:x="2752" fg:w="4"/><text x="9.1206%" y="143.50"></text></g><g><title>test.exe`core::f64::impl$0::total_cmp (4 samples, 0.01%)</title><rect x="8.8706%" y="117" width="0.0129%" height="15" fill="rgb(240,163,11)" fg:x="2752" fg:w="4"/><text x="9.1206%" y="127.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::sort4_stable(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (14 samples, 0.05%)</title><rect x="8.8834%" y="165" width="0.0451%" height="15" fill="rgb(236,37,12)" fg:x="2756" fg:w="14"/><text x="9.1334%" y="175.50"></text></g><g><title>test.exe`core::slice::impl$0::sort_unstable_by::closure$0(core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt;*, tuple$&lt;u32,f64&gt;*, tuple$ (7 samples, 0.02%)</title><rect x="8.9060%" y="149" width="0.0226%" height="15" fill="rgb(232,164,16)" fg:x="2763" fg:w="7"/><text x="9.1560%" y="159.50"></text></g><g><title>test.exe`mchess::search::order::impl$0::sort_moves::closure$0(mchess::search::order::impl$0::sort_moves::closure_env$0*, tuple$&lt;u32,f64&gt;*, tuple$ (5 samples, 0.02%)</title><rect x="8.9125%" y="133" width="0.0161%" height="15" fill="rgb(244,205,15)" fg:x="2765" fg:w="5"/><text x="9.1625%" y="143.50"></text></g><g><title>test.exe`core::f64::impl$0::total_cmp (5 samples, 0.02%)</title><rect x="8.9125%" y="117" width="0.0161%" height="15" fill="rgb(223,117,47)" fg:x="2765" fg:w="5"/><text x="9.1625%" y="127.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::merge_down(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (6 samples, 0.02%)</title><rect x="8.9286%" y="133" width="0.0193%" height="15" fill="rgb(244,107,35)" fg:x="2770" fg:w="6"/><text x="9.1786%" y="143.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::bidirectional_merge(ref$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (9 samples, 0.03%)</title><rect x="8.9286%" y="149" width="0.0290%" height="15" fill="rgb(205,140,8)" fg:x="2770" fg:w="9"/><text x="9.1786%" y="159.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::small_sort_general&lt;tuple$&lt;u32,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (148 samples, 0.48%)</title><rect x="8.5095%" y="197" width="0.4771%" height="15" fill="rgb(228,84,46)" fg:x="2640" fg:w="148"/><text x="8.7595%" y="207.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::small_sort_general_with_scratch(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;tuple$&lt;u32,f64&gt; &gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (144 samples, 0.46%)</title><rect x="8.5224%" y="181" width="0.4642%" height="15" fill="rgb(254,188,9)" fg:x="2644" fg:w="144"/><text x="8.7724%" y="191.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::sort8_stable&lt;tuple$&lt;u32,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt; &gt;(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (18 samples, 0.06%)</title><rect x="8.9286%" y="165" width="0.0580%" height="15" fill="rgb(206,112,54)" fg:x="2770" fg:w="18"/><text x="9.1786%" y="175.50"></text></g><g><title>test.exe`core::slice::sort::shared::smallsort::sort4_stable(tuple$&lt;u32,f64&gt;*, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (9 samples, 0.03%)</title><rect x="8.9576%" y="149" width="0.0290%" height="15" fill="rgb(216,84,49)" fg:x="2779" fg:w="9"/><text x="9.2076%" y="159.50"></text></g><g><title>test.exe`core::slice::impl$0::sort_unstable_by::closure$0(core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt;*, tuple$&lt;u32,f64&gt;*, tuple$ (5 samples, 0.02%)</title><rect x="8.9705%" y="133" width="0.0161%" height="15" fill="rgb(214,194,35)" fg:x="2783" fg:w="5"/><text x="9.2205%" y="143.50"></text></g><g><title>test.exe`mchess::search::order::impl$0::sort_moves::closure$0(mchess::search::order::impl$0::sort_moves::closure_env$0*, tuple$&lt;u32,f64&gt;*, tuple$ (5 samples, 0.02%)</title><rect x="8.9705%" y="117" width="0.0161%" height="15" fill="rgb(249,28,3)" fg:x="2783" fg:w="5"/><text x="9.2205%" y="127.50"></text></g><g><title>test.exe`core::f64::impl$0::total_cmp (5 samples, 0.02%)</title><rect x="8.9705%" y="101" width="0.0161%" height="15" fill="rgb(222,56,52)" fg:x="2783" fg:w="5"/><text x="9.2205%" y="111.50"></text></g><g><title>test.exe`core::slice::impl$0::swap_unchecked(ref_mut$&lt;slice2$&lt;tuple$ (8 samples, 0.03%)</title><rect x="8.9866%" y="181" width="0.0258%" height="15" fill="rgb(245,217,50)" fg:x="2788" fg:w="8"/><text x="9.2366%" y="191.50"></text></g><g><title>test.exe`core::ptr::swap(tuple$&lt;u32,f64&gt;*, tuple$ (8 samples, 0.03%)</title><rect x="8.9866%" y="165" width="0.0258%" height="15" fill="rgb(213,201,24)" fg:x="2788" fg:w="8"/><text x="9.2366%" y="175.50"></text></g><g><title>test.exe`core::intrinsics::copy_nonoverlapping(tuple$&lt;u32,f64&gt;*, tuple$ (8 samples, 0.03%)</title><rect x="8.9866%" y="149" width="0.0258%" height="15" fill="rgb(248,116,28)" fg:x="2788" fg:w="8"/><text x="9.2366%" y="159.50"></text></g><g><title>test.exe`core::ptr::mut_ptr::impl$0::add(tuple$ (4 samples, 0.01%)</title><rect x="9.0317%" y="165" width="0.0129%" height="15" fill="rgb(219,72,43)" fg:x="2802" fg:w="4"/><text x="9.2817%" y="175.50"></text></g><g><title>test.exe`core::intrinsics::copy(tuple$&lt;u32,f64&gt;*, tuple$ (5 samples, 0.02%)</title><rect x="9.0801%" y="149" width="0.0161%" height="15" fill="rgb(209,138,14)" fg:x="2817" fg:w="5"/><text x="9.3301%" y="159.50"></text></g><g><title>test.exe`core::intrinsics::copy_nonoverlapping(tuple$&lt;u32,f64&gt;*, tuple$ (16 samples, 0.05%)</title><rect x="9.0962%" y="149" width="0.0516%" height="15" fill="rgb(222,18,33)" fg:x="2822" fg:w="16"/><text x="9.3462%" y="159.50"></text></g><g><title>test.exe`core::cmp::impl$7::eq (7 samples, 0.02%)</title><rect x="9.1574%" y="133" width="0.0226%" height="15" fill="rgb(213,199,7)" fg:x="2841" fg:w="7"/><text x="9.4074%" y="143.50"></text></g><g><title>test.exe`core::slice::sort::unstable::quicksort::partition(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, unsigned long long, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (66 samples, 0.21%)</title><rect x="8.9866%" y="197" width="0.2127%" height="15" fill="rgb(250,110,10)" fg:x="2788" fg:w="66"/><text x="9.2366%" y="207.50"></text></g><g><title>test.exe`core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, tuple$&lt;u32,f64&gt;*, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (58 samples, 0.19%)</title><rect x="9.0124%" y="181" width="0.1870%" height="15" fill="rgb(248,123,6)" fg:x="2796" fg:w="58"/><text x="9.2624%" y="191.50"></text></g><g><title>test.exe`core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::closure$0(core::slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic::closure_env$0&lt;tuple$&lt;u32,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt; &gt;*, core::slice::sort::unstable::quicksort::PartitionState&lt;tuple$ (48 samples, 0.15%)</title><rect x="9.0446%" y="165" width="0.1547%" height="15" fill="rgb(206,91,31)" fg:x="2806" fg:w="48"/><text x="9.2946%" y="175.50"></text></g><g><title>test.exe`core::slice::impl$0::sort_unstable_by::closure$0(core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt;*, tuple$&lt;u32,f64&gt;*, tuple$ (13 samples, 0.04%)</title><rect x="9.1574%" y="149" width="0.0419%" height="15" fill="rgb(211,154,13)" fg:x="2841" fg:w="13"/><text x="9.4074%" y="159.50"></text></g><g><title>test.exe`mchess::search::order::impl$0::sort_moves::closure$0(mchess::search::order::impl$0::sort_moves::closure_env$0*, tuple$&lt;u32,f64&gt;*, tuple$ (6 samples, 0.02%)</title><rect x="9.1800%" y="133" width="0.0193%" height="15" fill="rgb(225,148,7)" fg:x="2848" fg:w="6"/><text x="9.4300%" y="143.50"></text></g><g><title>test.exe`core::f64::impl$0::total_cmp (6 samples, 0.02%)</title><rect x="9.1800%" y="117" width="0.0193%" height="15" fill="rgb(220,160,43)" fg:x="2848" fg:w="6"/><text x="9.4300%" y="127.50"></text></g><g><title>test.exe`core::slice::impl$0::sort_unstable_by(ref_mut$&lt;slice2$&lt;tuple$ (821 samples, 2.65%)</title><rect x="6.5627%" y="261" width="2.6463%" height="15" fill="rgb(213,52,39)" fg:x="2036" fg:w="821"/><text x="6.8127%" y="271.50">te..</text></g><g><title>test.exe`core::slice::sort::unstable::sort(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (821 samples, 2.65%)</title><rect x="6.5627%" y="245" width="2.6463%" height="15" fill="rgb(243,137,7)" fg:x="2036" fg:w="821"/><text x="6.8127%" y="255.50">te..</text></g><g><title>test.exe`core::slice::sort::unstable::ipnsort&lt;tuple$&lt;u32,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (809 samples, 2.61%)</title><rect x="6.6013%" y="229" width="2.6077%" height="15" fill="rgb(230,79,13)" fg:x="2048" fg:w="809"/><text x="6.8513%" y="239.50">te..</text></g><g><title>test.exe`core::slice::sort::unstable::quicksort::quicksort&lt;tuple$&lt;u32,f64&gt;,core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$&lt;u32,f64&gt;,mchess::search::order::impl$0::sort_moves::closure_env$0&gt; &gt;(ref_mut$&lt;slice2$&lt;tuple$&lt;u32,f64&gt; &gt; &gt;, enum2$&lt;core::option::Option&lt;ref$&lt;tuple$&lt;u32,f64&gt; &gt; &gt; &gt;, unsigned int, core::slice::impl$0::sort_unstable_by::closure_env$0&lt;tuple$ (235 samples, 0.76%)</title><rect x="8.4515%" y="213" width="0.7575%" height="15" fill="rgb(247,105,23)" fg:x="2622" fg:w="235"/><text x="8.7015%" y="223.50"></text></g><g><title>test.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter (5 samples, 0.02%)</title><rect x="9.2090%" y="261" width="0.0161%" height="15" fill="rgb(223,179,41)" fg:x="2857" fg:w="5"/><text x="9.4590%" y="271.50"></text></g><g><title>test.exe`mchess::moves::helper::is_castling (40 samples, 0.13%)</title><rect x="9.3960%" y="245" width="0.1289%" height="15" fill="rgb(218,9,34)" fg:x="2915" fg:w="40"/><text x="9.6460%" y="255.50"></text></g><g><title>test.exe`mchess::moves::helper::get_move_type (40 samples, 0.13%)</title><rect x="9.3960%" y="229" width="0.1289%" height="15" fill="rgb(222,106,8)" fg:x="2915" fg:w="40"/><text x="9.6460%" y="239.50"></text></g><g><title>test.exe`mchess::evaluation::evaluate_position (258 samples, 0.83%)</title><rect x="9.5797%" y="229" width="0.8316%" height="15" fill="rgb(211,220,0)" fg:x="2972" fg:w="258"/><text x="9.8297%" y="239.50"></text></g><g><title>test.exe`mchess::board::Board::calculate_phase (30 samples, 0.10%)</title><rect x="10.3146%" y="213" width="0.0967%" height="15" fill="rgb(229,52,16)" fg:x="3200" fg:w="30"/><text x="10.5646%" y="223.50"></text></g><g><title>test.exe`core::num::impl$9::count_ones (17 samples, 0.05%)</title><rect x="10.3565%" y="197" width="0.0548%" height="15" fill="rgb(212,155,18)" fg:x="3213" fg:w="17"/><text x="10.6065%" y="207.50"></text></g><g><title>test.exe`mchess::moves::Position::from_bitboard (33 samples, 0.11%)</title><rect x="10.4113%" y="229" width="0.1064%" height="15" fill="rgb(242,21,14)" fg:x="3230" fg:w="33"/><text x="10.6613%" y="239.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (177 samples, 0.57%)</title><rect x="11.0817%" y="149" width="0.5705%" height="15" fill="rgb(222,19,48)" fg:x="3438" fg:w="177"/><text x="11.3317%" y="159.50"></text></g><g><title>test.exe`mchess::moves::helper::get_to (17 samples, 0.05%)</title><rect x="11.6523%" y="149" width="0.0548%" height="15" fill="rgb(232,45,27)" fg:x="3615" fg:w="17"/><text x="11.9023%" y="159.50"></text></g><g><title>test.exe`mchess::moves::helper::get_piece_type (398 samples, 1.28%)</title><rect x="10.5177%" y="229" width="1.2829%" height="15" fill="rgb(249,103,42)" fg:x="3263" fg:w="398"/><text x="10.7677%" y="239.50"></text></g><g><title>test.exe`mchess::search::order::mvv_lva (376 samples, 1.21%)</title><rect x="10.5886%" y="213" width="1.2120%" height="15" fill="rgb(246,81,33)" fg:x="3285" fg:w="376"/><text x="10.8386%" y="223.50"></text></g><g><title>test.exe`mchess::moves::helper::is_capture (282 samples, 0.91%)</title><rect x="10.8916%" y="197" width="0.9090%" height="15" fill="rgb(252,33,42)" fg:x="3379" fg:w="282"/><text x="11.1416%" y="207.50"></text></g><g><title>test.exe`mchess::moves::helper::get_move_type (282 samples, 0.91%)</title><rect x="10.8916%" y="181" width="0.9090%" height="15" fill="rgb(209,212,41)" fg:x="3379" fg:w="282"/><text x="11.1416%" y="191.50"></text></g><g><title>test.exe`mchess::moves::helper::get_captured (232 samples, 0.75%)</title><rect x="11.0527%" y="165" width="0.7478%" height="15" fill="rgb(207,154,6)" fg:x="3429" fg:w="232"/><text x="11.3027%" y="175.50"></text></g><g><title>test.exe`mchess::moves::helper::is_en_passant (29 samples, 0.09%)</title><rect x="11.7071%" y="149" width="0.0935%" height="15" fill="rgb(223,64,47)" fg:x="3632" fg:w="29"/><text x="11.9571%" y="159.50"></text></g><g><title>test.exe`mchess::moves::helper::get_move_type (29 samples, 0.09%)</title><rect x="11.7071%" y="133" width="0.0935%" height="15" fill="rgb(211,161,38)" fg:x="3632" fg:w="29"/><text x="11.9571%" y="143.50"></text></g><g><title>test.exe`core::ptr::drop_in_place(alloc::vec::Vec (1,898 samples, 6.12%)</title><rect x="5.6891%" y="357" width="6.1178%" height="15" fill="rgb(219,138,40)" fg:x="1765" fg:w="1898"/><text x="5.9391%" y="367.50">test.exe..</text></g><g><title>test.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1,898 samples, 6.12%)</title><rect x="5.6891%" y="341" width="6.1178%" height="15" fill="rgb(241,228,46)" fg:x="1765" fg:w="1898"/><text x="5.9391%" y="351.50">test.exe..</text></g><g><title>test.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1,898 samples, 6.12%)</title><rect x="5.6891%" y="325" width="6.1178%" height="15" fill="rgb(223,209,38)" fg:x="1765" fg:w="1898"/><text x="5.9391%" y="335.50">test.exe..</text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1,889 samples, 6.09%)</title><rect x="5.7182%" y="309" width="6.0888%" height="15" fill="rgb(236,164,45)" fg:x="1774" fg:w="1889"/><text x="5.9682%" y="319.50">test.exe..</text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (1,887 samples, 6.08%)</title><rect x="5.7246%" y="293" width="6.0824%" height="15" fill="rgb(231,15,5)" fg:x="1776" fg:w="1887"/><text x="5.9746%" y="303.50">test.exe..</text></g><g><title>test.exe`mchess::search::Search::sort_moves(alloc::vec::Vec (1,882 samples, 6.07%)</title><rect x="5.7407%" y="277" width="6.0663%" height="15" fill="rgb(252,35,15)" fg:x="1781" fg:w="1882"/><text x="5.9907%" y="287.50">test.exe..</text></g><g><title>test.exe`mchess::search::Search::evaluate_move (801 samples, 2.58%)</title><rect x="9.2251%" y="261" width="2.5819%" height="15" fill="rgb(248,181,18)" fg:x="2862" fg:w="801"/><text x="9.4751%" y="271.50">te..</text></g><g><title>test.exe`mchess::search::order::ps_table (708 samples, 2.28%)</title><rect x="9.5249%" y="245" width="2.2821%" height="15" fill="rgb(233,39,42)" fg:x="2955" fg:w="708"/><text x="9.7749%" y="255.50">t..</text></g><g><title>test.exe`mchess::board::Board::get_attackers (7 samples, 0.02%)</title><rect x="11.8715%" y="245" width="0.0226%" height="15" fill="rgb(238,110,33)" fg:x="3683" fg:w="7"/><text x="12.1215%" y="255.50"></text></g><g><title>test.exe`mchess::board::Board::is_pinned (5 samples, 0.02%)</title><rect x="11.8940%" y="245" width="0.0161%" height="15" fill="rgb(233,195,10)" fg:x="3690" fg:w="5"/><text x="12.1440%" y="255.50"></text></g><g><title>test.exe`mchess::board::Board::get_pin (5 samples, 0.02%)</title><rect x="11.8940%" y="229" width="0.0161%" height="15" fill="rgb(254,105,3)" fg:x="3690" fg:w="5"/><text x="12.1440%" y="239.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain_mut::process_loop(unsigned long long, alloc::vec::impl$1::retain::closure_env$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$2&gt;*, alloc::vec::impl$1::retain_mut::BackshiftOnDrop (19 samples, 0.06%)</title><rect x="11.8618%" y="293" width="0.0612%" height="15" fill="rgb(221,225,9)" fg:x="3680" fg:w="19"/><text x="12.1118%" y="303.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain::closure$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$2&gt;(alloc::vec::impl$1::retain::closure_env$0 (17 samples, 0.05%)</title><rect x="11.8682%" y="277" width="0.0548%" height="15" fill="rgb(224,227,45)" fg:x="3682" fg:w="17"/><text x="12.1182%" y="287.50"></text></g><g><title>test.exe`mchess::moves::legal::impl$0::filter_legal_moves::closure$2 (16 samples, 0.05%)</title><rect x="11.8715%" y="261" width="0.0516%" height="15" fill="rgb(229,198,43)" fg:x="3683" fg:w="16"/><text x="12.1215%" y="271.50"></text></g><g><title>test.exe`mchess::moves::tables::AttackTables::is_between (4 samples, 0.01%)</title><rect x="11.9101%" y="245" width="0.0129%" height="15" fill="rgb(206,209,35)" fg:x="3695" fg:w="4"/><text x="12.1601%" y="255.50"></text></g><g><title>test.exe`alloc::sync::impl$30::deref(alloc::sync::Arc (11 samples, 0.04%)</title><rect x="13.2478%" y="229" width="0.0355%" height="15" fill="rgb(245,195,53)" fg:x="4110" fg:w="11"/><text x="13.4978%" y="239.50"></text></g><g><title>test.exe`alloc::sync::Arc&lt;mchess::moves::magic::Magic,alloc::alloc::Global&gt;::inner (8 samples, 0.03%)</title><rect x="13.2575%" y="213" width="0.0258%" height="15" fill="rgb(240,92,26)" fg:x="4113" fg:w="8"/><text x="13.5075%" y="223.50"></text></g><g><title>test.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;mchess::moves::magic::Magic&gt; &gt;::as_ref (8 samples, 0.03%)</title><rect x="13.2575%" y="197" width="0.0258%" height="15" fill="rgb(207,40,23)" fg:x="4113" fg:w="8"/><text x="13.5075%" y="207.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (32 samples, 0.10%)</title><rect x="13.2833%" y="229" width="0.1031%" height="15" fill="rgb(223,111,35)" fg:x="4121" fg:w="32"/><text x="13.5333%" y="239.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_bishop_moves (39 samples, 0.13%)</title><rect x="13.3864%" y="229" width="0.1257%" height="15" fill="rgb(229,147,28)" fg:x="4153" fg:w="39"/><text x="13.6364%" y="239.50"></text></g><g><title>test.exe`alloc::vec::impl$13::index(alloc::vec::Vec (8 samples, 0.03%)</title><rect x="13.5411%" y="213" width="0.0258%" height="15" fill="rgb(211,29,28)" fg:x="4201" fg:w="8"/><text x="13.7911%" y="223.50"></text></g><g><title>test.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (8 samples, 0.03%)</title><rect x="13.5411%" y="197" width="0.0258%" height="15" fill="rgb(228,72,33)" fg:x="4201" fg:w="8"/><text x="13.7911%" y="207.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::as_slice (8 samples, 0.03%)</title><rect x="13.5411%" y="181" width="0.0258%" height="15" fill="rgb(205,214,31)" fg:x="4201" fg:w="8"/><text x="13.7911%" y="191.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_rook_moves (18 samples, 0.06%)</title><rect x="13.5121%" y="229" width="0.0580%" height="15" fill="rgb(224,111,15)" fg:x="4192" fg:w="18"/><text x="13.7621%" y="239.50"></text></g><g><title>test.exe`mchess::moves::tables::AttackTables::get_line_mask (37 samples, 0.12%)</title><rect x="13.5701%" y="229" width="0.1193%" height="15" fill="rgb(253,21,26)" fg:x="4210" fg:w="37"/><text x="13.8201%" y="239.50"></text></g><g><title>test.exe`core::num::impl$9::trailing_zeros (20 samples, 0.06%)</title><rect x="13.6249%" y="213" width="0.0645%" height="15" fill="rgb(245,139,43)" fg:x="4227" fg:w="20"/><text x="13.8749%" y="223.50"></text></g><g><title>test.exe`mchess::board::Board::get_pin (360 samples, 1.16%)</title><rect x="12.5709%" y="245" width="1.1604%" height="15" fill="rgb(252,170,7)" fg:x="3900" fg:w="360"/><text x="12.8209%" y="255.50"></text></g><g><title>test.exe`mchess::piece::impl$7::eq (13 samples, 0.04%)</title><rect x="13.6894%" y="229" width="0.0419%" height="15" fill="rgb(231,118,14)" fg:x="4247" fg:w="13"/><text x="13.9394%" y="239.50"></text></g><g><title>test.exe`mchess::moves::helper::get_from (11 samples, 0.04%)</title><rect x="13.7313%" y="245" width="0.0355%" height="15" fill="rgb(238,83,0)" fg:x="4260" fg:w="11"/><text x="13.9813%" y="255.50"></text></g><g><title>test.exe`mchess::moves::helper::get_to (18 samples, 0.06%)</title><rect x="13.7668%" y="245" width="0.0580%" height="15" fill="rgb(221,39,39)" fg:x="4271" fg:w="18"/><text x="14.0168%" y="255.50"></text></g><g><title>test.exe`mchess::moves::helper::is_en_passant (32 samples, 0.10%)</title><rect x="13.8248%" y="245" width="0.1031%" height="15" fill="rgb(222,119,46)" fg:x="4289" fg:w="32"/><text x="14.0748%" y="255.50"></text></g><g><title>test.exe`mchess::moves::helper::get_move_type (32 samples, 0.10%)</title><rect x="13.8248%" y="229" width="0.1031%" height="15" fill="rgb(222,165,49)" fg:x="4289" fg:w="32"/><text x="14.0748%" y="239.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain (670 samples, 2.16%)</title><rect x="11.8553%" y="325" width="2.1596%" height="15" fill="rgb(219,113,52)" fg:x="3678" fg:w="670"/><text x="12.1053%" y="335.50">t..</text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain_mut(alloc::vec::impl$1::retain::closure_env$0 (670 samples, 2.16%)</title><rect x="11.8553%" y="309" width="2.1596%" height="15" fill="rgb(214,7,15)" fg:x="3678" fg:w="670"/><text x="12.1053%" y="319.50">t..</text></g><g><title>test.exe`alloc::vec::impl$1::retain_mut::process_loop(unsigned long long, alloc::vec::impl$1::retain::closure_env$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$3&gt;*, alloc::vec::impl$1::retain_mut::BackshiftOnDrop (649 samples, 2.09%)</title><rect x="11.9230%" y="293" width="2.0919%" height="15" fill="rgb(235,32,4)" fg:x="3699" fg:w="649"/><text x="12.1730%" y="303.50">t..</text></g><g><title>test.exe`alloc::vec::impl$1::retain::closure$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$3&gt;(alloc::vec::impl$1::retain::closure_env$0 (604 samples, 1.95%)</title><rect x="12.0681%" y="277" width="1.9469%" height="15" fill="rgb(238,90,54)" fg:x="3744" fg:w="604"/><text x="12.3181%" y="287.50">t..</text></g><g><title>test.exe`mchess::moves::legal::impl$0::filter_legal_moves::closure$3 (474 samples, 1.53%)</title><rect x="12.4871%" y="261" width="1.5278%" height="15" fill="rgb(213,208,19)" fg:x="3874" fg:w="474"/><text x="12.7371%" y="271.50"></text></g><g><title>test.exe`mchess::piece::impl$7::eq (26 samples, 0.08%)</title><rect x="13.9312%" y="245" width="0.0838%" height="15" fill="rgb(233,156,4)" fg:x="4322" fg:w="26"/><text x="14.1812%" y="255.50"></text></g><g><title>test.exe`mchess::moves::helper::get_piece_type (24 samples, 0.08%)</title><rect x="14.0794%" y="245" width="0.0774%" height="15" fill="rgb(207,194,5)" fg:x="4368" fg:w="24"/><text x="14.3294%" y="255.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain::closure$0(alloc::vec::impl$1::retain::closure_env$0 (29 samples, 0.09%)</title><rect x="14.0762%" y="277" width="0.0935%" height="15" fill="rgb(206,111,30)" fg:x="4367" fg:w="29"/><text x="14.3262%" y="287.50"></text></g><g><title>test.exe`mchess::moves::legal::impl$0::filter_legal_moves::closure$0 (29 samples, 0.09%)</title><rect x="14.0762%" y="261" width="0.0935%" height="15" fill="rgb(243,70,54)" fg:x="4367" fg:w="29"/><text x="14.3262%" y="271.50"></text></g><g><title>test.exe`mchess::moves::helper::get_to (4 samples, 0.01%)</title><rect x="14.1568%" y="245" width="0.0129%" height="15" fill="rgb(242,28,8)" fg:x="4392" fg:w="4"/><text x="14.4068%" y="255.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_bishop_moves (8 samples, 0.03%)</title><rect x="14.2632%" y="245" width="0.0258%" height="15" fill="rgb(219,106,18)" fg:x="4425" fg:w="8"/><text x="14.5132%" y="255.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain_mut::process_loop(unsigned long long, alloc::vec::impl$1::retain::closure_env$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$0&gt;*, alloc::vec::impl$1::retain_mut::BackshiftOnDrop (86 samples, 0.28%)</title><rect x="14.0343%" y="293" width="0.2772%" height="15" fill="rgb(244,222,10)" fg:x="4354" fg:w="86"/><text x="14.2843%" y="303.50"></text></g><g><title>test.exe`mchess::board::Board::is_attacked (44 samples, 0.14%)</title><rect x="14.1697%" y="277" width="0.1418%" height="15" fill="rgb(236,179,52)" fg:x="4396" fg:w="44"/><text x="14.4197%" y="287.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (38 samples, 0.12%)</title><rect x="14.1890%" y="261" width="0.1225%" height="15" fill="rgb(213,23,39)" fg:x="4402" fg:w="38"/><text x="14.4390%" y="271.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_rook_moves (7 samples, 0.02%)</title><rect x="14.2889%" y="245" width="0.0226%" height="15" fill="rgb(238,48,10)" fg:x="4433" fg:w="7"/><text x="14.5389%" y="255.50"></text></g><g><title>test.exe`alloc::vec::impl$13::index(alloc::vec::Vec (6 samples, 0.02%)</title><rect x="14.2922%" y="229" width="0.0193%" height="15" fill="rgb(251,196,23)" fg:x="4434" fg:w="6"/><text x="14.5422%" y="239.50"></text></g><g><title>test.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (6 samples, 0.02%)</title><rect x="14.2922%" y="213" width="0.0193%" height="15" fill="rgb(250,152,24)" fg:x="4434" fg:w="6"/><text x="14.5422%" y="223.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::as_slice (6 samples, 0.02%)</title><rect x="14.2922%" y="197" width="0.0193%" height="15" fill="rgb(209,150,17)" fg:x="4434" fg:w="6"/><text x="14.5422%" y="207.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::as_ptr (5 samples, 0.02%)</title><rect x="14.2954%" y="181" width="0.0161%" height="15" fill="rgb(234,202,34)" fg:x="4435" fg:w="5"/><text x="14.5454%" y="191.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u64,alloc::alloc::Global&gt;::ptr (5 samples, 0.02%)</title><rect x="14.2954%" y="165" width="0.0161%" height="15" fill="rgb(253,148,53)" fg:x="4435" fg:w="5"/><text x="14.5454%" y="175.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (5 samples, 0.02%)</title><rect x="14.2954%" y="149" width="0.0161%" height="15" fill="rgb(218,129,16)" fg:x="4435" fg:w="5"/><text x="14.5454%" y="159.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (5 samples, 0.02%)</title><rect x="14.2954%" y="133" width="0.0161%" height="15" fill="rgb(216,85,19)" fg:x="4435" fg:w="5"/><text x="14.5454%" y="143.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$0&gt; (93 samples, 0.30%)</title><rect x="14.0150%" y="325" width="0.2998%" height="15" fill="rgb(235,228,7)" fg:x="4348" fg:w="93"/><text x="14.2650%" y="335.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain_mut(alloc::vec::impl$1::retain::closure_env$0 (88 samples, 0.28%)</title><rect x="14.0311%" y="309" width="0.2837%" height="15" fill="rgb(245,175,0)" fg:x="4353" fg:w="88"/><text x="14.2811%" y="319.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_bishop_moves (4 samples, 0.01%)</title><rect x="14.3405%" y="277" width="0.0129%" height="15" fill="rgb(208,168,36)" fg:x="4449" fg:w="4"/><text x="14.5905%" y="287.50"></text></g><g><title>test.exe`mchess::board::Board::is_checked (15 samples, 0.05%)</title><rect x="14.3147%" y="325" width="0.0483%" height="15" fill="rgb(246,171,24)" fg:x="4441" fg:w="15"/><text x="14.5647%" y="335.50"></text></g><g><title>test.exe`mchess::board::Board::is_attacked (15 samples, 0.05%)</title><rect x="14.3147%" y="309" width="0.0483%" height="15" fill="rgb(215,142,24)" fg:x="4441" fg:w="15"/><text x="14.5647%" y="319.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (14 samples, 0.05%)</title><rect x="14.3179%" y="293" width="0.0451%" height="15" fill="rgb(250,187,7)" fg:x="4442" fg:w="14"/><text x="14.5679%" y="303.50"></text></g><g><title>test.exe`mchess::board::Board::filter_legal_moves(alloc::vec::Vec (797 samples, 2.57%)</title><rect x="11.8360%" y="341" width="2.5690%" height="15" fill="rgb(228,66,33)" fg:x="3672" fg:w="797"/><text x="12.0860%" y="351.50">te..</text></g><g><title>test.exe`mchess::board::Board::is_double_checked (13 samples, 0.04%)</title><rect x="14.3631%" y="325" width="0.0419%" height="15" fill="rgb(234,215,21)" fg:x="4456" fg:w="13"/><text x="14.6131%" y="335.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (9 samples, 0.03%)</title><rect x="14.3760%" y="309" width="0.0290%" height="15" fill="rgb(222,191,20)" fg:x="4460" fg:w="9"/><text x="14.6260%" y="319.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_bishop_moves (5 samples, 0.02%)</title><rect x="14.3889%" y="293" width="0.0161%" height="15" fill="rgb(245,79,54)" fg:x="4464" fg:w="5"/><text x="14.6389%" y="303.50"></text></g><g><title>`0x7FF81733B7A2 (4 samples, 0.01%)</title><rect x="14.7241%" y="229" width="0.0129%" height="15" fill="rgb(240,10,37)" fg:x="4568" fg:w="4"/><text x="14.9741%" y="239.50"></text></g><g><title>`0x7FF81733B86B (6 samples, 0.02%)</title><rect x="14.7499%" y="229" width="0.0193%" height="15" fill="rgb(214,192,32)" fg:x="4576" fg:w="6"/><text x="14.9999%" y="239.50"></text></g><g><title>`0x7FF81733B3C7 (40 samples, 0.13%)</title><rect x="14.6661%" y="245" width="0.1289%" height="15" fill="rgb(209,36,54)" fg:x="4550" fg:w="40"/><text x="14.9161%" y="255.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::with_capacity (66 samples, 0.21%)</title><rect x="14.6016%" y="325" width="0.2127%" height="15" fill="rgb(220,10,11)" fg:x="4530" fg:w="66"/><text x="14.8516%" y="335.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::with_capacity_in (66 samples, 0.21%)</title><rect x="14.6016%" y="309" width="0.2127%" height="15" fill="rgb(221,106,17)" fg:x="4530" fg:w="66"/><text x="14.8516%" y="319.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u32,alloc::alloc::Global&gt;::with_capacity_in (65 samples, 0.21%)</title><rect x="14.6048%" y="293" width="0.2095%" height="15" fill="rgb(251,142,44)" fg:x="4531" fg:w="65"/><text x="14.8548%" y="303.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (65 samples, 0.21%)</title><rect x="14.6048%" y="277" width="0.2095%" height="15" fill="rgb(238,13,15)" fg:x="4531" fg:w="65"/><text x="14.8548%" y="287.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (65 samples, 0.21%)</title><rect x="14.6048%" y="261" width="0.2095%" height="15" fill="rgb(208,107,27)" fg:x="4531" fg:w="65"/><text x="14.8548%" y="271.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (58 samples, 0.19%)</title><rect x="14.8143%" y="325" width="0.1870%" height="15" fill="rgb(205,136,37)" fg:x="4596" fg:w="58"/><text x="15.0643%" y="335.50"></text></g><g><title>test.exe`mchess::board::Board::add_sliding_moves(mchess::piece::Piece, unsigned long long, unsigned long long, alloc::vec::Vec (16 samples, 0.05%)</title><rect x="15.0013%" y="309" width="0.0516%" height="15" fill="rgb(250,205,27)" fg:x="4654" fg:w="16"/><text x="15.2513%" y="319.50"></text></g><g><title>test.exe`mchess::board::Board::add_bitboard_moves(unsigned long long, unsigned long long, unsigned long long, alloc::vec::Vec (16 samples, 0.05%)</title><rect x="15.0013%" y="293" width="0.0516%" height="15" fill="rgb(210,80,43)" fg:x="4654" fg:w="16"/><text x="15.2513%" y="303.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::push (11 samples, 0.04%)</title><rect x="15.0174%" y="277" width="0.0355%" height="15" fill="rgb(247,160,36)" fg:x="4659" fg:w="11"/><text x="15.2674%" y="287.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::as_mut_ptr (10 samples, 0.03%)</title><rect x="15.0206%" y="261" width="0.0322%" height="15" fill="rgb(234,13,49)" fg:x="4660" fg:w="10"/><text x="15.2706%" y="271.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u32,alloc::alloc::Global&gt;::ptr (10 samples, 0.03%)</title><rect x="15.0206%" y="245" width="0.0322%" height="15" fill="rgb(234,122,0)" fg:x="4660" fg:w="10"/><text x="15.2706%" y="255.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (10 samples, 0.03%)</title><rect x="15.0206%" y="229" width="0.0322%" height="15" fill="rgb(207,146,38)" fg:x="4660" fg:w="10"/><text x="15.2706%" y="239.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (10 samples, 0.03%)</title><rect x="15.0206%" y="213" width="0.0322%" height="15" fill="rgb(207,177,25)" fg:x="4660" fg:w="10"/><text x="15.2706%" y="223.50"></text></g><g><title>test.exe`mchess::board::Board::add_bishop_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (23 samples, 0.07%)</title><rect x="15.0013%" y="325" width="0.0741%" height="15" fill="rgb(211,178,42)" fg:x="4654" fg:w="23"/><text x="15.2513%" y="335.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_bishop_moves (7 samples, 0.02%)</title><rect x="15.0529%" y="309" width="0.0226%" height="15" fill="rgb(230,69,54)" fg:x="4670" fg:w="7"/><text x="15.3029%" y="319.50"></text></g><g><title>test.exe`mchess::board::Board::add_bitboard_moves(unsigned long long, unsigned long long, unsigned long long, alloc::vec::Vec (10 samples, 0.03%)</title><rect x="15.1560%" y="309" width="0.0322%" height="15" fill="rgb(214,135,41)" fg:x="4702" fg:w="10"/><text x="15.4060%" y="319.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::push (4 samples, 0.01%)</title><rect x="15.1753%" y="293" width="0.0129%" height="15" fill="rgb(237,67,25)" fg:x="4708" fg:w="4"/><text x="15.4253%" y="303.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_bishop_moves (14 samples, 0.05%)</title><rect x="15.2044%" y="277" width="0.0451%" height="15" fill="rgb(222,189,50)" fg:x="4717" fg:w="14"/><text x="15.4544%" y="287.50"></text></g><g><title>test.exe`mchess::board::Board::is_attacked (26 samples, 0.08%)</title><rect x="15.1882%" y="309" width="0.0838%" height="15" fill="rgb(245,148,34)" fg:x="4712" fg:w="26"/><text x="15.4382%" y="319.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (26 samples, 0.08%)</title><rect x="15.1882%" y="293" width="0.0838%" height="15" fill="rgb(222,29,6)" fg:x="4712" fg:w="26"/><text x="15.4382%" y="303.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_rook_moves (7 samples, 0.02%)</title><rect x="15.2495%" y="277" width="0.0226%" height="15" fill="rgb(221,189,43)" fg:x="4731" fg:w="7"/><text x="15.4995%" y="287.50"></text></g><g><title>test.exe`mchess::board::Board::add_king_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (65 samples, 0.21%)</title><rect x="15.0754%" y="325" width="0.2095%" height="15" fill="rgb(207,36,27)" fg:x="4677" fg:w="65"/><text x="15.3254%" y="335.50"></text></g><g><title>test.exe`mchess::piece::PieceColor::opposite (4 samples, 0.01%)</title><rect x="15.2720%" y="309" width="0.0129%" height="15" fill="rgb(217,90,24)" fg:x="4738" fg:w="4"/><text x="15.5220%" y="319.50"></text></g><g><title>test.exe`mchess::board::Board::add_knight_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (42 samples, 0.14%)</title><rect x="15.2849%" y="325" width="0.1354%" height="15" fill="rgb(224,66,35)" fg:x="4742" fg:w="42"/><text x="15.5349%" y="335.50"></text></g><g><title>test.exe`mchess::board::Board::add_bitboard_moves(unsigned long long, unsigned long long, unsigned long long, alloc::vec::Vec (22 samples, 0.07%)</title><rect x="15.3494%" y="309" width="0.0709%" height="15" fill="rgb(221,13,50)" fg:x="4762" fg:w="22"/><text x="15.5994%" y="319.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::push (13 samples, 0.04%)</title><rect x="15.3784%" y="293" width="0.0419%" height="15" fill="rgb(236,68,49)" fg:x="4771" fg:w="13"/><text x="15.6284%" y="303.50"></text></g><g><title>test.exe`mchess::board::Board::add_pawn_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (187 samples, 0.60%)</title><rect x="15.4203%" y="325" width="0.6028%" height="15" fill="rgb(229,146,28)" fg:x="4784" fg:w="187"/><text x="15.6703%" y="335.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::push (24 samples, 0.08%)</title><rect x="15.9457%" y="309" width="0.0774%" height="15" fill="rgb(225,31,38)" fg:x="4947" fg:w="24"/><text x="16.1957%" y="319.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::as_mut_ptr (8 samples, 0.03%)</title><rect x="16.0585%" y="261" width="0.0258%" height="15" fill="rgb(250,208,3)" fg:x="4982" fg:w="8"/><text x="16.3085%" y="271.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u32,alloc::alloc::Global&gt;::ptr (8 samples, 0.03%)</title><rect x="16.0585%" y="245" width="0.0258%" height="15" fill="rgb(246,54,23)" fg:x="4982" fg:w="8"/><text x="16.3085%" y="255.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (8 samples, 0.03%)</title><rect x="16.0585%" y="229" width="0.0258%" height="15" fill="rgb(243,76,11)" fg:x="4982" fg:w="8"/><text x="16.3085%" y="239.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (8 samples, 0.03%)</title><rect x="16.0585%" y="213" width="0.0258%" height="15" fill="rgb(245,21,50)" fg:x="4982" fg:w="8"/><text x="16.3085%" y="223.50"></text></g><g><title>test.exe`mchess::board::Board::add_sliding_moves(mchess::piece::Piece, unsigned long long, unsigned long long, alloc::vec::Vec (20 samples, 0.06%)</title><rect x="16.0231%" y="309" width="0.0645%" height="15" fill="rgb(228,9,43)" fg:x="4971" fg:w="20"/><text x="16.2731%" y="319.50"></text></g><g><title>test.exe`mchess::board::Board::add_bitboard_moves(unsigned long long, unsigned long long, unsigned long long, alloc::vec::Vec (20 samples, 0.06%)</title><rect x="16.0231%" y="293" width="0.0645%" height="15" fill="rgb(208,100,47)" fg:x="4971" fg:w="20"/><text x="16.2731%" y="303.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::push (14 samples, 0.05%)</title><rect x="16.0424%" y="277" width="0.0451%" height="15" fill="rgb(232,26,8)" fg:x="4977" fg:w="14"/><text x="16.2924%" y="287.50"></text></g><g><title>test.exe`mchess::board::Board::add_queen_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (33 samples, 0.11%)</title><rect x="16.0231%" y="325" width="0.1064%" height="15" fill="rgb(216,166,38)" fg:x="4971" fg:w="33"/><text x="16.2731%" y="335.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_queen_moves (13 samples, 0.04%)</title><rect x="16.0875%" y="309" width="0.0419%" height="15" fill="rgb(251,202,51)" fg:x="4991" fg:w="13"/><text x="16.3375%" y="319.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_rook_moves (7 samples, 0.02%)</title><rect x="16.1069%" y="293" width="0.0226%" height="15" fill="rgb(254,216,34)" fg:x="4997" fg:w="7"/><text x="16.3569%" y="303.50"></text></g><g><title>test.exe`mchess::board::Board::get_legal_moves (1,355 samples, 4.37%)</title><rect x="11.8102%" y="357" width="4.3676%" height="15" fill="rgb(251,32,27)" fg:x="3664" fg:w="1355"/><text x="12.0602%" y="367.50">test...</text></g><g><title>test.exe`mchess::board::Board::get_pseudo_legal_moves (550 samples, 1.77%)</title><rect x="14.4050%" y="341" width="1.7728%" height="15" fill="rgb(208,127,28)" fg:x="4469" fg:w="550"/><text x="14.6550%" y="351.50">t..</text></g><g><title>test.exe`mchess::board::Board::add_rook_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (15 samples, 0.05%)</title><rect x="16.1294%" y="325" width="0.0483%" height="15" fill="rgb(224,137,22)" fg:x="5004" fg:w="15"/><text x="16.3794%" y="335.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_rook_moves (12 samples, 0.04%)</title><rect x="16.1391%" y="309" width="0.0387%" height="15" fill="rgb(254,70,32)" fg:x="5007" fg:w="12"/><text x="16.3891%" y="319.50"></text></g><g><title>test.exe`core::ptr::drop_in_place(alloc::vec::Vec (4 samples, 0.01%)</title><rect x="16.1971%" y="341" width="0.0129%" height="15" fill="rgb(229,75,37)" fg:x="5025" fg:w="4"/><text x="16.4471%" y="351.50"></text></g><g><title>test.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (4 samples, 0.01%)</title><rect x="16.1971%" y="325" width="0.0129%" height="15" fill="rgb(252,64,23)" fg:x="5025" fg:w="4"/><text x="16.4471%" y="335.50"></text></g><g><title>test.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (4 samples, 0.01%)</title><rect x="16.1971%" y="309" width="0.0129%" height="15" fill="rgb(232,162,48)" fg:x="5025" fg:w="4"/><text x="16.4471%" y="319.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (4 samples, 0.01%)</title><rect x="16.1971%" y="293" width="0.0129%" height="15" fill="rgb(246,160,12)" fg:x="5025" fg:w="4"/><text x="16.4471%" y="303.50"></text></g><g><title>test.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (4 samples, 0.01%)</title><rect x="16.1971%" y="277" width="0.0129%" height="15" fill="rgb(247,166,0)" fg:x="5025" fg:w="4"/><text x="16.4471%" y="287.50"></text></g><g><title>test.exe`alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="16.1971%" y="261" width="0.0129%" height="15" fill="rgb(249,219,21)" fg:x="5025" fg:w="4"/><text x="16.4471%" y="271.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (4 samples, 0.01%)</title><rect x="16.2165%" y="229" width="0.0129%" height="15" fill="rgb(205,209,3)" fg:x="5031" fg:w="4"/><text x="16.4665%" y="239.50"></text></g><g><title>test.exe`mchess::board::Board::is_pinned (7 samples, 0.02%)</title><rect x="16.2294%" y="229" width="0.0226%" height="15" fill="rgb(243,44,1)" fg:x="5035" fg:w="7"/><text x="16.4794%" y="239.50"></text></g><g><title>test.exe`mchess::board::Board::get_pin (7 samples, 0.02%)</title><rect x="16.2294%" y="213" width="0.0226%" height="15" fill="rgb(206,159,16)" fg:x="5035" fg:w="7"/><text x="16.4794%" y="223.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain (16 samples, 0.05%)</title><rect x="16.2100%" y="309" width="0.0516%" height="15" fill="rgb(244,77,30)" fg:x="5029" fg:w="16"/><text x="16.4600%" y="319.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain_mut(alloc::vec::impl$1::retain::closure_env$0 (16 samples, 0.05%)</title><rect x="16.2100%" y="293" width="0.0516%" height="15" fill="rgb(218,69,12)" fg:x="5029" fg:w="16"/><text x="16.4600%" y="303.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain_mut::process_loop(unsigned long long, alloc::vec::impl$1::retain::closure_env$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$2&gt;*, alloc::vec::impl$1::retain_mut::BackshiftOnDrop (16 samples, 0.05%)</title><rect x="16.2100%" y="277" width="0.0516%" height="15" fill="rgb(212,87,7)" fg:x="5029" fg:w="16"/><text x="16.4600%" y="287.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain::closure$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$2&gt;(alloc::vec::impl$1::retain::closure_env$0 (15 samples, 0.05%)</title><rect x="16.2133%" y="261" width="0.0483%" height="15" fill="rgb(245,114,25)" fg:x="5030" fg:w="15"/><text x="16.4633%" y="271.50"></text></g><g><title>test.exe`mchess::moves::legal::impl$0::filter_legal_moves::closure$2 (14 samples, 0.05%)</title><rect x="16.2165%" y="245" width="0.0451%" height="15" fill="rgb(210,61,42)" fg:x="5031" fg:w="14"/><text x="16.4665%" y="255.50"></text></g><g><title>test.exe`mchess::board::Board::filter_legal_moves(alloc::vec::Vec (17 samples, 0.05%)</title><rect x="16.2100%" y="325" width="0.0548%" height="15" fill="rgb(211,52,33)" fg:x="5029" fg:w="17"/><text x="16.4600%" y="335.50"></text></g><g><title>test.exe`mchess::board::Board::get_legal_moves (24 samples, 0.08%)</title><rect x="16.2100%" y="341" width="0.0774%" height="15" fill="rgb(234,58,33)" fg:x="5029" fg:w="24"/><text x="16.4600%" y="351.50"></text></g><g><title>test.exe`mchess::board::Board::get_pseudo_legal_moves (7 samples, 0.02%)</title><rect x="16.2648%" y="325" width="0.0226%" height="15" fill="rgb(220,115,36)" fg:x="5046" fg:w="7"/><text x="16.5148%" y="335.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_bishop_moves (7 samples, 0.02%)</title><rect x="16.3003%" y="293" width="0.0226%" height="15" fill="rgb(243,153,54)" fg:x="5057" fg:w="7"/><text x="16.5503%" y="303.50"></text></g><g><title>test.exe`mchess::board::Board::is_checkmate (47 samples, 0.15%)</title><rect x="16.1778%" y="357" width="0.1515%" height="15" fill="rgb(251,47,18)" fg:x="5019" fg:w="47"/><text x="16.4278%" y="367.50"></text></g><g><title>test.exe`mchess::board::Board::is_checked (13 samples, 0.04%)</title><rect x="16.2874%" y="341" width="0.0419%" height="15" fill="rgb(242,102,42)" fg:x="5053" fg:w="13"/><text x="16.5374%" y="351.50"></text></g><g><title>test.exe`mchess::board::Board::is_attacked (13 samples, 0.04%)</title><rect x="16.2874%" y="325" width="0.0419%" height="15" fill="rgb(234,31,38)" fg:x="5053" fg:w="13"/><text x="16.5374%" y="335.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (13 samples, 0.04%)</title><rect x="16.2874%" y="309" width="0.0419%" height="15" fill="rgb(221,117,51)" fg:x="5053" fg:w="13"/><text x="16.5374%" y="319.50"></text></g><g><title>test.exe`mchess::board::Board::is_draw (4 samples, 0.01%)</title><rect x="16.3293%" y="357" width="0.0129%" height="15" fill="rgb(212,20,18)" fg:x="5066" fg:w="4"/><text x="16.5793%" y="367.50"></text></g><g><title>test.exe`mchess::board::Board::check_insufficient_material (4 samples, 0.01%)</title><rect x="16.3293%" y="341" width="0.0129%" height="15" fill="rgb(245,133,36)" fg:x="5066" fg:w="4"/><text x="16.5793%" y="351.50"></text></g><g><title>`0x7FFFFE7C13F0 (15 samples, 0.05%)</title><rect x="17.8539%" y="341" width="0.0483%" height="15" fill="rgb(212,6,19)" fg:x="5539" fg:w="15"/><text x="18.1039%" y="351.50"></text></g><g><title>`0x7FFFFE7C13F3 (4 samples, 0.01%)</title><rect x="17.9023%" y="341" width="0.0129%" height="15" fill="rgb(218,1,36)" fg:x="5554" fg:w="4"/><text x="18.1523%" y="351.50"></text></g><g><title>`0x7FFFFE7C1510 (9 samples, 0.03%)</title><rect x="17.9216%" y="341" width="0.0290%" height="15" fill="rgb(246,84,54)" fg:x="5560" fg:w="9"/><text x="18.1716%" y="351.50"></text></g><g><title>`0x7FFFFE7C152D (5 samples, 0.02%)</title><rect x="17.9506%" y="341" width="0.0161%" height="15" fill="rgb(242,110,6)" fg:x="5569" fg:w="5"/><text x="18.2006%" y="351.50"></text></g><g><title>`0x7FFFFE7C1538 (11 samples, 0.04%)</title><rect x="17.9700%" y="341" width="0.0355%" height="15" fill="rgb(214,47,5)" fg:x="5575" fg:w="11"/><text x="18.2200%" y="351.50"></text></g><g><title>`0x7FFFFE7C1541 (6 samples, 0.02%)</title><rect x="18.0054%" y="341" width="0.0193%" height="15" fill="rgb(218,159,25)" fg:x="5586" fg:w="6"/><text x="18.2554%" y="351.50"></text></g><g><title>`0x7FFFFE7C1548 (15 samples, 0.05%)</title><rect x="18.0248%" y="341" width="0.0483%" height="15" fill="rgb(215,211,28)" fg:x="5592" fg:w="15"/><text x="18.2748%" y="351.50"></text></g><g><title>`0x7FFFFE7C1571 (16 samples, 0.05%)</title><rect x="18.0828%" y="341" width="0.0516%" height="15" fill="rgb(238,59,32)" fg:x="5610" fg:w="16"/><text x="18.3328%" y="351.50"></text></g><g><title>`0x7FFFFE7C1578 (36 samples, 0.12%)</title><rect x="18.1343%" y="341" width="0.1160%" height="15" fill="rgb(226,82,3)" fg:x="5626" fg:w="36"/><text x="18.3843%" y="351.50"></text></g><g><title>`0x7FFFFE7C1653 (9 samples, 0.03%)</title><rect x="18.2504%" y="341" width="0.0290%" height="15" fill="rgb(240,164,32)" fg:x="5662" fg:w="9"/><text x="18.5004%" y="351.50"></text></g><g><title>`0x7FFFFE7C165F (6 samples, 0.02%)</title><rect x="18.2794%" y="341" width="0.0193%" height="15" fill="rgb(232,46,7)" fg:x="5671" fg:w="6"/><text x="18.5294%" y="351.50"></text></g><g><title>`0x7FFFFE7C16A1 (11 samples, 0.04%)</title><rect x="18.3084%" y="341" width="0.0355%" height="15" fill="rgb(229,129,53)" fg:x="5680" fg:w="11"/><text x="18.5584%" y="351.50"></text></g><g><title>`0x7FFFFE7C16AB (6 samples, 0.02%)</title><rect x="18.3439%" y="341" width="0.0193%" height="15" fill="rgb(234,188,29)" fg:x="5691" fg:w="6"/><text x="18.5939%" y="351.50"></text></g><g><title>`0x7FFFFE7C16B5 (7 samples, 0.02%)</title><rect x="18.3632%" y="341" width="0.0226%" height="15" fill="rgb(246,141,4)" fg:x="5697" fg:w="7"/><text x="18.6132%" y="351.50"></text></g><g><title>`0x7FFFFE7C16BC (6 samples, 0.02%)</title><rect x="18.3858%" y="341" width="0.0193%" height="15" fill="rgb(229,23,39)" fg:x="5704" fg:w="6"/><text x="18.6358%" y="351.50"></text></g><g><title>`0x7FFFFE7C16C3 (5 samples, 0.02%)</title><rect x="18.4051%" y="341" width="0.0161%" height="15" fill="rgb(206,12,3)" fg:x="5710" fg:w="5"/><text x="18.6551%" y="351.50"></text></g><g><title>`0x7FFFFE7C16D1 (13 samples, 0.04%)</title><rect x="18.4309%" y="341" width="0.0419%" height="15" fill="rgb(252,226,20)" fg:x="5718" fg:w="13"/><text x="18.6809%" y="351.50"></text></g><g><title>`0x7FFFFE7C16DF (11 samples, 0.04%)</title><rect x="18.4760%" y="341" width="0.0355%" height="15" fill="rgb(216,123,35)" fg:x="5732" fg:w="11"/><text x="18.7260%" y="351.50"></text></g><g><title>`0x7FFFFE7C16E6 (9 samples, 0.03%)</title><rect x="18.5115%" y="341" width="0.0290%" height="15" fill="rgb(212,68,40)" fg:x="5743" fg:w="9"/><text x="18.7615%" y="351.50"></text></g><g><title>`0x7FFFFE7C16EA (12 samples, 0.04%)</title><rect x="18.5405%" y="341" width="0.0387%" height="15" fill="rgb(254,125,32)" fg:x="5752" fg:w="12"/><text x="18.7905%" y="351.50"></text></g><g><title>`0x7FFFFE7C16ED (4 samples, 0.01%)</title><rect x="18.5792%" y="341" width="0.0129%" height="15" fill="rgb(253,97,22)" fg:x="5764" fg:w="4"/><text x="18.8292%" y="351.50"></text></g><g><title>`0x7FFFFE7C3010 (10 samples, 0.03%)</title><rect x="18.5921%" y="341" width="0.0322%" height="15" fill="rgb(241,101,14)" fg:x="5768" fg:w="10"/><text x="18.8421%" y="351.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (47 samples, 0.15%)</title><rect x="18.6243%" y="341" width="0.1515%" height="15" fill="rgb(238,103,29)" fg:x="5778" fg:w="47"/><text x="18.8743%" y="351.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::add_piece (49 samples, 0.16%)</title><rect x="19.0208%" y="325" width="0.1579%" height="15" fill="rgb(233,195,47)" fg:x="5901" fg:w="49"/><text x="19.2708%" y="335.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (80 samples, 0.26%)</title><rect x="19.1787%" y="325" width="0.2579%" height="15" fill="rgb(246,218,30)" fg:x="5950" fg:w="80"/><text x="19.4287%" y="335.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::move_piece (340 samples, 1.10%)</title><rect x="18.7758%" y="341" width="1.0959%" height="15" fill="rgb(219,145,47)" fg:x="5825" fg:w="340"/><text x="19.0258%" y="351.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::remove_piece (135 samples, 0.44%)</title><rect x="19.4366%" y="325" width="0.4351%" height="15" fill="rgb(243,12,26)" fg:x="6030" fg:w="135"/><text x="19.6866%" y="335.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (79 samples, 0.25%)</title><rect x="19.8878%" y="325" width="0.2546%" height="15" fill="rgb(214,87,16)" fg:x="6170" fg:w="79"/><text x="20.1378%" y="335.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::remove_piece_at (89 samples, 0.29%)</title><rect x="19.8717%" y="341" width="0.2869%" height="15" fill="rgb(208,99,42)" fg:x="6165" fg:w="89"/><text x="20.1217%" y="351.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::remove_piece (5 samples, 0.02%)</title><rect x="20.1425%" y="325" width="0.0161%" height="15" fill="rgb(253,99,2)" fg:x="6249" fg:w="5"/><text x="20.3925%" y="335.50"></text></g><g><title>test.exe`mchess::bitboard::impl$2::clone (61 samples, 0.20%)</title><rect x="20.1586%" y="341" width="0.1966%" height="15" fill="rgb(220,168,23)" fg:x="6254" fg:w="61"/><text x="20.4086%" y="351.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (85 samples, 0.27%)</title><rect x="21.0289%" y="325" width="0.2740%" height="15" fill="rgb(242,38,24)" fg:x="6524" fg:w="85"/><text x="21.2789%" y="335.50"></text></g><g><title>test.exe`mchess::moves::Position::from_bitboard (5 samples, 0.02%)</title><rect x="21.3029%" y="325" width="0.0161%" height="15" fill="rgb(225,182,9)" fg:x="6609" fg:w="5"/><text x="21.5529%" y="335.50"></text></g><g><title>test.exe`core::num::impl$9::trailing_zeros (4 samples, 0.01%)</title><rect x="21.3061%" y="309" width="0.0129%" height="15" fill="rgb(243,178,37)" fg:x="6610" fg:w="4"/><text x="21.5561%" y="319.50"></text></g><g><title>test.exe`mchess::moves::helper::get_from (7 samples, 0.02%)</title><rect x="21.3190%" y="325" width="0.0226%" height="15" fill="rgb(232,139,19)" fg:x="6614" fg:w="7"/><text x="21.5690%" y="335.50"></text></g><g><title>test.exe`mchess::moves::helper::get_piece_type (4 samples, 0.01%)</title><rect x="21.3415%" y="325" width="0.0129%" height="15" fill="rgb(225,201,24)" fg:x="6621" fg:w="4"/><text x="21.5915%" y="335.50"></text></g><g><title>test.exe`mchess::moves::helper::get_to (24 samples, 0.08%)</title><rect x="21.3544%" y="325" width="0.0774%" height="15" fill="rgb(221,47,46)" fg:x="6625" fg:w="24"/><text x="21.6044%" y="335.50"></text></g><g><title>test.exe`mchess::moves::helper::is_en_passant (10 samples, 0.03%)</title><rect x="21.4318%" y="325" width="0.0322%" height="15" fill="rgb(249,23,13)" fg:x="6649" fg:w="10"/><text x="21.6818%" y="335.50"></text></g><g><title>test.exe`mchess::moves::helper::get_move_type (10 samples, 0.03%)</title><rect x="21.4318%" y="309" width="0.0322%" height="15" fill="rgb(219,9,5)" fg:x="6649" fg:w="10"/><text x="21.6818%" y="319.50"></text></g><g><title>test.exe`mchess::board::Board::update_hash(unsigned int, tuple$ (366 samples, 1.18%)</title><rect x="20.3552%" y="341" width="1.1797%" height="15" fill="rgb(254,171,16)" fg:x="6315" fg:w="366"/><text x="20.6052%" y="351.50"></text></g><g><title>test.exe`mchess::piece::Piece::index_from (21 samples, 0.07%)</title><rect x="21.4673%" y="325" width="0.0677%" height="15" fill="rgb(230,171,20)" fg:x="6660" fg:w="21"/><text x="21.7173%" y="335.50"></text></g><g><title>test.exe`mchess::piece::impl$7::eq (12 samples, 0.04%)</title><rect x="21.4963%" y="309" width="0.0387%" height="15" fill="rgb(210,71,41)" fg:x="6669" fg:w="12"/><text x="21.7463%" y="319.50"></text></g><g><title>test.exe`mchess::moves::helper::get_from (23 samples, 0.07%)</title><rect x="21.5446%" y="341" width="0.0741%" height="15" fill="rgb(206,173,20)" fg:x="6684" fg:w="23"/><text x="21.7946%" y="351.50"></text></g><g><title>test.exe`mchess::moves::helper::get_piece_type (11 samples, 0.04%)</title><rect x="21.6187%" y="341" width="0.0355%" height="15" fill="rgb(233,88,34)" fg:x="6707" fg:w="11"/><text x="21.8687%" y="351.50"></text></g><g><title>test.exe`mchess::moves::helper::get_to (14 samples, 0.05%)</title><rect x="21.6542%" y="341" width="0.0451%" height="15" fill="rgb(223,209,46)" fg:x="6718" fg:w="14"/><text x="21.9042%" y="351.50"></text></g><g><title>test.exe`mchess::moves::helper::is_capture (6 samples, 0.02%)</title><rect x="21.6993%" y="341" width="0.0193%" height="15" fill="rgb(250,43,18)" fg:x="6732" fg:w="6"/><text x="21.9493%" y="351.50"></text></g><g><title>test.exe`mchess::moves::helper::get_move_type (6 samples, 0.02%)</title><rect x="21.6993%" y="325" width="0.0193%" height="15" fill="rgb(208,13,10)" fg:x="6732" fg:w="6"/><text x="21.9493%" y="335.50"></text></g><g><title>test.exe`mchess::moves::helper::is_en_passant (12 samples, 0.04%)</title><rect x="21.7187%" y="341" width="0.0387%" height="15" fill="rgb(212,200,36)" fg:x="6738" fg:w="12"/><text x="21.9687%" y="351.50"></text></g><g><title>test.exe`mchess::moves::helper::get_move_type (12 samples, 0.04%)</title><rect x="21.7187%" y="325" width="0.0387%" height="15" fill="rgb(225,90,30)" fg:x="6738" fg:w="12"/><text x="21.9687%" y="335.50"></text></g><g><title>test.exe`mchess::moves::helper::is_promotion (6 samples, 0.02%)</title><rect x="21.7573%" y="341" width="0.0193%" height="15" fill="rgb(236,182,39)" fg:x="6750" fg:w="6"/><text x="22.0073%" y="351.50"></text></g><g><title>test.exe`mchess::board::Board::make_move (1,713 samples, 5.52%)</title><rect x="16.3422%" y="357" width="5.5215%" height="15" fill="rgb(212,144,35)" fg:x="5070" fg:w="1713"/><text x="16.5922%" y="367.50">test.ex..</text></g><g><title>test.exe`mchess::piece::impl$7::eq (24 samples, 0.08%)</title><rect x="21.7864%" y="341" width="0.0774%" height="15" fill="rgb(228,63,44)" fg:x="6759" fg:w="24"/><text x="22.0364%" y="351.50"></text></g><g><title>`0x7FF8173B75BA (4 samples, 0.01%)</title><rect x="23.1401%" y="197" width="0.0129%" height="15" fill="rgb(228,109,6)" fg:x="7179" fg:w="4"/><text x="23.3901%" y="207.50"></text></g><g><title>`0x7FF8173347B1 (19 samples, 0.06%)</title><rect x="23.0982%" y="213" width="0.0612%" height="15" fill="rgb(238,117,24)" fg:x="7166" fg:w="19"/><text x="23.3482%" y="223.50"></text></g><g><title>test.exe`core::ptr::drop_in_place(alloc::vec::Vec (30 samples, 0.10%)</title><rect x="23.0725%" y="309" width="0.0967%" height="15" fill="rgb(242,26,26)" fg:x="7158" fg:w="30"/><text x="23.3225%" y="319.50"></text></g><g><title>test.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (30 samples, 0.10%)</title><rect x="23.0725%" y="293" width="0.0967%" height="15" fill="rgb(221,92,48)" fg:x="7158" fg:w="30"/><text x="23.3225%" y="303.50"></text></g><g><title>test.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (30 samples, 0.10%)</title><rect x="23.0725%" y="277" width="0.0967%" height="15" fill="rgb(209,209,32)" fg:x="7158" fg:w="30"/><text x="23.3225%" y="287.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (30 samples, 0.10%)</title><rect x="23.0725%" y="261" width="0.0967%" height="15" fill="rgb(221,70,22)" fg:x="7158" fg:w="30"/><text x="23.3225%" y="271.50"></text></g><g><title>test.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (30 samples, 0.10%)</title><rect x="23.0725%" y="245" width="0.0967%" height="15" fill="rgb(248,145,5)" fg:x="7158" fg:w="30"/><text x="23.3225%" y="255.50"></text></g><g><title>test.exe`alloc::alloc::dealloc (30 samples, 0.10%)</title><rect x="23.0725%" y="229" width="0.0967%" height="15" fill="rgb(226,116,26)" fg:x="7158" fg:w="30"/><text x="23.3225%" y="239.50"></text></g><g><title>test.exe`alloc::sync::impl$30::deref(alloc::sync::Arc (7 samples, 0.02%)</title><rect x="23.4141%" y="197" width="0.0226%" height="15" fill="rgb(244,5,17)" fg:x="7264" fg:w="7"/><text x="23.6641%" y="207.50"></text></g><g><title>test.exe`alloc::sync::Arc&lt;mchess::moves::tables::AttackTables,alloc::alloc::Global&gt;::inner (7 samples, 0.02%)</title><rect x="23.4141%" y="181" width="0.0226%" height="15" fill="rgb(252,159,33)" fg:x="7264" fg:w="7"/><text x="23.6641%" y="191.50"></text></g><g><title>test.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;mchess::moves::tables::AttackTables&gt; &gt;::as_ref (7 samples, 0.02%)</title><rect x="23.4141%" y="165" width="0.0226%" height="15" fill="rgb(206,71,0)" fg:x="7264" fg:w="7"/><text x="23.6641%" y="175.50"></text></g><g><title>test.exe`core::num::impl$9::trailing_zeros (7 samples, 0.02%)</title><rect x="23.7461%" y="181" width="0.0226%" height="15" fill="rgb(233,118,54)" fg:x="7367" fg:w="7"/><text x="23.9961%" y="191.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_bishop_moves (32 samples, 0.10%)</title><rect x="23.7687%" y="181" width="0.1031%" height="15" fill="rgb(234,83,48)" fg:x="7374" fg:w="32"/><text x="24.0187%" y="191.50"></text></g><g><title>test.exe`alloc::vec::impl$13::index(alloc::vec::Vec (10 samples, 0.03%)</title><rect x="23.9073%" y="165" width="0.0322%" height="15" fill="rgb(228,3,54)" fg:x="7417" fg:w="10"/><text x="24.1573%" y="175.50"></text></g><g><title>test.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (10 samples, 0.03%)</title><rect x="23.9073%" y="149" width="0.0322%" height="15" fill="rgb(226,155,13)" fg:x="7417" fg:w="10"/><text x="24.1573%" y="159.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::as_slice (10 samples, 0.03%)</title><rect x="23.9073%" y="133" width="0.0322%" height="15" fill="rgb(241,28,37)" fg:x="7417" fg:w="10"/><text x="24.1573%" y="143.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::as_ptr (4 samples, 0.01%)</title><rect x="23.9266%" y="117" width="0.0129%" height="15" fill="rgb(233,93,10)" fg:x="7423" fg:w="4"/><text x="24.1766%" y="127.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u64,alloc::alloc::Global&gt;::ptr (4 samples, 0.01%)</title><rect x="23.9266%" y="101" width="0.0129%" height="15" fill="rgb(225,113,19)" fg:x="7423" fg:w="4"/><text x="24.1766%" y="111.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (4 samples, 0.01%)</title><rect x="23.9266%" y="85" width="0.0129%" height="15" fill="rgb(241,2,18)" fg:x="7423" fg:w="4"/><text x="24.1766%" y="95.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (4 samples, 0.01%)</title><rect x="23.9266%" y="69" width="0.0129%" height="15" fill="rgb(228,207,21)" fg:x="7423" fg:w="4"/><text x="24.1766%" y="79.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (158 samples, 0.51%)</title><rect x="23.4367%" y="197" width="0.5093%" height="15" fill="rgb(213,211,35)" fg:x="7271" fg:w="158"/><text x="23.6867%" y="207.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_rook_moves (23 samples, 0.07%)</title><rect x="23.8718%" y="181" width="0.0741%" height="15" fill="rgb(209,83,10)" fg:x="7406" fg:w="23"/><text x="24.1218%" y="191.50"></text></g><g><title>test.exe`mchess::board::Board::is_attacked (10 samples, 0.03%)</title><rect x="23.9460%" y="197" width="0.0322%" height="15" fill="rgb(209,164,1)" fg:x="7429" fg:w="10"/><text x="24.1960%" y="207.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (10 samples, 0.03%)</title><rect x="23.9460%" y="181" width="0.0322%" height="15" fill="rgb(213,184,43)" fg:x="7429" fg:w="10"/><text x="24.1960%" y="191.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (20 samples, 0.06%)</title><rect x="24.3263%" y="165" width="0.0645%" height="15" fill="rgb(231,61,34)" fg:x="7547" fg:w="20"/><text x="24.5763%" y="175.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_bishop_moves (9 samples, 0.03%)</title><rect x="24.3908%" y="165" width="0.0290%" height="15" fill="rgb(235,75,3)" fg:x="7567" fg:w="9"/><text x="24.6408%" y="175.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_rook_moves (8 samples, 0.03%)</title><rect x="24.4198%" y="165" width="0.0258%" height="15" fill="rgb(220,106,47)" fg:x="7576" fg:w="8"/><text x="24.6698%" y="175.50"></text></g><g><title>test.exe`mchess::moves::tables::AttackTables::get_line_mask (30 samples, 0.10%)</title><rect x="24.4456%" y="165" width="0.0967%" height="15" fill="rgb(210,196,33)" fg:x="7584" fg:w="30"/><text x="24.6956%" y="175.50"></text></g><g><title>test.exe`core::num::impl$9::trailing_zeros (9 samples, 0.03%)</title><rect x="24.5133%" y="149" width="0.0290%" height="15" fill="rgb(229,154,42)" fg:x="7605" fg:w="9"/><text x="24.7633%" y="159.50"></text></g><g><title>test.exe`mchess::board::Board::is_pinned (180 samples, 0.58%)</title><rect x="23.9782%" y="197" width="0.5802%" height="15" fill="rgb(228,114,26)" fg:x="7439" fg:w="180"/><text x="24.2282%" y="207.50"></text></g><g><title>test.exe`mchess::board::Board::get_pin (172 samples, 0.55%)</title><rect x="24.0040%" y="181" width="0.5544%" height="15" fill="rgb(208,144,1)" fg:x="7447" fg:w="172"/><text x="24.2540%" y="191.50"></text></g><g><title>test.exe`mchess::piece::impl$7::eq (5 samples, 0.02%)</title><rect x="24.5423%" y="165" width="0.0161%" height="15" fill="rgb(239,112,37)" fg:x="7614" fg:w="5"/><text x="24.7923%" y="175.50"></text></g><g><title>test.exe`mchess::moves::helper::get_from (7 samples, 0.02%)</title><rect x="24.5584%" y="197" width="0.0226%" height="15" fill="rgb(210,96,50)" fg:x="7619" fg:w="7"/><text x="24.8084%" y="207.50"></text></g><g><title>test.exe`mchess::moves::helper::get_piece_type (10 samples, 0.03%)</title><rect x="24.5810%" y="197" width="0.0322%" height="15" fill="rgb(222,178,2)" fg:x="7626" fg:w="10"/><text x="24.8310%" y="207.50"></text></g><g><title>test.exe`mchess::moves::helper::get_to (8 samples, 0.03%)</title><rect x="24.6132%" y="197" width="0.0258%" height="15" fill="rgb(226,74,18)" fg:x="7636" fg:w="8"/><text x="24.8632%" y="207.50"></text></g><g><title>test.exe`mchess::moves::helper::is_en_passant (11 samples, 0.04%)</title><rect x="24.6390%" y="197" width="0.0355%" height="15" fill="rgb(225,67,54)" fg:x="7644" fg:w="11"/><text x="24.8890%" y="207.50"></text></g><g><title>test.exe`mchess::moves::helper::get_move_type (11 samples, 0.04%)</title><rect x="24.6390%" y="181" width="0.0355%" height="15" fill="rgb(251,92,32)" fg:x="7644" fg:w="11"/><text x="24.8890%" y="191.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain::closure$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$2&gt;(alloc::vec::impl$1::retain::closure_env$0 (478 samples, 1.54%)</title><rect x="23.2981%" y="229" width="1.5407%" height="15" fill="rgb(228,149,22)" fg:x="7228" fg:w="478"/><text x="23.5481%" y="239.50"></text></g><g><title>test.exe`mchess::moves::legal::impl$0::filter_legal_moves::closure$2 (452 samples, 1.46%)</title><rect x="23.3819%" y="213" width="1.4569%" height="15" fill="rgb(243,54,13)" fg:x="7254" fg:w="452"/><text x="23.6319%" y="223.50"></text></g><g><title>test.exe`mchess::moves::tables::AttackTables::is_between (51 samples, 0.16%)</title><rect x="24.6744%" y="197" width="0.1644%" height="15" fill="rgb(243,180,28)" fg:x="7655" fg:w="51"/><text x="24.9244%" y="207.50"></text></g><g><title>test.exe`core::num::impl$9::trailing_zeros (6 samples, 0.02%)</title><rect x="24.8195%" y="181" width="0.0193%" height="15" fill="rgb(208,167,24)" fg:x="7700" fg:w="6"/><text x="25.0695%" y="191.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain (517 samples, 1.67%)</title><rect x="23.1885%" y="277" width="1.6665%" height="15" fill="rgb(245,73,45)" fg:x="7194" fg:w="517"/><text x="23.4385%" y="287.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain_mut(alloc::vec::impl$1::retain::closure_env$0 (517 samples, 1.67%)</title><rect x="23.1885%" y="261" width="1.6665%" height="15" fill="rgb(237,203,48)" fg:x="7194" fg:w="517"/><text x="23.4385%" y="271.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain_mut::process_loop(unsigned long long, alloc::vec::impl$1::retain::closure_env$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$2&gt;*, alloc::vec::impl$1::retain_mut::BackshiftOnDrop (515 samples, 1.66%)</title><rect x="23.1949%" y="245" width="1.6600%" height="15" fill="rgb(211,197,16)" fg:x="7196" fg:w="515"/><text x="23.4449%" y="255.50"></text></g><g><title>test.exe`core::intrinsics::copy_nonoverlapping (5 samples, 0.02%)</title><rect x="24.8388%" y="229" width="0.0161%" height="15" fill="rgb(243,99,51)" fg:x="7706" fg:w="5"/><text x="25.0888%" y="239.50"></text></g><g><title>test.exe`mchess::moves::helper::get_piece_type (15 samples, 0.05%)</title><rect x="24.8840%" y="197" width="0.0483%" height="15" fill="rgb(215,123,29)" fg:x="7720" fg:w="15"/><text x="25.1340%" y="207.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain::closure$0(alloc::vec::impl$1::retain::closure_env$0 (20 samples, 0.06%)</title><rect x="24.8775%" y="229" width="0.0645%" height="15" fill="rgb(239,186,37)" fg:x="7718" fg:w="20"/><text x="25.1275%" y="239.50"></text></g><g><title>test.exe`mchess::moves::legal::impl$0::filter_legal_moves::closure$0 (20 samples, 0.06%)</title><rect x="24.8775%" y="213" width="0.0645%" height="15" fill="rgb(252,136,39)" fg:x="7718" fg:w="20"/><text x="25.1275%" y="223.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_bishop_moves (4 samples, 0.01%)</title><rect x="25.0064%" y="197" width="0.0129%" height="15" fill="rgb(223,213,32)" fg:x="7758" fg:w="4"/><text x="25.2564%" y="207.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain_mut::process_loop(unsigned long long, alloc::vec::impl$1::retain::closure_env$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$0&gt;*, alloc::vec::impl$1::retain_mut::BackshiftOnDrop (55 samples, 0.18%)</title><rect x="24.8614%" y="245" width="0.1773%" height="15" fill="rgb(233,115,5)" fg:x="7713" fg:w="55"/><text x="25.1114%" y="255.50"></text></g><g><title>test.exe`mchess::board::Board::is_attacked (28 samples, 0.09%)</title><rect x="24.9484%" y="229" width="0.0903%" height="15" fill="rgb(207,226,44)" fg:x="7740" fg:w="28"/><text x="25.1984%" y="239.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (23 samples, 0.07%)</title><rect x="24.9645%" y="213" width="0.0741%" height="15" fill="rgb(208,126,0)" fg:x="7745" fg:w="23"/><text x="25.2145%" y="223.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_rook_moves (6 samples, 0.02%)</title><rect x="25.0193%" y="197" width="0.0193%" height="15" fill="rgb(244,66,21)" fg:x="7762" fg:w="6"/><text x="25.2693%" y="207.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$0&gt; (63 samples, 0.20%)</title><rect x="24.8550%" y="277" width="0.2031%" height="15" fill="rgb(222,97,12)" fg:x="7711" fg:w="63"/><text x="25.1050%" y="287.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain_mut(alloc::vec::impl$1::retain::closure_env$0 (62 samples, 0.20%)</title><rect x="24.8582%" y="261" width="0.1998%" height="15" fill="rgb(219,213,19)" fg:x="7712" fg:w="62"/><text x="25.1082%" y="271.50"></text></g><g><title>test.exe`core::mem::drop(alloc::vec::impl$1::retain_mut::BackshiftOnDrop (6 samples, 0.02%)</title><rect x="25.0387%" y="245" width="0.0193%" height="15" fill="rgb(252,169,30)" fg:x="7768" fg:w="6"/><text x="25.2887%" y="255.50"></text></g><g><title>test.exe`core::ptr::drop_in_place(alloc::vec::impl$1::retain_mut::BackshiftOnDrop (6 samples, 0.02%)</title><rect x="25.0387%" y="229" width="0.0193%" height="15" fill="rgb(206,32,51)" fg:x="7768" fg:w="6"/><text x="25.2887%" y="239.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain_mut::impl$0::drop(alloc::vec::impl$1::retain_mut::BackshiftOnDrop (6 samples, 0.02%)</title><rect x="25.0387%" y="213" width="0.0193%" height="15" fill="rgb(250,172,42)" fg:x="7768" fg:w="6"/><text x="25.2887%" y="223.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::set_len (6 samples, 0.02%)</title><rect x="25.0387%" y="197" width="0.0193%" height="15" fill="rgb(209,34,43)" fg:x="7768" fg:w="6"/><text x="25.2887%" y="207.50"></text></g><g><title>test.exe`mchess::board::Board::is_checked (6 samples, 0.02%)</title><rect x="25.0580%" y="277" width="0.0193%" height="15" fill="rgb(223,11,35)" fg:x="7774" fg:w="6"/><text x="25.3080%" y="287.50"></text></g><g><title>test.exe`mchess::board::Board::is_attacked (6 samples, 0.02%)</title><rect x="25.0580%" y="261" width="0.0193%" height="15" fill="rgb(251,219,26)" fg:x="7774" fg:w="6"/><text x="25.3080%" y="271.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (6 samples, 0.02%)</title><rect x="25.0580%" y="245" width="0.0193%" height="15" fill="rgb(231,119,3)" fg:x="7774" fg:w="6"/><text x="25.3080%" y="255.50"></text></g><g><title>test.exe`mchess::board::Board::filter_legal_moves(alloc::vec::Vec (593 samples, 1.91%)</title><rect x="23.1788%" y="293" width="1.9114%" height="15" fill="rgb(216,97,11)" fg:x="7191" fg:w="593"/><text x="23.4288%" y="303.50">t..</text></g><g><title>test.exe`mchess::board::Board::is_double_checked (4 samples, 0.01%)</title><rect x="25.0774%" y="277" width="0.0129%" height="15" fill="rgb(223,59,9)" fg:x="7780" fg:w="4"/><text x="25.3274%" y="287.50"></text></g><g><title>`0x7FF81733B86B (4 samples, 0.01%)</title><rect x="25.2289%" y="181" width="0.0129%" height="15" fill="rgb(233,93,31)" fg:x="7827" fg:w="4"/><text x="25.4789%" y="191.50"></text></g><g><title>`0x7FF81733B3C7 (19 samples, 0.06%)</title><rect x="25.1966%" y="197" width="0.0612%" height="15" fill="rgb(239,81,33)" fg:x="7817" fg:w="19"/><text x="25.4466%" y="207.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::with_capacity (32 samples, 0.10%)</title><rect x="25.1644%" y="277" width="0.1031%" height="15" fill="rgb(213,120,34)" fg:x="7807" fg:w="32"/><text x="25.4144%" y="287.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::with_capacity_in (32 samples, 0.10%)</title><rect x="25.1644%" y="261" width="0.1031%" height="15" fill="rgb(243,49,53)" fg:x="7807" fg:w="32"/><text x="25.4144%" y="271.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u32,alloc::alloc::Global&gt;::with_capacity_in (32 samples, 0.10%)</title><rect x="25.1644%" y="245" width="0.1031%" height="15" fill="rgb(247,216,33)" fg:x="7807" fg:w="32"/><text x="25.4144%" y="255.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (32 samples, 0.10%)</title><rect x="25.1644%" y="229" width="0.1031%" height="15" fill="rgb(226,26,14)" fg:x="7807" fg:w="32"/><text x="25.4144%" y="239.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (32 samples, 0.10%)</title><rect x="25.1644%" y="213" width="0.1031%" height="15" fill="rgb(215,49,53)" fg:x="7807" fg:w="32"/><text x="25.4144%" y="223.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (33 samples, 0.11%)</title><rect x="25.2675%" y="277" width="0.1064%" height="15" fill="rgb(245,162,40)" fg:x="7839" fg:w="33"/><text x="25.5175%" y="287.50"></text></g><g><title>test.exe`mchess::board::Board::add_sliding_moves(mchess::piece::Piece, unsigned long long, unsigned long long, alloc::vec::Vec (7 samples, 0.02%)</title><rect x="25.3771%" y="261" width="0.0226%" height="15" fill="rgb(229,68,17)" fg:x="7873" fg:w="7"/><text x="25.6271%" y="271.50"></text></g><g><title>test.exe`mchess::board::Board::add_bitboard_moves(unsigned long long, unsigned long long, unsigned long long, alloc::vec::Vec (7 samples, 0.02%)</title><rect x="25.3771%" y="245" width="0.0226%" height="15" fill="rgb(213,182,10)" fg:x="7873" fg:w="7"/><text x="25.6271%" y="255.50"></text></g><g><title>test.exe`mchess::board::Board::add_bishop_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (15 samples, 0.05%)</title><rect x="25.3739%" y="277" width="0.0483%" height="15" fill="rgb(245,125,30)" fg:x="7872" fg:w="15"/><text x="25.6239%" y="287.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_bishop_moves (7 samples, 0.02%)</title><rect x="25.3997%" y="261" width="0.0226%" height="15" fill="rgb(232,202,2)" fg:x="7880" fg:w="7"/><text x="25.6497%" y="271.50"></text></g><g><title>test.exe`mchess::board::Board::add_king_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (20 samples, 0.06%)</title><rect x="25.4223%" y="277" width="0.0645%" height="15" fill="rgb(237,140,51)" fg:x="7887" fg:w="20"/><text x="25.6723%" y="287.50"></text></g><g><title>test.exe`mchess::board::Board::is_attacked (5 samples, 0.02%)</title><rect x="25.4706%" y="261" width="0.0161%" height="15" fill="rgb(236,157,25)" fg:x="7902" fg:w="5"/><text x="25.7206%" y="271.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (5 samples, 0.02%)</title><rect x="25.4706%" y="245" width="0.0161%" height="15" fill="rgb(219,209,0)" fg:x="7902" fg:w="5"/><text x="25.7206%" y="255.50"></text></g><g><title>test.exe`mchess::board::Board::add_knight_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (22 samples, 0.07%)</title><rect x="25.4867%" y="277" width="0.0709%" height="15" fill="rgb(240,116,54)" fg:x="7907" fg:w="22"/><text x="25.7367%" y="287.50"></text></g><g><title>test.exe`mchess::board::Board::add_bitboard_moves(unsigned long long, unsigned long long, unsigned long long, alloc::vec::Vec (14 samples, 0.05%)</title><rect x="25.5125%" y="261" width="0.0451%" height="15" fill="rgb(216,10,36)" fg:x="7915" fg:w="14"/><text x="25.7625%" y="271.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::push (12 samples, 0.04%)</title><rect x="25.5190%" y="245" width="0.0387%" height="15" fill="rgb(222,72,44)" fg:x="7917" fg:w="12"/><text x="25.7690%" y="255.50"></text></g><g><title>test.exe`mchess::board::Board::add_pawn_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (61 samples, 0.20%)</title><rect x="25.5576%" y="277" width="0.1966%" height="15" fill="rgb(232,159,9)" fg:x="7929" fg:w="61"/><text x="25.8076%" y="287.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::push (7 samples, 0.02%)</title><rect x="25.7317%" y="261" width="0.0226%" height="15" fill="rgb(210,39,32)" fg:x="7983" fg:w="7"/><text x="25.9817%" y="271.50"></text></g><g><title>test.exe`mchess::board::Board::add_sliding_moves(mchess::piece::Piece, unsigned long long, unsigned long long, alloc::vec::Vec (7 samples, 0.02%)</title><rect x="25.7575%" y="261" width="0.0226%" height="15" fill="rgb(216,194,45)" fg:x="7991" fg:w="7"/><text x="26.0075%" y="271.50"></text></g><g><title>test.exe`mchess::board::Board::add_bitboard_moves(unsigned long long, unsigned long long, unsigned long long, alloc::vec::Vec (7 samples, 0.02%)</title><rect x="25.7575%" y="245" width="0.0226%" height="15" fill="rgb(218,18,35)" fg:x="7991" fg:w="7"/><text x="26.0075%" y="255.50"></text></g><g><title>test.exe`mchess::board::Board::add_queen_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (11 samples, 0.04%)</title><rect x="25.7543%" y="277" width="0.0355%" height="15" fill="rgb(207,83,51)" fg:x="7990" fg:w="11"/><text x="26.0043%" y="287.50"></text></g><g><title>test.exe`mchess::board::Board::get_legal_moves (816 samples, 2.63%)</title><rect x="23.1692%" y="309" width="2.6302%" height="15" fill="rgb(225,63,43)" fg:x="7188" fg:w="816"/><text x="23.4192%" y="319.50">te..</text></g><g><title>test.exe`mchess::board::Board::get_pseudo_legal_moves (220 samples, 0.71%)</title><rect x="25.0903%" y="293" width="0.7091%" height="15" fill="rgb(207,57,36)" fg:x="7784" fg:w="220"/><text x="25.3403%" y="303.50"></text></g><g><title>test.exe`core::num::impl$9::trailing_zeros (9 samples, 0.03%)</title><rect x="26.0863%" y="261" width="0.0290%" height="15" fill="rgb(216,99,33)" fg:x="8093" fg:w="9"/><text x="26.3363%" y="271.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_bishop_moves (65 samples, 0.21%)</title><rect x="26.1153%" y="261" width="0.2095%" height="15" fill="rgb(225,42,16)" fg:x="8102" fg:w="65"/><text x="26.3653%" y="271.50"></text></g><g><title>test.exe`alloc::vec::impl$13::index(alloc::vec::Vec (5 samples, 0.02%)</title><rect x="26.3087%" y="245" width="0.0161%" height="15" fill="rgb(220,201,45)" fg:x="8162" fg:w="5"/><text x="26.5587%" y="255.50"></text></g><g><title>test.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (5 samples, 0.02%)</title><rect x="26.3087%" y="229" width="0.0161%" height="15" fill="rgb(225,33,4)" fg:x="8162" fg:w="5"/><text x="26.5587%" y="239.50"></text></g><g><title>test.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (5 samples, 0.02%)</title><rect x="26.3087%" y="213" width="0.0161%" height="15" fill="rgb(224,33,50)" fg:x="8162" fg:w="5"/><text x="26.5587%" y="223.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::as_slice (22 samples, 0.07%)</title><rect x="26.4440%" y="213" width="0.0709%" height="15" fill="rgb(246,198,51)" fg:x="8204" fg:w="22"/><text x="26.6940%" y="223.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::as_ptr (22 samples, 0.07%)</title><rect x="26.4440%" y="197" width="0.0709%" height="15" fill="rgb(205,22,4)" fg:x="8204" fg:w="22"/><text x="26.6940%" y="207.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u64,alloc::alloc::Global&gt;::ptr (22 samples, 0.07%)</title><rect x="26.4440%" y="181" width="0.0709%" height="15" fill="rgb(206,3,8)" fg:x="8204" fg:w="22"/><text x="26.6940%" y="191.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (22 samples, 0.07%)</title><rect x="26.4440%" y="165" width="0.0709%" height="15" fill="rgb(251,23,15)" fg:x="8204" fg:w="22"/><text x="26.6940%" y="175.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (22 samples, 0.07%)</title><rect x="26.4440%" y="149" width="0.0709%" height="15" fill="rgb(252,88,28)" fg:x="8204" fg:w="22"/><text x="26.6940%" y="159.50"></text></g><g><title>test.exe`alloc::vec::impl$13::index(alloc::vec::Vec (30 samples, 0.10%)</title><rect x="26.4440%" y="245" width="0.0967%" height="15" fill="rgb(212,127,14)" fg:x="8204" fg:w="30"/><text x="26.6940%" y="255.50"></text></g><g><title>test.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (30 samples, 0.10%)</title><rect x="26.4440%" y="229" width="0.0967%" height="15" fill="rgb(247,145,37)" fg:x="8204" fg:w="30"/><text x="26.6940%" y="239.50"></text></g><g><title>test.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (8 samples, 0.03%)</title><rect x="26.5150%" y="213" width="0.0258%" height="15" fill="rgb(209,117,53)" fg:x="8226" fg:w="8"/><text x="26.7650%" y="223.50"></text></g><g><title>test.exe`mchess::board::Board::is_checkmate (1,186 samples, 3.82%)</title><rect x="22.7211%" y="325" width="3.8228%" height="15" fill="rgb(212,90,42)" fg:x="7049" fg:w="1186"/><text x="22.9711%" y="335.50">test..</text></g><g><title>test.exe`mchess::board::Board::is_checked (231 samples, 0.74%)</title><rect x="25.7994%" y="309" width="0.7446%" height="15" fill="rgb(218,164,37)" fg:x="8004" fg:w="231"/><text x="26.0494%" y="319.50"></text></g><g><title>test.exe`mchess::board::Board::is_attacked (231 samples, 0.74%)</title><rect x="25.7994%" y="293" width="0.7446%" height="15" fill="rgb(246,65,34)" fg:x="8004" fg:w="231"/><text x="26.0494%" y="303.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (231 samples, 0.74%)</title><rect x="25.7994%" y="277" width="0.7446%" height="15" fill="rgb(231,100,33)" fg:x="8004" fg:w="231"/><text x="26.0494%" y="287.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_rook_moves (68 samples, 0.22%)</title><rect x="26.3248%" y="261" width="0.2192%" height="15" fill="rgb(228,126,14)" fg:x="8167" fg:w="68"/><text x="26.5748%" y="271.50"></text></g><g><title>test.exe`mchess::board::Board::is_draw (77 samples, 0.25%)</title><rect x="26.5440%" y="325" width="0.2482%" height="15" fill="rgb(215,173,21)" fg:x="8235" fg:w="77"/><text x="26.7940%" y="335.50"></text></g><g><title>test.exe`mchess::board::Board::check_insufficient_material (77 samples, 0.25%)</title><rect x="26.5440%" y="309" width="0.2482%" height="15" fill="rgb(210,6,40)" fg:x="8235" fg:w="77"/><text x="26.7940%" y="319.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::count_non_bk (18 samples, 0.06%)</title><rect x="26.7341%" y="293" width="0.0580%" height="15" fill="rgb(212,48,18)" fg:x="8294" fg:w="18"/><text x="26.9841%" y="303.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::count_material (269 samples, 0.87%)</title><rect x="27.2853%" y="293" width="0.8671%" height="15" fill="rgb(230,214,11)" fg:x="8465" fg:w="269"/><text x="27.5353%" y="303.50"></text></g><g><title>test.exe`core::num::impl$9::count_ones (269 samples, 0.87%)</title><rect x="27.2853%" y="277" width="0.8671%" height="15" fill="rgb(254,105,39)" fg:x="8465" fg:w="269"/><text x="27.5353%" y="287.50"></text></g><g><title>`0x7FF8173347B1 (25 samples, 0.08%)</title><rect x="28.5102%" y="181" width="0.0806%" height="15" fill="rgb(245,158,5)" fg:x="8845" fg:w="25"/><text x="28.7602%" y="191.50"></text></g><g><title>test.exe`core::ptr::drop_in_place(alloc::vec::Vec (32 samples, 0.10%)</title><rect x="28.4908%" y="277" width="0.1031%" height="15" fill="rgb(249,208,11)" fg:x="8839" fg:w="32"/><text x="28.7408%" y="287.50"></text></g><g><title>test.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (32 samples, 0.10%)</title><rect x="28.4908%" y="261" width="0.1031%" height="15" fill="rgb(210,39,28)" fg:x="8839" fg:w="32"/><text x="28.7408%" y="271.50"></text></g><g><title>test.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (32 samples, 0.10%)</title><rect x="28.4908%" y="245" width="0.1031%" height="15" fill="rgb(211,56,53)" fg:x="8839" fg:w="32"/><text x="28.7408%" y="255.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (32 samples, 0.10%)</title><rect x="28.4908%" y="229" width="0.1031%" height="15" fill="rgb(226,201,30)" fg:x="8839" fg:w="32"/><text x="28.7408%" y="239.50"></text></g><g><title>test.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (32 samples, 0.10%)</title><rect x="28.4908%" y="213" width="0.1031%" height="15" fill="rgb(239,101,34)" fg:x="8839" fg:w="32"/><text x="28.7408%" y="223.50"></text></g><g><title>test.exe`alloc::alloc::dealloc (32 samples, 0.10%)</title><rect x="28.4908%" y="197" width="0.1031%" height="15" fill="rgb(226,209,5)" fg:x="8839" fg:w="32"/><text x="28.7408%" y="207.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_bishop_moves (31 samples, 0.10%)</title><rect x="29.1001%" y="149" width="0.0999%" height="15" fill="rgb(250,105,47)" fg:x="9028" fg:w="31"/><text x="29.3501%" y="159.50"></text></g><g><title>test.exe`alloc::vec::impl$13::index(alloc::vec::Vec (13 samples, 0.04%)</title><rect x="29.2225%" y="133" width="0.0419%" height="15" fill="rgb(230,72,3)" fg:x="9066" fg:w="13"/><text x="29.4725%" y="143.50"></text></g><g><title>test.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (13 samples, 0.04%)</title><rect x="29.2225%" y="117" width="0.0419%" height="15" fill="rgb(232,218,39)" fg:x="9066" fg:w="13"/><text x="29.4725%" y="127.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::as_slice (13 samples, 0.04%)</title><rect x="29.2225%" y="101" width="0.0419%" height="15" fill="rgb(248,166,6)" fg:x="9066" fg:w="13"/><text x="29.4725%" y="111.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::as_ptr (5 samples, 0.02%)</title><rect x="29.2483%" y="85" width="0.0161%" height="15" fill="rgb(247,89,20)" fg:x="9074" fg:w="5"/><text x="29.4983%" y="95.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u64,alloc::alloc::Global&gt;::ptr (5 samples, 0.02%)</title><rect x="29.2483%" y="69" width="0.0161%" height="15" fill="rgb(248,130,54)" fg:x="9074" fg:w="5"/><text x="29.4983%" y="79.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (5 samples, 0.02%)</title><rect x="29.2483%" y="53" width="0.0161%" height="15" fill="rgb(234,196,4)" fg:x="9074" fg:w="5"/><text x="29.4983%" y="63.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (5 samples, 0.02%)</title><rect x="29.2483%" y="37" width="0.0161%" height="15" fill="rgb(250,143,31)" fg:x="9074" fg:w="5"/><text x="29.4983%" y="47.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (146 samples, 0.47%)</title><rect x="28.8035%" y="165" width="0.4706%" height="15" fill="rgb(211,110,34)" fg:x="8936" fg:w="146"/><text x="29.0535%" y="175.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_rook_moves (23 samples, 0.07%)</title><rect x="29.2000%" y="149" width="0.0741%" height="15" fill="rgb(215,124,48)" fg:x="9059" fg:w="23"/><text x="29.4500%" y="159.50"></text></g><g><title>test.exe`mchess::board::Board::is_attacked (5 samples, 0.02%)</title><rect x="29.2741%" y="165" width="0.0161%" height="15" fill="rgb(216,46,13)" fg:x="9082" fg:w="5"/><text x="29.5241%" y="175.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (4 samples, 0.01%)</title><rect x="29.2773%" y="149" width="0.0129%" height="15" fill="rgb(205,184,25)" fg:x="9083" fg:w="4"/><text x="29.5273%" y="159.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (13 samples, 0.04%)</title><rect x="29.4385%" y="133" width="0.0419%" height="15" fill="rgb(228,1,10)" fg:x="9133" fg:w="13"/><text x="29.6885%" y="143.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_bishop_moves (11 samples, 0.04%)</title><rect x="29.4804%" y="133" width="0.0355%" height="15" fill="rgb(213,116,27)" fg:x="9146" fg:w="11"/><text x="29.7304%" y="143.50"></text></g><g><title>test.exe`alloc::vec::impl$13::index(alloc::vec::Vec (4 samples, 0.01%)</title><rect x="29.5352%" y="117" width="0.0129%" height="15" fill="rgb(241,95,50)" fg:x="9163" fg:w="4"/><text x="29.7852%" y="127.50"></text></g><g><title>test.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (4 samples, 0.01%)</title><rect x="29.5352%" y="101" width="0.0129%" height="15" fill="rgb(238,48,32)" fg:x="9163" fg:w="4"/><text x="29.7852%" y="111.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::as_slice (4 samples, 0.01%)</title><rect x="29.5352%" y="85" width="0.0129%" height="15" fill="rgb(235,113,49)" fg:x="9163" fg:w="4"/><text x="29.7852%" y="95.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_rook_moves (11 samples, 0.04%)</title><rect x="29.5159%" y="133" width="0.0355%" height="15" fill="rgb(205,127,43)" fg:x="9157" fg:w="11"/><text x="29.7659%" y="143.50"></text></g><g><title>test.exe`mchess::moves::tables::AttackTables::get_line_mask (8 samples, 0.03%)</title><rect x="29.5513%" y="133" width="0.0258%" height="15" fill="rgb(250,162,2)" fg:x="9168" fg:w="8"/><text x="29.8013%" y="143.50"></text></g><g><title>test.exe`core::num::impl$9::trailing_zeros (4 samples, 0.01%)</title><rect x="29.5642%" y="117" width="0.0129%" height="15" fill="rgb(220,13,41)" fg:x="9172" fg:w="4"/><text x="29.8142%" y="127.50"></text></g><g><title>test.exe`mchess::board::Board::is_pinned (97 samples, 0.31%)</title><rect x="29.2902%" y="165" width="0.3127%" height="15" fill="rgb(249,221,25)" fg:x="9087" fg:w="97"/><text x="29.5402%" y="175.50"></text></g><g><title>test.exe`mchess::board::Board::get_pin (94 samples, 0.30%)</title><rect x="29.2999%" y="149" width="0.3030%" height="15" fill="rgb(215,208,19)" fg:x="9090" fg:w="94"/><text x="29.5499%" y="159.50"></text></g><g><title>test.exe`mchess::piece::impl$7::eq (8 samples, 0.03%)</title><rect x="29.5771%" y="133" width="0.0258%" height="15" fill="rgb(236,175,2)" fg:x="9176" fg:w="8"/><text x="29.8271%" y="143.50"></text></g><g><title>test.exe`mchess::moves::helper::get_piece_type (6 samples, 0.02%)</title><rect x="29.6093%" y="165" width="0.0193%" height="15" fill="rgb(241,52,2)" fg:x="9186" fg:w="6"/><text x="29.8593%" y="175.50"></text></g><g><title>test.exe`mchess::moves::helper::get_to (8 samples, 0.03%)</title><rect x="29.6287%" y="165" width="0.0258%" height="15" fill="rgb(248,140,14)" fg:x="9192" fg:w="8"/><text x="29.8787%" y="175.50"></text></g><g><title>test.exe`mchess::moves::helper::is_en_passant (5 samples, 0.02%)</title><rect x="29.6545%" y="165" width="0.0161%" height="15" fill="rgb(253,22,42)" fg:x="9200" fg:w="5"/><text x="29.9045%" y="175.50"></text></g><g><title>test.exe`mchess::moves::helper::get_move_type (5 samples, 0.02%)</title><rect x="29.6545%" y="149" width="0.0161%" height="15" fill="rgb(234,61,47)" fg:x="9200" fg:w="5"/><text x="29.9045%" y="159.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain (381 samples, 1.23%)</title><rect x="28.6069%" y="245" width="1.2281%" height="15" fill="rgb(208,226,15)" fg:x="8875" fg:w="381"/><text x="28.8569%" y="255.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain_mut(alloc::vec::impl$1::retain::closure_env$0 (381 samples, 1.23%)</title><rect x="28.6069%" y="229" width="1.2281%" height="15" fill="rgb(217,221,4)" fg:x="8875" fg:w="381"/><text x="28.8569%" y="239.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain_mut::process_loop(unsigned long long, alloc::vec::impl$1::retain::closure_env$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$2&gt;*, alloc::vec::impl$1::retain_mut::BackshiftOnDrop (379 samples, 1.22%)</title><rect x="28.6133%" y="213" width="1.2216%" height="15" fill="rgb(212,174,34)" fg:x="8877" fg:w="379"/><text x="28.8633%" y="223.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain::closure$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$2&gt;(alloc::vec::impl$1::retain::closure_env$0 (360 samples, 1.16%)</title><rect x="28.6746%" y="197" width="1.1604%" height="15" fill="rgb(253,83,4)" fg:x="8896" fg:w="360"/><text x="28.9246%" y="207.50"></text></g><g><title>test.exe`mchess::moves::legal::impl$0::filter_legal_moves::closure$2 (334 samples, 1.08%)</title><rect x="28.7584%" y="181" width="1.0766%" height="15" fill="rgb(250,195,49)" fg:x="8922" fg:w="334"/><text x="29.0084%" y="191.50"></text></g><g><title>test.exe`mchess::moves::tables::AttackTables::is_between (51 samples, 0.16%)</title><rect x="29.6706%" y="165" width="0.1644%" height="15" fill="rgb(241,192,25)" fg:x="9205" fg:w="51"/><text x="29.9206%" y="175.50"></text></g><g><title>test.exe`core::num::impl$9::trailing_zeros (5 samples, 0.02%)</title><rect x="29.8188%" y="149" width="0.0161%" height="15" fill="rgb(208,124,10)" fg:x="9251" fg:w="5"/><text x="30.0688%" y="159.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain::closure$0(alloc::vec::impl$1::retain::closure_env$0 (10 samples, 0.03%)</title><rect x="29.8801%" y="197" width="0.0322%" height="15" fill="rgb(222,33,0)" fg:x="9270" fg:w="10"/><text x="30.1301%" y="207.50"></text></g><g><title>test.exe`mchess::moves::legal::impl$0::filter_legal_moves::closure$0 (10 samples, 0.03%)</title><rect x="29.8801%" y="181" width="0.0322%" height="15" fill="rgb(234,209,28)" fg:x="9270" fg:w="10"/><text x="30.1301%" y="191.50"></text></g><g><title>test.exe`mchess::moves::helper::get_piece_type (10 samples, 0.03%)</title><rect x="29.8801%" y="165" width="0.0322%" height="15" fill="rgb(224,11,23)" fg:x="9270" fg:w="10"/><text x="30.1301%" y="175.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$0&gt; (38 samples, 0.12%)</title><rect x="29.8350%" y="245" width="0.1225%" height="15" fill="rgb(232,99,1)" fg:x="9256" fg:w="38"/><text x="30.0850%" y="255.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::retain_mut(alloc::vec::impl$1::retain::closure_env$0 (35 samples, 0.11%)</title><rect x="29.8446%" y="229" width="0.1128%" height="15" fill="rgb(237,95,45)" fg:x="9259" fg:w="35"/><text x="30.0946%" y="239.50"></text></g><g><title>test.exe`alloc::vec::impl$1::retain_mut::process_loop(unsigned long long, alloc::vec::impl$1::retain::closure_env$0&lt;u32,alloc::alloc::Global,mchess::moves::legal::impl$0::filter_legal_moves::closure_env$0&gt;*, alloc::vec::impl$1::retain_mut::BackshiftOnDrop (33 samples, 0.11%)</title><rect x="29.8511%" y="213" width="0.1064%" height="15" fill="rgb(208,109,11)" fg:x="9261" fg:w="33"/><text x="30.1011%" y="223.50"></text></g><g><title>test.exe`mchess::board::Board::is_attacked (12 samples, 0.04%)</title><rect x="29.9188%" y="197" width="0.0387%" height="15" fill="rgb(216,190,48)" fg:x="9282" fg:w="12"/><text x="30.1688%" y="207.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (10 samples, 0.03%)</title><rect x="29.9252%" y="181" width="0.0322%" height="15" fill="rgb(251,171,36)" fg:x="9284" fg:w="10"/><text x="30.1752%" y="191.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_rook_moves (4 samples, 0.01%)</title><rect x="29.9446%" y="165" width="0.0129%" height="15" fill="rgb(230,62,22)" fg:x="9290" fg:w="4"/><text x="30.1946%" y="175.50"></text></g><g><title>test.exe`mchess::board::Board::is_checked (4 samples, 0.01%)</title><rect x="29.9575%" y="245" width="0.0129%" height="15" fill="rgb(225,114,35)" fg:x="9294" fg:w="4"/><text x="30.2075%" y="255.50"></text></g><g><title>test.exe`mchess::board::Board::is_attacked (4 samples, 0.01%)</title><rect x="29.9575%" y="229" width="0.0129%" height="15" fill="rgb(215,118,42)" fg:x="9294" fg:w="4"/><text x="30.2075%" y="239.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (4 samples, 0.01%)</title><rect x="29.9575%" y="213" width="0.0129%" height="15" fill="rgb(243,119,21)" fg:x="9294" fg:w="4"/><text x="30.2075%" y="223.50"></text></g><g><title>test.exe`mchess::board::Board::filter_legal_moves(alloc::vec::Vec (432 samples, 1.39%)</title><rect x="28.5972%" y="261" width="1.3925%" height="15" fill="rgb(252,177,53)" fg:x="8872" fg:w="432"/><text x="28.8472%" y="271.50"></text></g><g><title>test.exe`mchess::board::Board::is_double_checked (6 samples, 0.02%)</title><rect x="29.9703%" y="245" width="0.0193%" height="15" fill="rgb(237,209,29)" fg:x="9298" fg:w="6"/><text x="30.2203%" y="255.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (4 samples, 0.01%)</title><rect x="29.9768%" y="229" width="0.0129%" height="15" fill="rgb(212,65,23)" fg:x="9300" fg:w="4"/><text x="30.2268%" y="239.50"></text></g><g><title>`0x7FF81733B86B (4 samples, 0.01%)</title><rect x="30.0896%" y="149" width="0.0129%" height="15" fill="rgb(230,222,46)" fg:x="9335" fg:w="4"/><text x="30.3396%" y="159.50"></text></g><g><title>`0x7FF81733B3C7 (19 samples, 0.06%)</title><rect x="30.0542%" y="165" width="0.0612%" height="15" fill="rgb(215,135,32)" fg:x="9324" fg:w="19"/><text x="30.3042%" y="175.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::with_capacity (32 samples, 0.10%)</title><rect x="30.0348%" y="245" width="0.1031%" height="15" fill="rgb(246,101,22)" fg:x="9318" fg:w="32"/><text x="30.2848%" y="255.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::with_capacity_in (32 samples, 0.10%)</title><rect x="30.0348%" y="229" width="0.1031%" height="15" fill="rgb(206,107,13)" fg:x="9318" fg:w="32"/><text x="30.2848%" y="239.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u32,alloc::alloc::Global&gt;::with_capacity_in (32 samples, 0.10%)</title><rect x="30.0348%" y="213" width="0.1031%" height="15" fill="rgb(250,100,44)" fg:x="9318" fg:w="32"/><text x="30.2848%" y="223.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (32 samples, 0.10%)</title><rect x="30.0348%" y="197" width="0.1031%" height="15" fill="rgb(231,147,38)" fg:x="9318" fg:w="32"/><text x="30.2848%" y="207.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (32 samples, 0.10%)</title><rect x="30.0348%" y="181" width="0.1031%" height="15" fill="rgb(229,8,40)" fg:x="9318" fg:w="32"/><text x="30.2848%" y="191.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (42 samples, 0.14%)</title><rect x="30.1380%" y="245" width="0.1354%" height="15" fill="rgb(221,135,30)" fg:x="9350" fg:w="42"/><text x="30.3880%" y="255.50"></text></g><g><title>test.exe`mchess::board::Board::add_sliding_moves(mchess::piece::Piece, unsigned long long, unsigned long long, alloc::vec::Vec (6 samples, 0.02%)</title><rect x="30.2766%" y="229" width="0.0193%" height="15" fill="rgb(249,193,18)" fg:x="9393" fg:w="6"/><text x="30.5266%" y="239.50"></text></g><g><title>test.exe`mchess::board::Board::add_bitboard_moves(unsigned long long, unsigned long long, unsigned long long, alloc::vec::Vec (6 samples, 0.02%)</title><rect x="30.2766%" y="213" width="0.0193%" height="15" fill="rgb(209,133,39)" fg:x="9393" fg:w="6"/><text x="30.5266%" y="223.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::push (4 samples, 0.01%)</title><rect x="30.2830%" y="197" width="0.0129%" height="15" fill="rgb(232,100,14)" fg:x="9395" fg:w="4"/><text x="30.5330%" y="207.50"></text></g><g><title>test.exe`mchess::board::Board::add_bishop_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (8 samples, 0.03%)</title><rect x="30.2733%" y="245" width="0.0258%" height="15" fill="rgb(224,185,1)" fg:x="9392" fg:w="8"/><text x="30.5233%" y="255.50"></text></g><g><title>test.exe`mchess::board::Board::add_king_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (22 samples, 0.07%)</title><rect x="30.2991%" y="245" width="0.0709%" height="15" fill="rgb(223,139,8)" fg:x="9400" fg:w="22"/><text x="30.5491%" y="255.50"></text></g><g><title>test.exe`mchess::board::Board::is_attacked (4 samples, 0.01%)</title><rect x="30.3571%" y="229" width="0.0129%" height="15" fill="rgb(232,213,38)" fg:x="9418" fg:w="4"/><text x="30.6071%" y="239.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (4 samples, 0.01%)</title><rect x="30.3571%" y="213" width="0.0129%" height="15" fill="rgb(207,94,22)" fg:x="9418" fg:w="4"/><text x="30.6071%" y="223.50"></text></g><g><title>test.exe`mchess::board::Board::add_knight_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (13 samples, 0.04%)</title><rect x="30.3700%" y="245" width="0.0419%" height="15" fill="rgb(219,183,54)" fg:x="9422" fg:w="13"/><text x="30.6200%" y="255.50"></text></g><g><title>test.exe`mchess::board::Board::add_bitboard_moves(unsigned long long, unsigned long long, unsigned long long, alloc::vec::Vec (8 samples, 0.03%)</title><rect x="30.3862%" y="229" width="0.0258%" height="15" fill="rgb(216,185,54)" fg:x="9427" fg:w="8"/><text x="30.6362%" y="239.50"></text></g><g><title>test.exe`mchess::board::Board::add_pawn_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (79 samples, 0.25%)</title><rect x="30.4119%" y="245" width="0.2546%" height="15" fill="rgb(254,217,39)" fg:x="9435" fg:w="79"/><text x="30.6619%" y="255.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::push (14 samples, 0.05%)</title><rect x="30.6215%" y="229" width="0.0451%" height="15" fill="rgb(240,178,23)" fg:x="9500" fg:w="14"/><text x="30.8715%" y="239.50"></text></g><g><title>test.exe`mchess::board::Board::add_sliding_moves(mchess::piece::Piece, unsigned long long, unsigned long long, alloc::vec::Vec (6 samples, 0.02%)</title><rect x="30.6666%" y="229" width="0.0193%" height="15" fill="rgb(218,11,47)" fg:x="9514" fg:w="6"/><text x="30.9166%" y="239.50"></text></g><g><title>test.exe`mchess::board::Board::add_bitboard_moves(unsigned long long, unsigned long long, unsigned long long, alloc::vec::Vec (6 samples, 0.02%)</title><rect x="30.6666%" y="213" width="0.0193%" height="15" fill="rgb(218,51,51)" fg:x="9514" fg:w="6"/><text x="30.9166%" y="223.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::push (5 samples, 0.02%)</title><rect x="30.6698%" y="197" width="0.0161%" height="15" fill="rgb(238,126,27)" fg:x="9515" fg:w="5"/><text x="30.9198%" y="207.50"></text></g><g><title>test.exe`mchess::board::Board::add_queen_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (9 samples, 0.03%)</title><rect x="30.6666%" y="245" width="0.0290%" height="15" fill="rgb(249,202,22)" fg:x="9514" fg:w="9"/><text x="30.9166%" y="255.50"></text></g><g><title>test.exe`mchess::board::Board::get_legal_moves (660 samples, 2.13%)</title><rect x="28.5940%" y="277" width="2.1274%" height="15" fill="rgb(254,195,49)" fg:x="8871" fg:w="660"/><text x="28.8440%" y="287.50">t..</text></g><g><title>test.exe`mchess::board::Board::get_pseudo_legal_moves (227 samples, 0.73%)</title><rect x="29.9897%" y="261" width="0.7317%" height="15" fill="rgb(208,123,14)" fg:x="9304" fg:w="227"/><text x="30.2397%" y="271.50"></text></g><g><title>test.exe`mchess::board::Board::add_rook_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (8 samples, 0.03%)</title><rect x="30.6956%" y="245" width="0.0258%" height="15" fill="rgb(224,200,8)" fg:x="9523" fg:w="8"/><text x="30.9456%" y="255.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_rook_moves (6 samples, 0.02%)</title><rect x="30.7020%" y="229" width="0.0193%" height="15" fill="rgb(217,61,36)" fg:x="9525" fg:w="6"/><text x="30.9520%" y="239.50"></text></g><g><title>test.exe`core::num::impl$9::trailing_zeros (6 samples, 0.02%)</title><rect x="30.9760%" y="229" width="0.0193%" height="15" fill="rgb(206,35,45)" fg:x="9610" fg:w="6"/><text x="31.2260%" y="239.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_bishop_moves (78 samples, 0.25%)</title><rect x="30.9954%" y="229" width="0.2514%" height="15" fill="rgb(217,65,33)" fg:x="9616" fg:w="78"/><text x="31.2454%" y="239.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::as_slice (13 samples, 0.04%)</title><rect x="31.3016%" y="181" width="0.0419%" height="15" fill="rgb(222,158,48)" fg:x="9711" fg:w="13"/><text x="31.5516%" y="191.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::as_ptr (6 samples, 0.02%)</title><rect x="31.3241%" y="165" width="0.0193%" height="15" fill="rgb(254,2,54)" fg:x="9718" fg:w="6"/><text x="31.5741%" y="175.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u64,alloc::alloc::Global&gt;::ptr (6 samples, 0.02%)</title><rect x="31.3241%" y="149" width="0.0193%" height="15" fill="rgb(250,143,38)" fg:x="9718" fg:w="6"/><text x="31.5741%" y="159.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (6 samples, 0.02%)</title><rect x="31.3241%" y="133" width="0.0193%" height="15" fill="rgb(248,25,0)" fg:x="9718" fg:w="6"/><text x="31.5741%" y="143.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (6 samples, 0.02%)</title><rect x="31.3241%" y="117" width="0.0193%" height="15" fill="rgb(206,152,27)" fg:x="9718" fg:w="6"/><text x="31.5741%" y="127.50"></text></g><g><title>test.exe`alloc::vec::impl$13::index(alloc::vec::Vec (14 samples, 0.05%)</title><rect x="31.3016%" y="213" width="0.0451%" height="15" fill="rgb(240,77,30)" fg:x="9711" fg:w="14"/><text x="31.5516%" y="223.50"></text></g><g><title>test.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (14 samples, 0.05%)</title><rect x="31.3016%" y="197" width="0.0451%" height="15" fill="rgb(231,5,3)" fg:x="9711" fg:w="14"/><text x="31.5516%" y="207.50"></text></g><g><title>test.exe`mchess::board::Board::is_checkmate (996 samples, 3.21%)</title><rect x="28.1524%" y="293" width="3.2104%" height="15" fill="rgb(207,226,32)" fg:x="8734" fg:w="996"/><text x="28.4024%" y="303.50">tes..</text></g><g><title>test.exe`mchess::board::Board::is_checked (199 samples, 0.64%)</title><rect x="30.7214%" y="277" width="0.6414%" height="15" fill="rgb(222,207,47)" fg:x="9531" fg:w="199"/><text x="30.9714%" y="287.50"></text></g><g><title>test.exe`mchess::board::Board::is_attacked (199 samples, 0.64%)</title><rect x="30.7214%" y="261" width="0.6414%" height="15" fill="rgb(229,115,45)" fg:x="9531" fg:w="199"/><text x="30.9714%" y="271.50"></text></g><g><title>test.exe`mchess::board::Board::get_attackers (199 samples, 0.64%)</title><rect x="30.7214%" y="245" width="0.6414%" height="15" fill="rgb(224,191,6)" fg:x="9531" fg:w="199"/><text x="30.9714%" y="255.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_rook_moves (36 samples, 0.12%)</title><rect x="31.2468%" y="229" width="0.1160%" height="15" fill="rgb(230,227,24)" fg:x="9694" fg:w="36"/><text x="31.4968%" y="239.50"></text></g><g><title>test.exe`core::num::impl$9::wrapping_mul (5 samples, 0.02%)</title><rect x="31.3467%" y="213" width="0.0161%" height="15" fill="rgb(228,80,19)" fg:x="9725" fg:w="5"/><text x="31.5967%" y="223.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::count_bishops (140 samples, 0.45%)</title><rect x="31.5788%" y="261" width="0.4513%" height="15" fill="rgb(247,229,0)" fg:x="9797" fg:w="140"/><text x="31.8288%" y="271.50"></text></g><g><title>test.exe`core::num::impl$9::count_ones (140 samples, 0.45%)</title><rect x="31.5788%" y="245" width="0.4513%" height="15" fill="rgb(237,194,15)" fg:x="9797" fg:w="140"/><text x="31.8288%" y="255.50"></text></g><g><title>test.exe`mchess::board::Board::is_draw (231 samples, 0.74%)</title><rect x="31.3628%" y="293" width="0.7446%" height="15" fill="rgb(219,203,20)" fg:x="9730" fg:w="231"/><text x="31.6128%" y="303.50"></text></g><g><title>test.exe`mchess::board::Board::check_insufficient_material (231 samples, 0.74%)</title><rect x="31.3628%" y="277" width="0.7446%" height="15" fill="rgb(234,128,8)" fg:x="9730" fg:w="231"/><text x="31.6128%" y="287.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::count_non_bk (24 samples, 0.08%)</title><rect x="32.0300%" y="261" width="0.0774%" height="15" fill="rgb(248,202,8)" fg:x="9937" fg:w="24"/><text x="32.2800%" y="271.50"></text></g><g><title>test.exe`mchess::evaluation::EvaluationResult::combine (28 samples, 0.09%)</title><rect x="32.1074%" y="293" width="0.0903%" height="15" fill="rgb(206,104,37)" fg:x="9961" fg:w="28"/><text x="32.3574%" y="303.50"></text></g><g><title>`0x7FF8165B5880 (18 samples, 0.06%)</title><rect x="32.4039%" y="277" width="0.0580%" height="15" fill="rgb(223,8,27)" fg:x="10053" fg:w="18"/><text x="32.6539%" y="287.50"></text></g><g><title>`0x7FF817334760 (27 samples, 0.09%)</title><rect x="32.4620%" y="277" width="0.0870%" height="15" fill="rgb(216,217,28)" fg:x="10071" fg:w="27"/><text x="32.7120%" y="287.50"></text></g><g><title>`0x7FF817334765 (18 samples, 0.06%)</title><rect x="32.5490%" y="277" width="0.0580%" height="15" fill="rgb(249,199,1)" fg:x="10098" fg:w="18"/><text x="32.7990%" y="287.50"></text></g><g><title>`0x7FF81733476A (20 samples, 0.06%)</title><rect x="32.6070%" y="277" width="0.0645%" height="15" fill="rgb(240,85,17)" fg:x="10116" fg:w="20"/><text x="32.8570%" y="287.50"></text></g><g><title>`0x7FF81733476B (12 samples, 0.04%)</title><rect x="32.6715%" y="277" width="0.0387%" height="15" fill="rgb(206,108,45)" fg:x="10136" fg:w="12"/><text x="32.9215%" y="287.50"></text></g><g><title>`0x7FF817334772 (5 samples, 0.02%)</title><rect x="32.7166%" y="277" width="0.0161%" height="15" fill="rgb(245,210,41)" fg:x="10150" fg:w="5"/><text x="32.9666%" y="287.50"></text></g><g><title>`0x7FF817334774 (8 samples, 0.03%)</title><rect x="32.7327%" y="277" width="0.0258%" height="15" fill="rgb(206,13,37)" fg:x="10155" fg:w="8"/><text x="32.9827%" y="287.50"></text></g><g><title>`0x7FF817334785 (6 samples, 0.02%)</title><rect x="32.7682%" y="277" width="0.0193%" height="15" fill="rgb(250,61,18)" fg:x="10166" fg:w="6"/><text x="33.0182%" y="287.50"></text></g><g><title>`0x7FF81733478C (21 samples, 0.07%)</title><rect x="32.7875%" y="277" width="0.0677%" height="15" fill="rgb(235,172,48)" fg:x="10172" fg:w="21"/><text x="33.0375%" y="287.50"></text></g><g><title>`0x7FF817334795 (6 samples, 0.02%)</title><rect x="32.8552%" y="277" width="0.0193%" height="15" fill="rgb(249,201,17)" fg:x="10193" fg:w="6"/><text x="33.1052%" y="287.50"></text></g><g><title>`0x7FF817334797 (8 samples, 0.03%)</title><rect x="32.8745%" y="277" width="0.0258%" height="15" fill="rgb(219,208,6)" fg:x="10199" fg:w="8"/><text x="33.1245%" y="287.50"></text></g><g><title>`0x7FF8173347A0 (4 samples, 0.01%)</title><rect x="32.9100%" y="277" width="0.0129%" height="15" fill="rgb(248,31,23)" fg:x="10210" fg:w="4"/><text x="33.1600%" y="287.50"></text></g><g><title>`0x7FF8173347A3 (6 samples, 0.02%)</title><rect x="32.9229%" y="277" width="0.0193%" height="15" fill="rgb(245,15,42)" fg:x="10214" fg:w="6"/><text x="33.1729%" y="287.50"></text></g><g><title>`0x7FF817335710 (5 samples, 0.02%)</title><rect x="32.9422%" y="261" width="0.0161%" height="15" fill="rgb(222,217,39)" fg:x="10220" fg:w="5"/><text x="33.1922%" y="271.50"></text></g><g><title>`0x7FF817335715 (52 samples, 0.17%)</title><rect x="32.9584%" y="261" width="0.1676%" height="15" fill="rgb(210,219,27)" fg:x="10225" fg:w="52"/><text x="33.2084%" y="271.50"></text></g><g><title>`0x7FF81733571A (18 samples, 0.06%)</title><rect x="33.1260%" y="261" width="0.0580%" height="15" fill="rgb(252,166,36)" fg:x="10277" fg:w="18"/><text x="33.3760%" y="271.50"></text></g><g><title>`0x7FF81733571F (5 samples, 0.02%)</title><rect x="33.1840%" y="261" width="0.0161%" height="15" fill="rgb(245,132,34)" fg:x="10295" fg:w="5"/><text x="33.4340%" y="271.50"></text></g><g><title>`0x7FF817335720 (11 samples, 0.04%)</title><rect x="33.2001%" y="261" width="0.0355%" height="15" fill="rgb(236,54,3)" fg:x="10300" fg:w="11"/><text x="33.4501%" y="271.50"></text></g><g><title>`0x7FF817335722 (8 samples, 0.03%)</title><rect x="33.2356%" y="261" width="0.0258%" height="15" fill="rgb(241,173,43)" fg:x="10311" fg:w="8"/><text x="33.4856%" y="271.50"></text></g><g><title>`0x7FF817335724 (12 samples, 0.04%)</title><rect x="33.2613%" y="261" width="0.0387%" height="15" fill="rgb(215,190,9)" fg:x="10319" fg:w="12"/><text x="33.5113%" y="271.50"></text></g><g><title>`0x7FF817335726 (8 samples, 0.03%)</title><rect x="33.3000%" y="261" width="0.0258%" height="15" fill="rgb(242,101,16)" fg:x="10331" fg:w="8"/><text x="33.5500%" y="271.50"></text></g><g><title>`0x7FF817335728 (16 samples, 0.05%)</title><rect x="33.3258%" y="261" width="0.0516%" height="15" fill="rgb(223,190,21)" fg:x="10339" fg:w="16"/><text x="33.5758%" y="271.50"></text></g><g><title>`0x7FF817335731 (4 samples, 0.01%)</title><rect x="33.3838%" y="261" width="0.0129%" height="15" fill="rgb(215,228,25)" fg:x="10357" fg:w="4"/><text x="33.6338%" y="271.50"></text></g><g><title>`0x7FF817335734 (14 samples, 0.05%)</title><rect x="33.3967%" y="261" width="0.0451%" height="15" fill="rgb(225,36,22)" fg:x="10361" fg:w="14"/><text x="33.6467%" y="271.50"></text></g><g><title>`0x7FF817335744 (13 samples, 0.04%)</title><rect x="33.4612%" y="261" width="0.0419%" height="15" fill="rgb(251,106,46)" fg:x="10381" fg:w="13"/><text x="33.7112%" y="271.50"></text></g><g><title>`0x7FF81733591B (12 samples, 0.04%)</title><rect x="33.5128%" y="261" width="0.0387%" height="15" fill="rgb(208,90,1)" fg:x="10397" fg:w="12"/><text x="33.7628%" y="271.50"></text></g><g><title>`0x7FF81733592A (12 samples, 0.04%)</title><rect x="33.5514%" y="261" width="0.0387%" height="15" fill="rgb(243,10,4)" fg:x="10409" fg:w="12"/><text x="33.8014%" y="271.50"></text></g><g><title>`0x7FF817335937 (19 samples, 0.06%)</title><rect x="33.5901%" y="261" width="0.0612%" height="15" fill="rgb(212,137,27)" fg:x="10421" fg:w="19"/><text x="33.8401%" y="271.50"></text></g><g><title>`0x7FF81733593E (14 samples, 0.05%)</title><rect x="33.6514%" y="261" width="0.0451%" height="15" fill="rgb(231,220,49)" fg:x="10440" fg:w="14"/><text x="33.9014%" y="271.50"></text></g><g><title>`0x7FF817335B13 (7 samples, 0.02%)</title><rect x="33.6997%" y="261" width="0.0226%" height="15" fill="rgb(237,96,20)" fg:x="10455" fg:w="7"/><text x="33.9497%" y="271.50"></text></g><g><title>`0x7FF817335B43 (6 samples, 0.02%)</title><rect x="33.7384%" y="261" width="0.0193%" height="15" fill="rgb(239,229,30)" fg:x="10467" fg:w="6"/><text x="33.9884%" y="271.50"></text></g><g><title>`0x7FF817335B57 (14 samples, 0.05%)</title><rect x="33.7577%" y="261" width="0.0451%" height="15" fill="rgb(219,65,33)" fg:x="10473" fg:w="14"/><text x="34.0077%" y="271.50"></text></g><g><title>`0x7FF817335B90 (12 samples, 0.04%)</title><rect x="33.8061%" y="261" width="0.0387%" height="15" fill="rgb(243,134,7)" fg:x="10488" fg:w="12"/><text x="34.0561%" y="271.50"></text></g><g><title>`0x7FF817335B99 (18 samples, 0.06%)</title><rect x="33.8448%" y="261" width="0.0580%" height="15" fill="rgb(216,177,54)" fg:x="10500" fg:w="18"/><text x="34.0948%" y="271.50"></text></g><g><title>`0x7FF817334820 (14 samples, 0.05%)</title><rect x="33.9350%" y="245" width="0.0451%" height="15" fill="rgb(211,160,20)" fg:x="10528" fg:w="14"/><text x="34.1850%" y="255.50"></text></g><g><title>`0x7FF817335BA1 (44 samples, 0.14%)</title><rect x="33.9028%" y="261" width="0.1418%" height="15" fill="rgb(239,85,39)" fg:x="10518" fg:w="44"/><text x="34.1528%" y="271.50"></text></g><g><title>`0x7FF81733482D (19 samples, 0.06%)</title><rect x="33.9834%" y="245" width="0.0612%" height="15" fill="rgb(232,125,22)" fg:x="10543" fg:w="19"/><text x="34.2334%" y="255.50"></text></g><g><title>`0x7FF817335BB2 (9 samples, 0.03%)</title><rect x="34.0511%" y="261" width="0.0290%" height="15" fill="rgb(244,57,34)" fg:x="10564" fg:w="9"/><text x="34.3011%" y="271.50"></text></g><g><title>`0x7FF817335BC9 (6 samples, 0.02%)</title><rect x="34.0865%" y="261" width="0.0193%" height="15" fill="rgb(214,203,32)" fg:x="10575" fg:w="6"/><text x="34.3365%" y="271.50"></text></g><g><title>`0x7FF817335BCE (8 samples, 0.03%)</title><rect x="34.1059%" y="261" width="0.0258%" height="15" fill="rgb(207,58,43)" fg:x="10581" fg:w="8"/><text x="34.3559%" y="271.50"></text></g><g><title>`0x7FF8173B7487 (8 samples, 0.03%)</title><rect x="34.1316%" y="261" width="0.0258%" height="15" fill="rgb(215,193,15)" fg:x="10589" fg:w="8"/><text x="34.3816%" y="271.50"></text></g><g><title>`0x7FF8173B7495 (8 samples, 0.03%)</title><rect x="34.1574%" y="261" width="0.0258%" height="15" fill="rgb(232,15,44)" fg:x="10597" fg:w="8"/><text x="34.4074%" y="271.50"></text></g><g><title>`0x7FF8173B749B (10 samples, 0.03%)</title><rect x="34.1832%" y="261" width="0.0322%" height="15" fill="rgb(212,3,48)" fg:x="10605" fg:w="10"/><text x="34.4332%" y="271.50"></text></g><g><title>`0x7FF8173B749F (5 samples, 0.02%)</title><rect x="34.2154%" y="261" width="0.0161%" height="15" fill="rgb(218,128,7)" fg:x="10615" fg:w="5"/><text x="34.4654%" y="271.50"></text></g><g><title>`0x7FF8173B74A1 (9 samples, 0.03%)</title><rect x="34.2316%" y="261" width="0.0290%" height="15" fill="rgb(226,216,39)" fg:x="10620" fg:w="9"/><text x="34.4816%" y="271.50"></text></g><g><title>`0x7FF8173B74A4 (19 samples, 0.06%)</title><rect x="34.2606%" y="261" width="0.0612%" height="15" fill="rgb(243,47,51)" fg:x="10629" fg:w="19"/><text x="34.5106%" y="271.50"></text></g><g><title>`0x7FF8173B74AD (12 samples, 0.04%)</title><rect x="34.3218%" y="261" width="0.0387%" height="15" fill="rgb(241,183,40)" fg:x="10648" fg:w="12"/><text x="34.5718%" y="271.50"></text></g><g><title>`0x7FF8173B74B7 (22 samples, 0.07%)</title><rect x="34.3605%" y="261" width="0.0709%" height="15" fill="rgb(231,217,32)" fg:x="10660" fg:w="22"/><text x="34.6105%" y="271.50"></text></g><g><title>`0x7FF8173B74BA (70 samples, 0.23%)</title><rect x="34.4314%" y="261" width="0.2256%" height="15" fill="rgb(229,61,38)" fg:x="10682" fg:w="70"/><text x="34.6814%" y="271.50"></text></g><g><title>`0x7FF8173B74BF (22 samples, 0.07%)</title><rect x="34.6570%" y="261" width="0.0709%" height="15" fill="rgb(225,210,5)" fg:x="10752" fg:w="22"/><text x="34.9070%" y="271.50"></text></g><g><title>`0x7FF8173B74CF (58 samples, 0.19%)</title><rect x="34.7312%" y="261" width="0.1870%" height="15" fill="rgb(231,79,45)" fg:x="10775" fg:w="58"/><text x="34.9812%" y="271.50"></text></g><g><title>`0x7FF8173B74DC (24 samples, 0.08%)</title><rect x="34.9181%" y="261" width="0.0774%" height="15" fill="rgb(224,100,7)" fg:x="10833" fg:w="24"/><text x="35.1681%" y="271.50"></text></g><g><title>`0x7FF8173B74E8 (76 samples, 0.24%)</title><rect x="34.9955%" y="261" width="0.2450%" height="15" fill="rgb(241,198,18)" fg:x="10857" fg:w="76"/><text x="35.2455%" y="271.50"></text></g><g><title>`0x7FF8173B74EF (13 samples, 0.04%)</title><rect x="35.2405%" y="261" width="0.0419%" height="15" fill="rgb(252,97,53)" fg:x="10933" fg:w="13"/><text x="35.4905%" y="271.50"></text></g><g><title>`0x7FF8173B74F3 (60 samples, 0.19%)</title><rect x="35.2824%" y="261" width="0.1934%" height="15" fill="rgb(220,88,7)" fg:x="10946" fg:w="60"/><text x="35.5324%" y="271.50"></text></g><g><title>`0x7FF8173B74F6 (35 samples, 0.11%)</title><rect x="35.4758%" y="261" width="0.1128%" height="15" fill="rgb(213,176,14)" fg:x="11006" fg:w="35"/><text x="35.7258%" y="271.50"></text></g><g><title>`0x7FF8173B74FE (22 samples, 0.07%)</title><rect x="35.5886%" y="261" width="0.0709%" height="15" fill="rgb(246,73,7)" fg:x="11041" fg:w="22"/><text x="35.8386%" y="271.50"></text></g><g><title>`0x7FF8173B7500 (23 samples, 0.07%)</title><rect x="35.6595%" y="261" width="0.0741%" height="15" fill="rgb(245,64,36)" fg:x="11063" fg:w="23"/><text x="35.9095%" y="271.50"></text></g><g><title>`0x7FF8173B7503 (5 samples, 0.02%)</title><rect x="35.7336%" y="261" width="0.0161%" height="15" fill="rgb(245,80,10)" fg:x="11086" fg:w="5"/><text x="35.9836%" y="271.50"></text></g><g><title>`0x7FF8173B7506 (44 samples, 0.14%)</title><rect x="35.7497%" y="261" width="0.1418%" height="15" fill="rgb(232,107,50)" fg:x="11091" fg:w="44"/><text x="35.9997%" y="271.50"></text></g><g><title>`0x7FF8173B750C (21 samples, 0.07%)</title><rect x="35.8980%" y="261" width="0.0677%" height="15" fill="rgb(253,3,0)" fg:x="11137" fg:w="21"/><text x="36.1480%" y="271.50"></text></g><g><title>`0x7FF8173B750F (15 samples, 0.05%)</title><rect x="35.9657%" y="261" width="0.0483%" height="15" fill="rgb(212,99,53)" fg:x="11158" fg:w="15"/><text x="36.2157%" y="271.50"></text></g><g><title>`0x7FF8173B751D (16 samples, 0.05%)</title><rect x="36.0141%" y="261" width="0.0516%" height="15" fill="rgb(249,111,54)" fg:x="11173" fg:w="16"/><text x="36.2641%" y="271.50"></text></g><g><title>`0x7FF8173B7522 (35 samples, 0.11%)</title><rect x="36.0656%" y="261" width="0.1128%" height="15" fill="rgb(249,55,30)" fg:x="11189" fg:w="35"/><text x="36.3156%" y="271.50"></text></g><g><title>`0x7FF817334850 (20 samples, 0.06%)</title><rect x="36.1140%" y="245" width="0.0645%" height="15" fill="rgb(237,47,42)" fg:x="11204" fg:w="20"/><text x="36.3640%" y="255.50"></text></g><g><title>`0x7FF8173B753F (19 samples, 0.06%)</title><rect x="36.1784%" y="261" width="0.0612%" height="15" fill="rgb(211,20,18)" fg:x="11224" fg:w="19"/><text x="36.4284%" y="271.50"></text></g><g><title>`0x7FF8173B7573 (13 samples, 0.04%)</title><rect x="36.2397%" y="261" width="0.0419%" height="15" fill="rgb(231,203,46)" fg:x="11243" fg:w="13"/><text x="36.4897%" y="271.50"></text></g><g><title>`0x7FF8173B7587 (17 samples, 0.05%)</title><rect x="36.2880%" y="261" width="0.0548%" height="15" fill="rgb(237,142,3)" fg:x="11258" fg:w="17"/><text x="36.5380%" y="271.50"></text></g><g><title>`0x7FF8173B7591 (14 samples, 0.05%)</title><rect x="36.3428%" y="261" width="0.0451%" height="15" fill="rgb(241,107,1)" fg:x="11275" fg:w="14"/><text x="36.5928%" y="271.50"></text></g><g><title>`0x7FF8173B75A2 (13 samples, 0.04%)</title><rect x="36.3880%" y="261" width="0.0419%" height="15" fill="rgb(229,83,13)" fg:x="11289" fg:w="13"/><text x="36.6380%" y="271.50"></text></g><g><title>`0x7FF8173B75AF (14 samples, 0.05%)</title><rect x="36.4299%" y="261" width="0.0451%" height="15" fill="rgb(241,91,40)" fg:x="11302" fg:w="14"/><text x="36.6799%" y="271.50"></text></g><g><title>`0x7FF8173B75BA (296 samples, 0.95%)</title><rect x="36.4750%" y="261" width="0.9541%" height="15" fill="rgb(225,3,45)" fg:x="11316" fg:w="296"/><text x="36.7250%" y="271.50"></text></g><g><title>`0x7FF8173B75D2 (17 samples, 0.05%)</title><rect x="37.4291%" y="261" width="0.0548%" height="15" fill="rgb(244,223,14)" fg:x="11612" fg:w="17"/><text x="37.6791%" y="271.50"></text></g><g><title>`0x7FF8173B75F6 (28 samples, 0.09%)</title><rect x="37.4839%" y="261" width="0.0903%" height="15" fill="rgb(224,124,37)" fg:x="11629" fg:w="28"/><text x="37.7339%" y="271.50"></text></g><g><title>`0x7FF8173B75FA (39 samples, 0.13%)</title><rect x="37.5741%" y="261" width="0.1257%" height="15" fill="rgb(251,171,30)" fg:x="11657" fg:w="39"/><text x="37.8241%" y="271.50"></text></g><g><title>`0x7FF8173B763B (17 samples, 0.05%)</title><rect x="37.7031%" y="261" width="0.0548%" height="15" fill="rgb(236,46,54)" fg:x="11697" fg:w="17"/><text x="37.9531%" y="271.50"></text></g><g><title>`0x7FF8173B764A (12 samples, 0.04%)</title><rect x="37.7675%" y="261" width="0.0387%" height="15" fill="rgb(245,213,5)" fg:x="11717" fg:w="12"/><text x="38.0175%" y="271.50"></text></g><g><title>`0x7FF8173B7655 (18 samples, 0.06%)</title><rect x="37.8159%" y="261" width="0.0580%" height="15" fill="rgb(230,144,27)" fg:x="11732" fg:w="18"/><text x="38.0659%" y="271.50"></text></g><g><title>`0x7FF8173B766C (12 samples, 0.04%)</title><rect x="37.8836%" y="261" width="0.0387%" height="15" fill="rgb(220,86,6)" fg:x="11753" fg:w="12"/><text x="38.1336%" y="271.50"></text></g><g><title>`0x7FF8173B7680 (20 samples, 0.06%)</title><rect x="37.9287%" y="261" width="0.0645%" height="15" fill="rgb(240,20,13)" fg:x="11767" fg:w="20"/><text x="38.1787%" y="271.50"></text></g><g><title>`0x7FF8173347B1 (1,583 samples, 5.10%)</title><rect x="32.9422%" y="277" width="5.1025%" height="15" fill="rgb(217,89,34)" fg:x="10220" fg:w="1583"/><text x="33.1922%" y="287.50">`0x7FF..</text></g><g><title>`0x7FF8173B78CE (12 samples, 0.04%)</title><rect x="38.0061%" y="261" width="0.0387%" height="15" fill="rgb(229,13,5)" fg:x="11791" fg:w="12"/><text x="38.2561%" y="271.50"></text></g><g><title>`0x7FF8173347BC (14 samples, 0.05%)</title><rect x="38.0447%" y="277" width="0.0451%" height="15" fill="rgb(244,67,35)" fg:x="11803" fg:w="14"/><text x="38.2947%" y="287.50"></text></g><g><title>`0x7FF8173347C6 (18 samples, 0.06%)</title><rect x="38.0899%" y="277" width="0.0580%" height="15" fill="rgb(221,40,2)" fg:x="11817" fg:w="18"/><text x="38.3399%" y="287.50"></text></g><g><title>test.exe`__rust_dealloc (14 samples, 0.05%)</title><rect x="38.1479%" y="277" width="0.0451%" height="15" fill="rgb(237,157,21)" fg:x="11835" fg:w="14"/><text x="38.3979%" y="287.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::len (15 samples, 0.05%)</title><rect x="38.1930%" y="277" width="0.0483%" height="15" fill="rgb(222,94,11)" fg:x="11849" fg:w="15"/><text x="38.4430%" y="287.50"></text></g><g><title>test.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (10 samples, 0.03%)</title><rect x="38.2446%" y="213" width="0.0322%" height="15" fill="rgb(249,113,6)" fg:x="11865" fg:w="10"/><text x="38.4946%" y="223.50"></text></g><g><title>test.exe`alloc::alloc::dealloc (10 samples, 0.03%)</title><rect x="38.2446%" y="197" width="0.0322%" height="15" fill="rgb(238,137,36)" fg:x="11865" fg:w="10"/><text x="38.4946%" y="207.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (26 samples, 0.08%)</title><rect x="38.2446%" y="229" width="0.0838%" height="15" fill="rgb(210,102,26)" fg:x="11865" fg:w="26"/><text x="38.4946%" y="239.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (16 samples, 0.05%)</title><rect x="38.2768%" y="213" width="0.0516%" height="15" fill="rgb(218,30,30)" fg:x="11875" fg:w="16"/><text x="38.5268%" y="223.50"></text></g><g><title>test.exe`core::num::impl$11::unchecked_mul (10 samples, 0.03%)</title><rect x="38.2962%" y="197" width="0.0322%" height="15" fill="rgb(214,67,26)" fg:x="11881" fg:w="10"/><text x="38.5462%" y="207.50"></text></g><g><title>`0x7FF81733A9A5 (20 samples, 0.06%)</title><rect x="43.9595%" y="133" width="0.0645%" height="15" fill="rgb(251,9,53)" fg:x="13638" fg:w="20"/><text x="44.2095%" y="143.50"></text></g><g><title>`0x7FF81733A9AF (21 samples, 0.07%)</title><rect x="44.0369%" y="133" width="0.0677%" height="15" fill="rgb(228,204,25)" fg:x="13662" fg:w="21"/><text x="44.2869%" y="143.50"></text></g><g><title>`0x7FF81733A9C0 (20 samples, 0.06%)</title><rect x="44.1142%" y="133" width="0.0645%" height="15" fill="rgb(207,153,8)" fg:x="13686" fg:w="20"/><text x="44.3642%" y="143.50"></text></g><g><title>`0x7FF81733A9D0 (21 samples, 0.07%)</title><rect x="44.1787%" y="133" width="0.0677%" height="15" fill="rgb(242,9,16)" fg:x="13706" fg:w="21"/><text x="44.4287%" y="143.50"></text></g><g><title>`0x7FF81733A9DB (13 samples, 0.04%)</title><rect x="44.2464%" y="133" width="0.0419%" height="15" fill="rgb(217,211,10)" fg:x="13727" fg:w="13"/><text x="44.4964%" y="143.50"></text></g><g><title>`0x7FF81733A9EC (10 samples, 0.03%)</title><rect x="44.2915%" y="133" width="0.0322%" height="15" fill="rgb(219,228,52)" fg:x="13741" fg:w="10"/><text x="44.5415%" y="143.50"></text></g><g><title>`0x7FF81733AA25 (13 samples, 0.04%)</title><rect x="44.3270%" y="133" width="0.0419%" height="15" fill="rgb(231,92,29)" fg:x="13752" fg:w="13"/><text x="44.5770%" y="143.50"></text></g><g><title>`0x7FF81733AA2E (13 samples, 0.04%)</title><rect x="44.3689%" y="133" width="0.0419%" height="15" fill="rgb(232,8,23)" fg:x="13765" fg:w="13"/><text x="44.6189%" y="143.50"></text></g><g><title>`0x7FF81733AA34 (4 samples, 0.01%)</title><rect x="44.4140%" y="133" width="0.0129%" height="15" fill="rgb(216,211,34)" fg:x="13779" fg:w="4"/><text x="44.6640%" y="143.50"></text></g><g><title>`0x7FF81733AA36 (16 samples, 0.05%)</title><rect x="44.4269%" y="133" width="0.0516%" height="15" fill="rgb(236,151,0)" fg:x="13783" fg:w="16"/><text x="44.6769%" y="143.50"></text></g><g><title>`0x7FF81733AA45 (20 samples, 0.06%)</title><rect x="44.4817%" y="133" width="0.0645%" height="15" fill="rgb(209,168,3)" fg:x="13800" fg:w="20"/><text x="44.7317%" y="143.50"></text></g><g><title>`0x7FF81733AA56 (15 samples, 0.05%)</title><rect x="44.5494%" y="133" width="0.0483%" height="15" fill="rgb(208,129,28)" fg:x="13821" fg:w="15"/><text x="44.7994%" y="143.50"></text></g><g><title>`0x7FF81733B278 (24 samples, 0.08%)</title><rect x="44.6074%" y="133" width="0.0774%" height="15" fill="rgb(229,78,22)" fg:x="13839" fg:w="24"/><text x="44.8574%" y="143.50"></text></g><g><title>`0x7FF81733B286 (8 samples, 0.03%)</title><rect x="44.6848%" y="133" width="0.0258%" height="15" fill="rgb(228,187,13)" fg:x="13863" fg:w="8"/><text x="44.9348%" y="143.50"></text></g><g><title>`0x7FF81733B2A6 (7 samples, 0.02%)</title><rect x="44.7105%" y="133" width="0.0226%" height="15" fill="rgb(240,119,24)" fg:x="13871" fg:w="7"/><text x="44.9605%" y="143.50"></text></g><g><title>`0x7FF81733B2A8 (18 samples, 0.06%)</title><rect x="44.7331%" y="133" width="0.0580%" height="15" fill="rgb(209,194,42)" fg:x="13878" fg:w="18"/><text x="44.9831%" y="143.50"></text></g><g><title>`0x7FF81733B2BE (15 samples, 0.05%)</title><rect x="44.7911%" y="133" width="0.0483%" height="15" fill="rgb(247,200,46)" fg:x="13896" fg:w="15"/><text x="45.0411%" y="143.50"></text></g><g><title>`0x7FF81733B307 (19 samples, 0.06%)</title><rect x="44.8395%" y="133" width="0.0612%" height="15" fill="rgb(218,76,16)" fg:x="13911" fg:w="19"/><text x="45.0895%" y="143.50"></text></g><g><title>`0x7FF81733B362 (19 samples, 0.06%)</title><rect x="44.9039%" y="133" width="0.0612%" height="15" fill="rgb(225,21,48)" fg:x="13931" fg:w="19"/><text x="45.1539%" y="143.50"></text></g><g><title>`0x7FF81733B36D (14 samples, 0.05%)</title><rect x="44.9652%" y="133" width="0.0451%" height="15" fill="rgb(239,223,50)" fg:x="13950" fg:w="14"/><text x="45.2152%" y="143.50"></text></g><g><title>`0x7FF81733B387 (21 samples, 0.07%)</title><rect x="45.0135%" y="133" width="0.0677%" height="15" fill="rgb(244,45,21)" fg:x="13965" fg:w="21"/><text x="45.2635%" y="143.50"></text></g><g><title>`0x7FF81733B394 (11 samples, 0.04%)</title><rect x="45.0812%" y="133" width="0.0355%" height="15" fill="rgb(232,33,43)" fg:x="13986" fg:w="11"/><text x="45.3312%" y="143.50"></text></g><g><title>`0x7FF81733B39E (15 samples, 0.05%)</title><rect x="45.1231%" y="133" width="0.0483%" height="15" fill="rgb(209,8,3)" fg:x="13999" fg:w="15"/><text x="45.3731%" y="143.50"></text></g><g><title>`0x7FF81733B3A3 (6 samples, 0.02%)</title><rect x="45.1715%" y="133" width="0.0193%" height="15" fill="rgb(214,25,53)" fg:x="14014" fg:w="6"/><text x="45.4215%" y="143.50"></text></g><g><title>`0x7FF81733B3B4 (21 samples, 0.07%)</title><rect x="45.1908%" y="133" width="0.0677%" height="15" fill="rgb(254,186,54)" fg:x="14020" fg:w="21"/><text x="45.4408%" y="143.50"></text></g><g><title>`0x7FF81733B3B7 (4 samples, 0.01%)</title><rect x="45.2585%" y="133" width="0.0129%" height="15" fill="rgb(208,174,49)" fg:x="14041" fg:w="4"/><text x="45.5085%" y="143.50"></text></g><g><title>`0x7FF81733B650 (10 samples, 0.03%)</title><rect x="45.2811%" y="117" width="0.0322%" height="15" fill="rgb(233,191,51)" fg:x="14048" fg:w="10"/><text x="45.5311%" y="127.50"></text></g><g><title>`0x7FF81733B655 (9 samples, 0.03%)</title><rect x="45.3133%" y="117" width="0.0290%" height="15" fill="rgb(222,134,10)" fg:x="14058" fg:w="9"/><text x="45.5633%" y="127.50"></text></g><g><title>`0x7FF81733B65A (21 samples, 0.07%)</title><rect x="45.3423%" y="117" width="0.0677%" height="15" fill="rgb(230,226,20)" fg:x="14067" fg:w="21"/><text x="45.5923%" y="127.50"></text></g><g><title>`0x7FF81733B660 (13 samples, 0.04%)</title><rect x="45.4100%" y="117" width="0.0419%" height="15" fill="rgb(251,111,25)" fg:x="14088" fg:w="13"/><text x="45.6600%" y="127.50"></text></g><g><title>`0x7FF81733B661 (7 samples, 0.02%)</title><rect x="45.4519%" y="117" width="0.0226%" height="15" fill="rgb(224,40,46)" fg:x="14101" fg:w="7"/><text x="45.7019%" y="127.50"></text></g><g><title>`0x7FF81733B662 (12 samples, 0.04%)</title><rect x="45.4745%" y="117" width="0.0387%" height="15" fill="rgb(236,108,47)" fg:x="14108" fg:w="12"/><text x="45.7245%" y="127.50"></text></g><g><title>`0x7FF81733B665 (23 samples, 0.07%)</title><rect x="45.5164%" y="117" width="0.0741%" height="15" fill="rgb(234,93,0)" fg:x="14121" fg:w="23"/><text x="45.7664%" y="127.50"></text></g><g><title>`0x7FF81733B667 (7 samples, 0.02%)</title><rect x="45.5905%" y="117" width="0.0226%" height="15" fill="rgb(224,213,32)" fg:x="14144" fg:w="7"/><text x="45.8405%" y="127.50"></text></g><g><title>`0x7FF81733B669 (19 samples, 0.06%)</title><rect x="45.6131%" y="117" width="0.0612%" height="15" fill="rgb(251,11,48)" fg:x="14151" fg:w="19"/><text x="45.8631%" y="127.50"></text></g><g><title>`0x7FF81733B66B (10 samples, 0.03%)</title><rect x="45.6743%" y="117" width="0.0322%" height="15" fill="rgb(236,173,5)" fg:x="14170" fg:w="10"/><text x="45.9243%" y="127.50"></text></g><g><title>`0x7FF81733B672 (5 samples, 0.02%)</title><rect x="45.7065%" y="117" width="0.0161%" height="15" fill="rgb(230,95,12)" fg:x="14180" fg:w="5"/><text x="45.9565%" y="127.50"></text></g><g><title>`0x7FF81733B68C (75 samples, 0.24%)</title><rect x="45.7388%" y="117" width="0.2417%" height="15" fill="rgb(232,209,1)" fg:x="14190" fg:w="75"/><text x="45.9888%" y="127.50"></text></g><g><title>`0x7FF81733B69F (21 samples, 0.07%)</title><rect x="45.9805%" y="117" width="0.0677%" height="15" fill="rgb(232,6,1)" fg:x="14265" fg:w="21"/><text x="46.2305%" y="127.50"></text></g><g><title>`0x7FF81733B6ED (19 samples, 0.06%)</title><rect x="46.0482%" y="117" width="0.0612%" height="15" fill="rgb(210,224,50)" fg:x="14286" fg:w="19"/><text x="46.2982%" y="127.50"></text></g><g><title>`0x7FF81733B6FE (18 samples, 0.06%)</title><rect x="46.1095%" y="117" width="0.0580%" height="15" fill="rgb(228,127,35)" fg:x="14305" fg:w="18"/><text x="46.3595%" y="127.50"></text></g><g><title>`0x7FF81733B710 (11 samples, 0.04%)</title><rect x="46.1707%" y="117" width="0.0355%" height="15" fill="rgb(245,102,45)" fg:x="14324" fg:w="11"/><text x="46.4207%" y="127.50"></text></g><g><title>`0x7FF81733B72C (15 samples, 0.05%)</title><rect x="46.2094%" y="117" width="0.0483%" height="15" fill="rgb(214,1,49)" fg:x="14336" fg:w="15"/><text x="46.4594%" y="127.50"></text></g><g><title>`0x7FF81733B745 (16 samples, 0.05%)</title><rect x="46.2577%" y="117" width="0.0516%" height="15" fill="rgb(226,163,40)" fg:x="14351" fg:w="16"/><text x="46.5077%" y="127.50"></text></g><g><title>`0x7FF81733B748 (6 samples, 0.02%)</title><rect x="46.3093%" y="117" width="0.0193%" height="15" fill="rgb(239,212,28)" fg:x="14367" fg:w="6"/><text x="46.5593%" y="127.50"></text></g><g><title>`0x7FF81733B74F (4 samples, 0.01%)</title><rect x="46.3286%" y="117" width="0.0129%" height="15" fill="rgb(220,20,13)" fg:x="14373" fg:w="4"/><text x="46.5786%" y="127.50"></text></g><g><title>`0x7FF81733B757 (10 samples, 0.03%)</title><rect x="46.3415%" y="117" width="0.0322%" height="15" fill="rgb(210,164,35)" fg:x="14377" fg:w="10"/><text x="46.5915%" y="127.50"></text></g><g><title>`0x7FF81733B75B (9 samples, 0.03%)</title><rect x="46.3738%" y="117" width="0.0290%" height="15" fill="rgb(248,109,41)" fg:x="14387" fg:w="9"/><text x="46.6238%" y="127.50"></text></g><g><title>`0x7FF81733B760 (4 samples, 0.01%)</title><rect x="46.4028%" y="117" width="0.0129%" height="15" fill="rgb(238,23,50)" fg:x="14396" fg:w="4"/><text x="46.6528%" y="127.50"></text></g><g><title>`0x7FF81733B76C (9 samples, 0.03%)</title><rect x="46.4157%" y="117" width="0.0290%" height="15" fill="rgb(211,48,49)" fg:x="14400" fg:w="9"/><text x="46.6657%" y="127.50"></text></g><g><title>`0x7FF81733B779 (22 samples, 0.07%)</title><rect x="46.4447%" y="117" width="0.0709%" height="15" fill="rgb(223,36,21)" fg:x="14409" fg:w="22"/><text x="46.6947%" y="127.50"></text></g><g><title>`0x7FF81733B780 (5 samples, 0.02%)</title><rect x="46.5156%" y="117" width="0.0161%" height="15" fill="rgb(207,123,46)" fg:x="14431" fg:w="5"/><text x="46.7656%" y="127.50"></text></g><g><title>`0x7FF81733B785 (6 samples, 0.02%)</title><rect x="46.5317%" y="117" width="0.0193%" height="15" fill="rgb(240,218,32)" fg:x="14436" fg:w="6"/><text x="46.7817%" y="127.50"></text></g><g><title>`0x7FF81733B795 (12 samples, 0.04%)</title><rect x="46.5607%" y="117" width="0.0387%" height="15" fill="rgb(252,5,43)" fg:x="14445" fg:w="12"/><text x="46.8107%" y="127.50"></text></g><g><title>`0x7FF81733B79D (6 samples, 0.02%)</title><rect x="46.5994%" y="117" width="0.0193%" height="15" fill="rgb(252,84,19)" fg:x="14457" fg:w="6"/><text x="46.8494%" y="127.50"></text></g><g><title>`0x7FF81733B7A2 (337 samples, 1.09%)</title><rect x="46.6187%" y="117" width="1.0863%" height="15" fill="rgb(243,152,39)" fg:x="14463" fg:w="337"/><text x="46.8687%" y="127.50"></text></g><g><title>`0x7FF81733B7E3 (12 samples, 0.04%)</title><rect x="47.7082%" y="117" width="0.0387%" height="15" fill="rgb(234,160,15)" fg:x="14801" fg:w="12"/><text x="47.9582%" y="127.50"></text></g><g><title>`0x7FF81733B7FA (11 samples, 0.04%)</title><rect x="47.7469%" y="117" width="0.0355%" height="15" fill="rgb(237,34,20)" fg:x="14813" fg:w="11"/><text x="47.9969%" y="127.50"></text></g><g><title>`0x7FF81733B81B (13 samples, 0.04%)</title><rect x="47.7856%" y="117" width="0.0419%" height="15" fill="rgb(229,97,13)" fg:x="14825" fg:w="13"/><text x="48.0356%" y="127.50"></text></g><g><title>`0x7FF81733B829 (13 samples, 0.04%)</title><rect x="47.8275%" y="117" width="0.0419%" height="15" fill="rgb(234,71,50)" fg:x="14838" fg:w="13"/><text x="48.0775%" y="127.50"></text></g><g><title>`0x7FF81733B83C (19 samples, 0.06%)</title><rect x="47.8694%" y="117" width="0.0612%" height="15" fill="rgb(253,155,4)" fg:x="14851" fg:w="19"/><text x="48.1194%" y="127.50"></text></g><g><title>`0x7FF81733B851 (16 samples, 0.05%)</title><rect x="47.9371%" y="117" width="0.0516%" height="15" fill="rgb(222,185,37)" fg:x="14872" fg:w="16"/><text x="48.1871%" y="127.50"></text></g><g><title>`0x7FF81733B862 (26 samples, 0.08%)</title><rect x="47.9887%" y="117" width="0.0838%" height="15" fill="rgb(251,177,13)" fg:x="14888" fg:w="26"/><text x="48.2387%" y="127.50"></text></g><g><title>`0x7FF8173143D5 (20 samples, 0.06%)</title><rect x="48.0725%" y="101" width="0.0645%" height="15" fill="rgb(250,179,40)" fg:x="14914" fg:w="20"/><text x="48.3225%" y="111.50"></text></g><g><title>`0x7FF8173143E2 (17 samples, 0.05%)</title><rect x="48.1401%" y="101" width="0.0548%" height="15" fill="rgb(242,44,2)" fg:x="14935" fg:w="17"/><text x="48.3901%" y="111.50"></text></g><g><title>`0x7FF8173143F0 (17 samples, 0.05%)</title><rect x="48.1982%" y="101" width="0.0548%" height="15" fill="rgb(216,177,13)" fg:x="14953" fg:w="17"/><text x="48.4482%" y="111.50"></text></g><g><title>`0x7FF817314405 (23 samples, 0.07%)</title><rect x="48.2594%" y="101" width="0.0741%" height="15" fill="rgb(216,106,43)" fg:x="14972" fg:w="23"/><text x="48.5094%" y="111.50"></text></g><g><title>`0x7FF817314413 (16 samples, 0.05%)</title><rect x="48.3335%" y="101" width="0.0516%" height="15" fill="rgb(216,183,2)" fg:x="14995" fg:w="16"/><text x="48.5835%" y="111.50"></text></g><g><title>`0x7FF817314422 (15 samples, 0.05%)</title><rect x="48.3883%" y="101" width="0.0483%" height="15" fill="rgb(249,75,3)" fg:x="15012" fg:w="15"/><text x="48.6383%" y="111.50"></text></g><g><title>`0x7FF81731442F (14 samples, 0.05%)</title><rect x="48.4367%" y="101" width="0.0451%" height="15" fill="rgb(219,67,39)" fg:x="15027" fg:w="14"/><text x="48.6867%" y="111.50"></text></g><g><title>`0x7FF817314437 (15 samples, 0.05%)</title><rect x="48.4818%" y="101" width="0.0483%" height="15" fill="rgb(253,228,2)" fg:x="15041" fg:w="15"/><text x="48.7318%" y="111.50"></text></g><g><title>`0x7FF81731443F (12 samples, 0.04%)</title><rect x="48.5334%" y="101" width="0.0387%" height="15" fill="rgb(235,138,27)" fg:x="15057" fg:w="12"/><text x="48.7834%" y="111.50"></text></g><g><title>`0x7FF81731444B (15 samples, 0.05%)</title><rect x="48.5721%" y="101" width="0.0483%" height="15" fill="rgb(236,97,51)" fg:x="15069" fg:w="15"/><text x="48.8221%" y="111.50"></text></g><g><title>`0x7FF817314452 (23 samples, 0.07%)</title><rect x="48.6204%" y="101" width="0.0741%" height="15" fill="rgb(240,80,30)" fg:x="15084" fg:w="23"/><text x="48.8704%" y="111.50"></text></g><g><title>`0x7FF817314455 (5 samples, 0.02%)</title><rect x="48.6946%" y="101" width="0.0161%" height="15" fill="rgb(230,178,19)" fg:x="15107" fg:w="5"/><text x="48.9446%" y="111.50"></text></g><g><title>`0x7FF817314458 (10 samples, 0.03%)</title><rect x="48.7107%" y="101" width="0.0322%" height="15" fill="rgb(210,190,27)" fg:x="15112" fg:w="10"/><text x="48.9607%" y="111.50"></text></g><g><title>`0x7FF81731445C (13 samples, 0.04%)</title><rect x="48.7429%" y="101" width="0.0419%" height="15" fill="rgb(222,107,31)" fg:x="15122" fg:w="13"/><text x="48.9929%" y="111.50"></text></g><g><title>`0x7FF81731445F (18 samples, 0.06%)</title><rect x="48.7848%" y="101" width="0.0580%" height="15" fill="rgb(216,127,34)" fg:x="15135" fg:w="18"/><text x="49.0348%" y="111.50"></text></g><g><title>`0x7FF817314471 (16 samples, 0.05%)</title><rect x="48.8428%" y="101" width="0.0516%" height="15" fill="rgb(234,116,52)" fg:x="15153" fg:w="16"/><text x="49.0928%" y="111.50"></text></g><g><title>`0x7FF81733B86B (257 samples, 0.83%)</title><rect x="48.0725%" y="117" width="0.8284%" height="15" fill="rgb(222,124,15)" fg:x="14914" fg:w="257"/><text x="48.3225%" y="127.50"></text></g><g><title>`0x7FF81733B86D (22 samples, 0.07%)</title><rect x="48.9009%" y="117" width="0.0709%" height="15" fill="rgb(231,179,28)" fg:x="15171" fg:w="22"/><text x="49.1509%" y="127.50"></text></g><g><title>`0x7FF81733B878 (18 samples, 0.06%)</title><rect x="48.9718%" y="117" width="0.0580%" height="15" fill="rgb(226,93,45)" fg:x="15193" fg:w="18"/><text x="49.2218%" y="127.50"></text></g><g><title>`0x7FF81733B87D (7 samples, 0.02%)</title><rect x="49.0298%" y="117" width="0.0226%" height="15" fill="rgb(215,8,51)" fg:x="15211" fg:w="7"/><text x="49.2798%" y="127.50"></text></g><g><title>`0x7FF81733B885 (11 samples, 0.04%)</title><rect x="49.0523%" y="117" width="0.0355%" height="15" fill="rgb(223,106,5)" fg:x="15218" fg:w="11"/><text x="49.3023%" y="127.50"></text></g><g><title>`0x7FF81733B890 (12 samples, 0.04%)</title><rect x="49.1039%" y="117" width="0.0387%" height="15" fill="rgb(250,191,5)" fg:x="15234" fg:w="12"/><text x="49.3539%" y="127.50"></text></g><g><title>`0x7FF81733B896 (6 samples, 0.02%)</title><rect x="49.1426%" y="117" width="0.0193%" height="15" fill="rgb(242,132,44)" fg:x="15246" fg:w="6"/><text x="49.3926%" y="127.50"></text></g><g><title>`0x7FF81733B89A (15 samples, 0.05%)</title><rect x="49.1619%" y="117" width="0.0483%" height="15" fill="rgb(251,152,29)" fg:x="15252" fg:w="15"/><text x="49.4119%" y="127.50"></text></g><g><title>`0x7FF81733B89D (17 samples, 0.05%)</title><rect x="49.2103%" y="117" width="0.0548%" height="15" fill="rgb(218,179,5)" fg:x="15267" fg:w="17"/><text x="49.4603%" y="127.50"></text></g><g><title>`0x7FF81733B8A0 (13 samples, 0.04%)</title><rect x="49.2651%" y="117" width="0.0419%" height="15" fill="rgb(227,67,19)" fg:x="15284" fg:w="13"/><text x="49.5151%" y="127.50"></text></g><g><title>`0x7FF81733B8A4 (105 samples, 0.34%)</title><rect x="49.3070%" y="117" width="0.3384%" height="15" fill="rgb(233,119,31)" fg:x="15297" fg:w="105"/><text x="49.5570%" y="127.50"></text></g><g><title>`0x7FF81733B8AA (15 samples, 0.05%)</title><rect x="49.6454%" y="117" width="0.0483%" height="15" fill="rgb(241,120,22)" fg:x="15402" fg:w="15"/><text x="49.8954%" y="127.50"></text></g><g><title>`0x7FF81733B8C2 (14 samples, 0.05%)</title><rect x="49.7002%" y="117" width="0.0451%" height="15" fill="rgb(224,102,30)" fg:x="15419" fg:w="14"/><text x="49.9502%" y="127.50"></text></g><g><title>`0x7FF81733B8D4 (14 samples, 0.05%)</title><rect x="49.7454%" y="117" width="0.0451%" height="15" fill="rgb(210,164,37)" fg:x="15433" fg:w="14"/><text x="49.9954%" y="127.50"></text></g><g><title>`0x7FF81733B8E6 (4 samples, 0.01%)</title><rect x="49.7905%" y="117" width="0.0129%" height="15" fill="rgb(226,191,16)" fg:x="15447" fg:w="4"/><text x="50.0405%" y="127.50"></text></g><g><title>`0x7FF81733B8EA (9 samples, 0.03%)</title><rect x="49.8034%" y="117" width="0.0290%" height="15" fill="rgb(214,40,45)" fg:x="15451" fg:w="9"/><text x="50.0534%" y="127.50"></text></g><g><title>`0x7FF81733B8F4 (19 samples, 0.06%)</title><rect x="49.8324%" y="117" width="0.0612%" height="15" fill="rgb(244,29,26)" fg:x="15460" fg:w="19"/><text x="50.0824%" y="127.50"></text></g><g><title>`0x7FF81733B8F9 (18 samples, 0.06%)</title><rect x="49.8969%" y="117" width="0.0580%" height="15" fill="rgb(216,16,5)" fg:x="15480" fg:w="18"/><text x="50.1469%" y="127.50"></text></g><g><title>`0x7FF81731A46C (5 samples, 0.02%)</title><rect x="49.9645%" y="101" width="0.0161%" height="15" fill="rgb(249,76,35)" fg:x="15501" fg:w="5"/><text x="50.2145%" y="111.50"></text></g><g><title>`0x7FF81733B3C7 (1,463 samples, 4.72%)</title><rect x="45.2811%" y="133" width="4.7157%" height="15" fill="rgb(207,11,44)" fg:x="14048" fg:w="1463"/><text x="45.5311%" y="143.50">`0x7F..</text></g><g><title>`0x7FF81733BA28 (11 samples, 0.04%)</title><rect x="49.9613%" y="117" width="0.0355%" height="15" fill="rgb(228,190,49)" fg:x="15500" fg:w="11"/><text x="50.2113%" y="127.50"></text></g><g><title>`0x7FF81733B455 (8 samples, 0.03%)</title><rect x="50.0064%" y="133" width="0.0258%" height="15" fill="rgb(214,173,12)" fg:x="15514" fg:w="8"/><text x="50.2564%" y="143.50"></text></g><g><title>`0x7FF81733B4EF (25 samples, 0.08%)</title><rect x="50.0322%" y="133" width="0.0806%" height="15" fill="rgb(218,26,35)" fg:x="15522" fg:w="25"/><text x="50.2822%" y="143.50"></text></g><g><title>`0x7FF81733B522 (18 samples, 0.06%)</title><rect x="50.1128%" y="133" width="0.0580%" height="15" fill="rgb(220,200,19)" fg:x="15547" fg:w="18"/><text x="50.3628%" y="143.50"></text></g><g><title>`0x7FF81733B5D4 (21 samples, 0.07%)</title><rect x="50.1708%" y="133" width="0.0677%" height="15" fill="rgb(239,95,49)" fg:x="15565" fg:w="21"/><text x="50.4208%" y="143.50"></text></g><g><title>`0x7FF81733B621 (18 samples, 0.06%)</title><rect x="50.2385%" y="133" width="0.0580%" height="15" fill="rgb(235,85,53)" fg:x="15586" fg:w="18"/><text x="50.4885%" y="143.50"></text></g><g><title>`0x7FF81733B633 (15 samples, 0.05%)</title><rect x="50.2965%" y="133" width="0.0483%" height="15" fill="rgb(233,133,31)" fg:x="15604" fg:w="15"/><text x="50.5465%" y="143.50"></text></g><g><title>`0x7FF81733B63B (21 samples, 0.07%)</title><rect x="50.3449%" y="133" width="0.0677%" height="15" fill="rgb(218,25,20)" fg:x="15619" fg:w="21"/><text x="50.5949%" y="143.50"></text></g><g><title>test.exe`alloc::alloc::impl$1::allocate (16 samples, 0.05%)</title><rect x="50.4126%" y="133" width="0.0516%" height="15" fill="rgb(252,210,38)" fg:x="15640" fg:w="16"/><text x="50.6626%" y="143.50"></text></g><g><title>test.exe`alloc::alloc::Global::alloc_impl (16 samples, 0.05%)</title><rect x="50.4126%" y="117" width="0.0516%" height="15" fill="rgb(242,134,21)" fg:x="15640" fg:w="16"/><text x="50.6626%" y="127.50"></text></g><g><title>test.exe`alloc::alloc::alloc (16 samples, 0.05%)</title><rect x="50.4126%" y="101" width="0.0516%" height="15" fill="rgb(213,28,48)" fg:x="15640" fg:w="16"/><text x="50.6626%" y="111.50"></text></g><g><title>test.exe`std::alloc::__default_lib_allocator::__rdl_alloc (59 samples, 0.19%)</title><rect x="50.4642%" y="133" width="0.1902%" height="15" fill="rgb(250,196,2)" fg:x="15656" fg:w="59"/><text x="50.7142%" y="143.50"></text></g><g><title>test.exe`std::sys::alloc::windows::impl$0::alloc (26 samples, 0.08%)</title><rect x="50.5705%" y="117" width="0.0838%" height="15" fill="rgb(227,5,17)" fg:x="15689" fg:w="26"/><text x="50.8205%" y="127.50"></text></g><g><title>test.exe`std::sys::alloc::windows::allocate (26 samples, 0.08%)</title><rect x="50.5705%" y="101" width="0.0838%" height="15" fill="rgb(221,226,24)" fg:x="15689" fg:w="26"/><text x="50.8205%" y="111.50"></text></g><g><title>`0x7FF814AFCDE0 (243 samples, 0.78%)</title><rect x="50.9992%" y="101" width="0.7833%" height="15" fill="rgb(211,5,48)" fg:x="15822" fg:w="243"/><text x="51.2492%" y="111.50"></text></g><g><title>test.exe`core::intrinsics::unlikely (289 samples, 0.93%)</title><rect x="50.9122%" y="117" width="0.9315%" height="15" fill="rgb(219,150,6)" fg:x="15795" fg:w="289"/><text x="51.1622%" y="127.50"></text></g><g><title>`0x7FF8165B5EC0 (15 samples, 0.05%)</title><rect x="51.7954%" y="101" width="0.0483%" height="15" fill="rgb(251,46,16)" fg:x="16069" fg:w="15"/><text x="52.0454%" y="111.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::with_capacity (2,485 samples, 8.01%)</title><rect x="43.8370%" y="213" width="8.0099%" height="15" fill="rgb(220,204,40)" fg:x="13600" fg:w="2485"/><text x="44.0870%" y="223.50">test.exe`al..</text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::with_capacity_in (2,485 samples, 8.01%)</title><rect x="43.8370%" y="197" width="8.0099%" height="15" fill="rgb(211,85,2)" fg:x="13600" fg:w="2485"/><text x="44.0870%" y="207.50">test.exe`al..</text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u32,alloc::alloc::Global&gt;::with_capacity_in (2,474 samples, 7.97%)</title><rect x="43.8725%" y="181" width="7.9745%" height="15" fill="rgb(229,17,7)" fg:x="13611" fg:w="2474"/><text x="44.1225%" y="191.50">test.exe`al..</text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (2,474 samples, 7.97%)</title><rect x="43.8725%" y="165" width="7.9745%" height="15" fill="rgb(239,72,28)" fg:x="13611" fg:w="2474"/><text x="44.1225%" y="175.50">test.exe`al..</text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (2,474 samples, 7.97%)</title><rect x="43.8725%" y="149" width="7.9745%" height="15" fill="rgb(230,47,54)" fg:x="13611" fg:w="2474"/><text x="44.1225%" y="159.50">test.exe`al..</text></g><g><title>test.exe`std::sys::alloc::windows::process_heap_alloc (370 samples, 1.19%)</title><rect x="50.6543%" y="133" width="1.1926%" height="15" fill="rgb(214,50,8)" fg:x="15715" fg:w="370"/><text x="50.9043%" y="143.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (2,226 samples, 7.18%)</title><rect x="51.8470%" y="213" width="7.1751%" height="15" fill="rgb(216,198,43)" fg:x="16085" fg:w="2226"/><text x="52.0970%" y="223.50">test.exe`m..</text></g><g><title>test.exe`core::num::impl$9::trailing_zeros (38 samples, 0.12%)</title><rect x="59.1542%" y="197" width="0.1225%" height="15" fill="rgb(234,20,35)" fg:x="18352" fg:w="38"/><text x="59.4042%" y="207.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::as_mut_ptr (371 samples, 1.20%)</title><rect x="60.4983%" y="149" width="1.1958%" height="15" fill="rgb(254,45,19)" fg:x="18769" fg:w="371"/><text x="60.7483%" y="159.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u32,alloc::alloc::Global&gt;::ptr (371 samples, 1.20%)</title><rect x="60.4983%" y="133" width="1.1958%" height="15" fill="rgb(219,14,44)" fg:x="18769" fg:w="371"/><text x="60.7483%" y="143.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (371 samples, 1.20%)</title><rect x="60.4983%" y="117" width="1.1958%" height="15" fill="rgb(217,220,26)" fg:x="18769" fg:w="371"/><text x="60.7483%" y="127.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (371 samples, 1.20%)</title><rect x="60.4983%" y="101" width="1.1958%" height="15" fill="rgb(213,158,28)" fg:x="18769" fg:w="371"/><text x="60.7483%" y="111.50"></text></g><g><title>test.exe`mchess::board::Board::add_sliding_moves(mchess::piece::Piece, unsigned long long, unsigned long long, alloc::vec::Vec (778 samples, 2.51%)</title><rect x="59.2767%" y="197" width="2.5077%" height="15" fill="rgb(252,51,52)" fg:x="18390" fg:w="778"/><text x="59.5267%" y="207.50">te..</text></g><g><title>test.exe`mchess::board::Board::add_bitboard_moves(unsigned long long, unsigned long long, unsigned long long, alloc::vec::Vec (778 samples, 2.51%)</title><rect x="59.2767%" y="181" width="2.5077%" height="15" fill="rgb(246,89,16)" fg:x="18390" fg:w="778"/><text x="59.5267%" y="191.50">te..</text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::push (541 samples, 1.74%)</title><rect x="60.0406%" y="165" width="1.7438%" height="15" fill="rgb(216,158,49)" fg:x="18627" fg:w="541"/><text x="60.2906%" y="175.50"></text></g><g><title>test.exe`core::ptr::write (28 samples, 0.09%)</title><rect x="61.6942%" y="149" width="0.0903%" height="15" fill="rgb(236,107,19)" fg:x="19140" fg:w="28"/><text x="61.9442%" y="159.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::as_slice (6 samples, 0.02%)</title><rect x="62.6515%" y="149" width="0.0193%" height="15" fill="rgb(228,185,30)" fg:x="19437" fg:w="6"/><text x="62.9015%" y="159.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::as_ptr (6 samples, 0.02%)</title><rect x="62.6515%" y="133" width="0.0193%" height="15" fill="rgb(246,134,8)" fg:x="19437" fg:w="6"/><text x="62.9015%" y="143.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u64,alloc::alloc::Global&gt;::ptr (6 samples, 0.02%)</title><rect x="62.6515%" y="117" width="0.0193%" height="15" fill="rgb(214,143,50)" fg:x="19437" fg:w="6"/><text x="62.9015%" y="127.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (6 samples, 0.02%)</title><rect x="62.6515%" y="101" width="0.0193%" height="15" fill="rgb(228,75,8)" fg:x="19437" fg:w="6"/><text x="62.9015%" y="111.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (6 samples, 0.02%)</title><rect x="62.6515%" y="85" width="0.0193%" height="15" fill="rgb(207,175,4)" fg:x="19437" fg:w="6"/><text x="62.9015%" y="95.50"></text></g><g><title>test.exe`alloc::vec::impl$13::index(alloc::vec::Vec (45 samples, 0.15%)</title><rect x="62.6515%" y="181" width="0.1450%" height="15" fill="rgb(205,108,24)" fg:x="19437" fg:w="45"/><text x="62.9015%" y="191.50"></text></g><g><title>test.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (45 samples, 0.15%)</title><rect x="62.6515%" y="165" width="0.1450%" height="15" fill="rgb(244,120,49)" fg:x="19437" fg:w="45"/><text x="62.9015%" y="175.50"></text></g><g><title>test.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (39 samples, 0.13%)</title><rect x="62.6708%" y="149" width="0.1257%" height="15" fill="rgb(223,47,38)" fg:x="19443" fg:w="39"/><text x="62.9208%" y="159.50"></text></g><g><title>test.exe`mchess::board::Board::add_bishop_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (1,214 samples, 3.91%)</title><rect x="59.0220%" y="213" width="3.9131%" height="15" fill="rgb(229,179,11)" fg:x="18311" fg:w="1214"/><text x="59.2720%" y="223.50">test..</text></g><g><title>test.exe`mchess::moves::magic::Magic::get_bishop_moves (357 samples, 1.15%)</title><rect x="61.7844%" y="197" width="1.1507%" height="15" fill="rgb(231,122,1)" fg:x="19168" fg:w="357"/><text x="62.0344%" y="207.50"></text></g><g><title>test.exe`core::num::impl$9::wrapping_mul (43 samples, 0.14%)</title><rect x="62.7965%" y="181" width="0.1386%" height="15" fill="rgb(245,119,9)" fg:x="19482" fg:w="43"/><text x="63.0465%" y="191.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::as_mut_ptr (27 samples, 0.09%)</title><rect x="67.1158%" y="165" width="0.0870%" height="15" fill="rgb(241,163,25)" fg:x="20822" fg:w="27"/><text x="67.3658%" y="175.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u32,alloc::alloc::Global&gt;::ptr (27 samples, 0.09%)</title><rect x="67.1158%" y="149" width="0.0870%" height="15" fill="rgb(217,214,3)" fg:x="20822" fg:w="27"/><text x="67.3658%" y="159.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (27 samples, 0.09%)</title><rect x="67.1158%" y="133" width="0.0870%" height="15" fill="rgb(240,86,28)" fg:x="20822" fg:w="27"/><text x="67.3658%" y="143.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (27 samples, 0.09%)</title><rect x="67.1158%" y="117" width="0.0870%" height="15" fill="rgb(215,47,9)" fg:x="20822" fg:w="27"/><text x="67.3658%" y="127.50"></text></g><g><title>test.exe`mchess::board::Board::add_bitboard_moves(unsigned long long, unsigned long long, unsigned long long, alloc::vec::Vec (300 samples, 0.97%)</title><rect x="66.2455%" y="197" width="0.9670%" height="15" fill="rgb(252,25,45)" fg:x="20552" fg:w="300"/><text x="66.4955%" y="207.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::push (127 samples, 0.41%)</title><rect x="66.8031%" y="181" width="0.4094%" height="15" fill="rgb(251,164,9)" fg:x="20725" fg:w="127"/><text x="67.0531%" y="191.50"></text></g><g><title>test.exe`alloc::sync::impl$30::deref(alloc::sync::Arc (12 samples, 0.04%)</title><rect x="67.6283%" y="165" width="0.0387%" height="15" fill="rgb(233,194,0)" fg:x="20981" fg:w="12"/><text x="67.8783%" y="175.50"></text></g><g><title>test.exe`alloc::sync::Arc&lt;mchess::moves::magic::Magic,alloc::alloc::Global&gt;::inner (12 samples, 0.04%)</title><rect x="67.6283%" y="149" width="0.0387%" height="15" fill="rgb(249,111,24)" fg:x="20981" fg:w="12"/><text x="67.8783%" y="159.50"></text></g><g><title>test.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;mchess::moves::magic::Magic&gt; &gt;::as_ref (12 samples, 0.04%)</title><rect x="67.6283%" y="133" width="0.0387%" height="15" fill="rgb(250,223,3)" fg:x="20981" fg:w="12"/><text x="67.8783%" y="143.50"></text></g><g><title>test.exe`core::num::impl$9::trailing_zeros (31 samples, 0.10%)</title><rect x="67.6670%" y="165" width="0.0999%" height="15" fill="rgb(236,178,37)" fg:x="20993" fg:w="31"/><text x="67.9170%" y="175.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::as_slice (8 samples, 0.03%)</title><rect x="68.9337%" y="117" width="0.0258%" height="15" fill="rgb(241,158,50)" fg:x="21386" fg:w="8"/><text x="69.1837%" y="127.50"></text></g><g><title>test.exe`alloc::vec::impl$13::index(alloc::vec::Vec (23 samples, 0.07%)</title><rect x="68.9337%" y="149" width="0.0741%" height="15" fill="rgb(213,121,41)" fg:x="21386" fg:w="23"/><text x="69.1837%" y="159.50"></text></g><g><title>test.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (23 samples, 0.07%)</title><rect x="68.9337%" y="133" width="0.0741%" height="15" fill="rgb(240,92,3)" fg:x="21386" fg:w="23"/><text x="69.1837%" y="143.50"></text></g><g><title>test.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (15 samples, 0.05%)</title><rect x="68.9595%" y="117" width="0.0483%" height="15" fill="rgb(205,123,3)" fg:x="21394" fg:w="15"/><text x="69.2095%" y="127.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_bishop_moves (429 samples, 1.38%)</title><rect x="67.7669%" y="165" width="1.3828%" height="15" fill="rgb(205,97,47)" fg:x="21024" fg:w="429"/><text x="68.0169%" y="175.50"></text></g><g><title>test.exe`core::num::impl$9::wrapping_mul (44 samples, 0.14%)</title><rect x="69.0079%" y="149" width="0.1418%" height="15" fill="rgb(247,152,14)" fg:x="21409" fg:w="44"/><text x="69.2579%" y="159.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::as_slice (28 samples, 0.09%)</title><rect x="69.7009%" y="117" width="0.0903%" height="15" fill="rgb(248,195,53)" fg:x="21624" fg:w="28"/><text x="69.9509%" y="127.50"></text></g><g><title>test.exe`alloc::vec::impl$13::index(alloc::vec::Vec (54 samples, 0.17%)</title><rect x="69.7009%" y="149" width="0.1741%" height="15" fill="rgb(226,201,16)" fg:x="21624" fg:w="54"/><text x="69.9509%" y="159.50"></text></g><g><title>test.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (54 samples, 0.17%)</title><rect x="69.7009%" y="133" width="0.1741%" height="15" fill="rgb(205,98,0)" fg:x="21624" fg:w="54"/><text x="69.9509%" y="143.50"></text></g><g><title>test.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (26 samples, 0.08%)</title><rect x="69.7911%" y="117" width="0.0838%" height="15" fill="rgb(214,191,48)" fg:x="21652" fg:w="26"/><text x="70.0411%" y="127.50"></text></g><g><title>test.exe`mchess::board::Board::is_attacked (888 samples, 2.86%)</title><rect x="67.2125%" y="197" width="2.8623%" height="15" fill="rgb(237,112,39)" fg:x="20852" fg:w="888"/><text x="67.4625%" y="207.50">te..</text></g><g><title>test.exe`mchess::board::Board::get_attackers (888 samples, 2.86%)</title><rect x="67.2125%" y="181" width="2.8623%" height="15" fill="rgb(247,203,27)" fg:x="20852" fg:w="888"/><text x="67.4625%" y="191.50">te..</text></g><g><title>test.exe`mchess::moves::magic::Magic::get_rook_moves (287 samples, 0.93%)</title><rect x="69.1497%" y="165" width="0.9251%" height="15" fill="rgb(235,124,28)" fg:x="21453" fg:w="287"/><text x="69.3997%" y="175.50"></text></g><g><title>test.exe`core::num::impl$9::wrapping_mul (62 samples, 0.20%)</title><rect x="69.8749%" y="149" width="0.1998%" height="15" fill="rgb(208,207,46)" fg:x="21678" fg:w="62"/><text x="70.1249%" y="159.50"></text></g><g><title>test.exe`mchess::board::Castling::can_castle_qs (23 samples, 0.07%)</title><rect x="70.0748%" y="197" width="0.0741%" height="15" fill="rgb(234,176,4)" fg:x="21740" fg:w="23"/><text x="70.3248%" y="207.50"></text></g><g><title>test.exe`mchess::board::Board::add_king_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (2,251 samples, 7.26%)</title><rect x="62.9351%" y="213" width="7.2557%" height="15" fill="rgb(230,133,28)" fg:x="19525" fg:w="2251"/><text x="63.1851%" y="223.50">test.exe`m..</text></g><g><title>test.exe`mchess::piece::PieceColor::opposite (12 samples, 0.04%)</title><rect x="70.1521%" y="197" width="0.0387%" height="15" fill="rgb(211,137,40)" fg:x="21764" fg:w="12"/><text x="70.4021%" y="207.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::as_mut_ptr (71 samples, 0.23%)</title><rect x="75.0064%" y="165" width="0.2289%" height="15" fill="rgb(254,35,13)" fg:x="23270" fg:w="71"/><text x="75.2564%" y="175.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u32,alloc::alloc::Global&gt;::ptr (71 samples, 0.23%)</title><rect x="75.0064%" y="149" width="0.2289%" height="15" fill="rgb(225,49,51)" fg:x="23270" fg:w="71"/><text x="75.2564%" y="159.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (71 samples, 0.23%)</title><rect x="75.0064%" y="133" width="0.2289%" height="15" fill="rgb(251,10,15)" fg:x="23270" fg:w="71"/><text x="75.2564%" y="143.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (71 samples, 0.23%)</title><rect x="75.0064%" y="117" width="0.2289%" height="15" fill="rgb(228,207,15)" fg:x="23270" fg:w="71"/><text x="75.2564%" y="127.50"></text></g><g><title>test.exe`mchess::board::Board::add_knight_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (1,583 samples, 5.10%)</title><rect x="70.1908%" y="213" width="5.1025%" height="15" fill="rgb(241,99,19)" fg:x="21776" fg:w="1583"/><text x="70.4408%" y="223.50">test.e..</text></g><g><title>test.exe`mchess::board::Board::add_bitboard_moves(unsigned long long, unsigned long long, unsigned long long, alloc::vec::Vec (928 samples, 2.99%)</title><rect x="72.3021%" y="197" width="2.9912%" height="15" fill="rgb(207,104,49)" fg:x="22431" fg:w="928"/><text x="72.5521%" y="207.50">tes..</text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::push (368 samples, 1.19%)</title><rect x="74.1071%" y="181" width="1.1862%" height="15" fill="rgb(234,99,18)" fg:x="22991" fg:w="368"/><text x="74.3571%" y="191.50"></text></g><g><title>test.exe`core::ptr::write (18 samples, 0.06%)</title><rect x="75.2353%" y="165" width="0.0580%" height="15" fill="rgb(213,191,49)" fg:x="23341" fg:w="18"/><text x="75.4853%" y="175.50"></text></g><g><title>test.exe`mchess::board::Board::add_pawn_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (5,680 samples, 18.31%)</title><rect x="75.2933%" y="213" width="18.3084%" height="15" fill="rgb(210,226,19)" fg:x="23359" fg:w="5680"/><text x="75.5433%" y="223.50">test.exe`mchess::board::Board..</text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::push (657 samples, 2.12%)</title><rect x="91.4840%" y="197" width="2.1177%" height="15" fill="rgb(229,97,18)" fg:x="28382" fg:w="657"/><text x="91.7340%" y="207.50">t..</text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::as_mut_ptr (74 samples, 0.24%)</title><rect x="93.3632%" y="181" width="0.2385%" height="15" fill="rgb(211,167,15)" fg:x="28965" fg:w="74"/><text x="93.6132%" y="191.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u32,alloc::alloc::Global&gt;::ptr (74 samples, 0.24%)</title><rect x="93.3632%" y="165" width="0.2385%" height="15" fill="rgb(210,169,34)" fg:x="28965" fg:w="74"/><text x="93.6132%" y="175.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (74 samples, 0.24%)</title><rect x="93.3632%" y="149" width="0.2385%" height="15" fill="rgb(241,121,31)" fg:x="28965" fg:w="74"/><text x="93.6132%" y="159.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (74 samples, 0.24%)</title><rect x="93.3632%" y="133" width="0.2385%" height="15" fill="rgb(232,40,11)" fg:x="28965" fg:w="74"/><text x="93.6132%" y="143.50"></text></g><g><title>test.exe`core::num::impl$9::trailing_zeros (17 samples, 0.05%)</title><rect x="93.6146%" y="197" width="0.0548%" height="15" fill="rgb(205,86,26)" fg:x="29043" fg:w="17"/><text x="93.8646%" y="207.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::as_mut_ptr (252 samples, 0.81%)</title><rect x="94.5236%" y="149" width="0.8123%" height="15" fill="rgb(231,126,28)" fg:x="29325" fg:w="252"/><text x="94.7736%" y="159.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u32,alloc::alloc::Global&gt;::ptr (252 samples, 0.81%)</title><rect x="94.5236%" y="133" width="0.8123%" height="15" fill="rgb(219,221,18)" fg:x="29325" fg:w="252"/><text x="94.7736%" y="143.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (252 samples, 0.81%)</title><rect x="94.5236%" y="117" width="0.8123%" height="15" fill="rgb(211,40,0)" fg:x="29325" fg:w="252"/><text x="94.7736%" y="127.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (252 samples, 0.81%)</title><rect x="94.5236%" y="101" width="0.8123%" height="15" fill="rgb(239,85,43)" fg:x="29325" fg:w="252"/><text x="94.7736%" y="111.50"></text></g><g><title>test.exe`mchess::board::Board::add_sliding_moves(mchess::piece::Piece, unsigned long long, unsigned long long, alloc::vec::Vec (545 samples, 1.76%)</title><rect x="93.6694%" y="197" width="1.7567%" height="15" fill="rgb(231,55,21)" fg:x="29060" fg:w="545"/><text x="93.9194%" y="207.50"></text></g><g><title>test.exe`mchess::board::Board::add_bitboard_moves(unsigned long long, unsigned long long, unsigned long long, alloc::vec::Vec (545 samples, 1.76%)</title><rect x="93.6694%" y="181" width="1.7567%" height="15" fill="rgb(225,184,43)" fg:x="29060" fg:w="545"/><text x="93.9194%" y="191.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::push (364 samples, 1.17%)</title><rect x="94.2528%" y="165" width="1.1733%" height="15" fill="rgb(251,158,41)" fg:x="29241" fg:w="364"/><text x="94.5028%" y="175.50"></text></g><g><title>test.exe`core::ptr::write (28 samples, 0.09%)</title><rect x="95.3359%" y="149" width="0.0903%" height="15" fill="rgb(234,159,37)" fg:x="29577" fg:w="28"/><text x="95.5859%" y="159.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::as_slice (30 samples, 0.10%)</title><rect x="95.7065%" y="133" width="0.0967%" height="15" fill="rgb(216,204,22)" fg:x="29692" fg:w="30"/><text x="95.9565%" y="143.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::as_ptr (11 samples, 0.04%)</title><rect x="95.7678%" y="117" width="0.0355%" height="15" fill="rgb(214,17,3)" fg:x="29711" fg:w="11"/><text x="96.0178%" y="127.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u64,alloc::alloc::Global&gt;::ptr (11 samples, 0.04%)</title><rect x="95.7678%" y="101" width="0.0355%" height="15" fill="rgb(212,111,17)" fg:x="29711" fg:w="11"/><text x="96.0178%" y="111.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (11 samples, 0.04%)</title><rect x="95.7678%" y="85" width="0.0355%" height="15" fill="rgb(221,157,24)" fg:x="29711" fg:w="11"/><text x="96.0178%" y="95.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (11 samples, 0.04%)</title><rect x="95.7678%" y="69" width="0.0355%" height="15" fill="rgb(252,16,13)" fg:x="29711" fg:w="11"/><text x="96.0178%" y="79.50"></text></g><g><title>test.exe`alloc::vec::impl$13::index(alloc::vec::Vec (31 samples, 0.10%)</title><rect x="95.7065%" y="165" width="0.0999%" height="15" fill="rgb(221,62,2)" fg:x="29692" fg:w="31"/><text x="95.9565%" y="175.50"></text></g><g><title>test.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (31 samples, 0.10%)</title><rect x="95.7065%" y="149" width="0.0999%" height="15" fill="rgb(247,87,22)" fg:x="29692" fg:w="31"/><text x="95.9565%" y="159.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_bishop_moves (78 samples, 0.25%)</title><rect x="95.6002%" y="181" width="0.2514%" height="15" fill="rgb(215,73,9)" fg:x="29659" fg:w="78"/><text x="95.8502%" y="191.50"></text></g><g><title>test.exe`core::num::impl$9::wrapping_mul (14 samples, 0.05%)</title><rect x="95.8065%" y="165" width="0.0451%" height="15" fill="rgb(207,175,33)" fg:x="29723" fg:w="14"/><text x="96.0565%" y="175.50"></text></g><g><title>test.exe`alloc::vec::impl$13::index(alloc::vec::Vec (6 samples, 0.02%)</title><rect x="96.2642%" y="165" width="0.0193%" height="15" fill="rgb(243,129,54)" fg:x="29865" fg:w="6"/><text x="96.5142%" y="175.50"></text></g><g><title>test.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (6 samples, 0.02%)</title><rect x="96.2642%" y="149" width="0.0193%" height="15" fill="rgb(227,119,45)" fg:x="29865" fg:w="6"/><text x="96.5142%" y="159.50"></text></g><g><title>test.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$ (6 samples, 0.02%)</title><rect x="96.2642%" y="133" width="0.0193%" height="15" fill="rgb(205,109,36)" fg:x="29865" fg:w="6"/><text x="96.5142%" y="143.50"></text></g><g><title>test.exe`mchess::board::Board::add_queen_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (862 samples, 2.78%)</title><rect x="93.6017%" y="213" width="2.7785%" height="15" fill="rgb(205,6,39)" fg:x="29039" fg:w="862"/><text x="93.8517%" y="223.50">te..</text></g><g><title>test.exe`mchess::moves::magic::Magic::get_queen_moves (296 samples, 0.95%)</title><rect x="95.4261%" y="197" width="0.9541%" height="15" fill="rgb(221,32,16)" fg:x="29605" fg:w="296"/><text x="95.6761%" y="207.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_rook_moves (164 samples, 0.53%)</title><rect x="95.8516%" y="181" width="0.5286%" height="15" fill="rgb(228,144,50)" fg:x="29737" fg:w="164"/><text x="96.1016%" y="191.50"></text></g><g><title>test.exe`core::num::impl$9::wrapping_mul (30 samples, 0.10%)</title><rect x="96.2835%" y="165" width="0.0967%" height="15" fill="rgb(229,201,53)" fg:x="29871" fg:w="30"/><text x="96.5335%" y="175.50"></text></g><g><title>test.exe`core::num::impl$9::trailing_zeros (4 samples, 0.01%)</title><rect x="96.5092%" y="197" width="0.0129%" height="15" fill="rgb(249,153,27)" fg:x="29941" fg:w="4"/><text x="96.7592%" y="207.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::as_mut_ptr (58 samples, 0.19%)</title><rect x="96.7251%" y="149" width="0.1870%" height="15" fill="rgb(227,106,25)" fg:x="30008" fg:w="58"/><text x="96.9751%" y="159.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u32,alloc::alloc::Global&gt;::ptr (58 samples, 0.19%)</title><rect x="96.7251%" y="133" width="0.1870%" height="15" fill="rgb(230,65,29)" fg:x="30008" fg:w="58"/><text x="96.9751%" y="143.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (58 samples, 0.19%)</title><rect x="96.7251%" y="117" width="0.1870%" height="15" fill="rgb(221,57,46)" fg:x="30008" fg:w="58"/><text x="96.9751%" y="127.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (58 samples, 0.19%)</title><rect x="96.7251%" y="101" width="0.1870%" height="15" fill="rgb(229,161,17)" fg:x="30008" fg:w="58"/><text x="96.9751%" y="111.50"></text></g><g><title>test.exe`mchess::board::Board::add_sliding_moves(mchess::piece::Piece, unsigned long long, unsigned long long, alloc::vec::Vec (124 samples, 0.40%)</title><rect x="96.5220%" y="197" width="0.3997%" height="15" fill="rgb(222,213,11)" fg:x="29945" fg:w="124"/><text x="96.7720%" y="207.50"></text></g><g><title>test.exe`mchess::board::Board::add_bitboard_moves(unsigned long long, unsigned long long, unsigned long long, alloc::vec::Vec (124 samples, 0.40%)</title><rect x="96.5220%" y="181" width="0.3997%" height="15" fill="rgb(235,35,13)" fg:x="29945" fg:w="124"/><text x="96.7720%" y="191.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u32,alloc::alloc::Global&gt;::push (77 samples, 0.25%)</title><rect x="96.6735%" y="165" width="0.2482%" height="15" fill="rgb(233,158,34)" fg:x="29992" fg:w="77"/><text x="96.9235%" y="175.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::as_slice (23 samples, 0.07%)</title><rect x="97.9435%" y="149" width="0.0741%" height="15" fill="rgb(215,151,48)" fg:x="30386" fg:w="23"/><text x="98.1935%" y="159.50"></text></g><g><title>test.exe`alloc::vec::Vec&lt;u64,alloc::alloc::Global&gt;::as_ptr (23 samples, 0.07%)</title><rect x="97.9435%" y="133" width="0.0741%" height="15" fill="rgb(229,84,14)" fg:x="30386" fg:w="23"/><text x="98.1935%" y="143.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVec&lt;u64,alloc::alloc::Global&gt;::ptr (23 samples, 0.07%)</title><rect x="97.9435%" y="117" width="0.0741%" height="15" fill="rgb(229,68,14)" fg:x="30386" fg:w="23"/><text x="98.1935%" y="127.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (23 samples, 0.07%)</title><rect x="97.9435%" y="101" width="0.0741%" height="15" fill="rgb(243,106,26)" fg:x="30386" fg:w="23"/><text x="98.1935%" y="111.50"></text></g><g><title>test.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (23 samples, 0.07%)</title><rect x="97.9435%" y="85" width="0.0741%" height="15" fill="rgb(206,45,38)" fg:x="30386" fg:w="23"/><text x="98.1935%" y="95.50"></text></g><g><title>test.exe`alloc::vec::impl$13::index(alloc::vec::Vec (25 samples, 0.08%)</title><rect x="97.9435%" y="181" width="0.0806%" height="15" fill="rgb(226,6,15)" fg:x="30386" fg:w="25"/><text x="98.1935%" y="191.50"></text></g><g><title>test.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (25 samples, 0.08%)</title><rect x="97.9435%" y="165" width="0.0806%" height="15" fill="rgb(232,22,54)" fg:x="30386" fg:w="25"/><text x="98.1935%" y="175.50"></text></g><g><title>test.exe`core::ptr::drop_in_place(alloc::vec::Vec (18,582 samples, 59.90%)</title><rect x="38.2414%" y="277" width="59.8956%" height="15" fill="rgb(229,222,32)" fg:x="11864" fg:w="18582"/><text x="38.4914%" y="287.50">test.exe`core::ptr::drop_in_place(alloc::vec::Vec</text></g><g><title>test.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (18,582 samples, 59.90%)</title><rect x="38.2414%" y="261" width="59.8956%" height="15" fill="rgb(228,62,29)" fg:x="11864" fg:w="18582"/><text x="38.4914%" y="271.50">test.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec</text></g><g><title>test.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (18,582 samples, 59.90%)</title><rect x="38.2414%" y="245" width="59.8956%" height="15" fill="rgb(251,103,34)" fg:x="11864" fg:w="18582"/><text x="38.4914%" y="255.50">test.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec</text></g><g><title>test.exe`mchess::board::Board::get_pseudo_legal_moves (18,555 samples, 59.81%)</title><rect x="38.3284%" y="229" width="59.8085%" height="15" fill="rgb(233,12,30)" fg:x="11891" fg:w="18555"/><text x="38.5784%" y="239.50">test.exe`mchess::board::Board::get_pseudo_legal_moves</text></g><g><title>test.exe`mchess::board::Board::add_rook_moves(mchess::piece::Piece, unsigned long long, alloc::vec::Vec (545 samples, 1.76%)</title><rect x="96.3802%" y="213" width="1.7567%" height="15" fill="rgb(238,52,0)" fg:x="29901" fg:w="545"/><text x="96.6302%" y="223.50"></text></g><g><title>test.exe`mchess::moves::magic::Magic::get_rook_moves (377 samples, 1.22%)</title><rect x="96.9217%" y="197" width="1.2152%" height="15" fill="rgb(223,98,5)" fg:x="30069" fg:w="377"/><text x="97.1717%" y="207.50"></text></g><g><title>test.exe`core::num::impl$9::wrapping_mul (35 samples, 0.11%)</title><rect x="98.0241%" y="181" width="0.1128%" height="15" fill="rgb(228,75,37)" fg:x="30411" fg:w="35"/><text x="98.2741%" y="191.50"></text></g><g><title>`0x7FF814AFCDE0 (21 samples, 0.07%)</title><rect x="98.3916%" y="245" width="0.0677%" height="15" fill="rgb(205,115,49)" fg:x="30525" fg:w="21"/><text x="98.6416%" y="255.50"></text></g><g><title>`0x7FF814AFCDE9 (4 samples, 0.01%)</title><rect x="98.4593%" y="245" width="0.0129%" height="15" fill="rgb(250,154,43)" fg:x="30546" fg:w="4"/><text x="98.7093%" y="255.50"></text></g><g><title>`0x7FF814AFCDED (11 samples, 0.04%)</title><rect x="98.4722%" y="245" width="0.0355%" height="15" fill="rgb(226,43,29)" fg:x="30550" fg:w="11"/><text x="98.7222%" y="255.50"></text></g><g><title>test.exe`mchess::board::Board::unmake_move(tuple$ (23,800 samples, 76.71%)</title><rect x="21.8637%" y="357" width="76.7148%" height="15" fill="rgb(249,228,39)" fg:x="6783" fg:w="23800"/><text x="22.1137%" y="367.50">test.exe`mchess::board::Board::unmake_move(tuple$</text></g><g><title>test.exe`mchess::search::Search::alphabeta (23,733 samples, 76.50%)</title><rect x="22.0797%" y="341" width="76.4988%" height="15" fill="rgb(216,79,43)" fg:x="6850" fg:w="23733"/><text x="22.3297%" y="351.50">test.exe`mchess::search::Search::alphabeta</text></g><g><title>test.exe`mchess::evaluation::EvaluationResult::to_value (22,271 samples, 71.79%)</title><rect x="26.7922%" y="325" width="71.7864%" height="15" fill="rgb(228,95,12)" fg:x="8312" fg:w="22271"/><text x="27.0422%" y="335.50">test.exe`mchess::evaluation::EvaluationResult::to_value</text></g><g><title>test.exe`mchess::evaluation::evaluate (22,269 samples, 71.78%)</title><rect x="26.7986%" y="309" width="71.7799%" height="15" fill="rgb(249,221,15)" fg:x="8314" fg:w="22269"/><text x="27.0486%" y="319.50">test.exe`mchess::evaluation::evaluate</text></g><g><title>test.exe`mchess::evaluation::evaluate_mobility (20,594 samples, 66.38%)</title><rect x="32.1977%" y="293" width="66.3809%" height="15" fill="rgb(233,34,13)" fg:x="9989" fg:w="20594"/><text x="32.4477%" y="303.50">test.exe`mchess::evaluation::evaluate_mobility</text></g><g><title>test.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (137 samples, 0.44%)</title><rect x="98.1369%" y="277" width="0.4416%" height="15" fill="rgb(214,103,39)" fg:x="30446" fg:w="137"/><text x="98.3869%" y="287.50"></text></g><g><title>test.exe`std::sys::alloc::windows::impl$0::dealloc (105 samples, 0.34%)</title><rect x="98.2401%" y="261" width="0.3384%" height="15" fill="rgb(251,126,39)" fg:x="30478" fg:w="105"/><text x="98.4901%" y="271.50"></text></g><g><title>`0x7FF8165B5EC0 (22 samples, 0.07%)</title><rect x="98.5076%" y="245" width="0.0709%" height="15" fill="rgb(214,216,36)" fg:x="30561" fg:w="22"/><text x="98.7576%" y="255.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (106 samples, 0.34%)</title><rect x="99.1684%" y="341" width="0.3417%" height="15" fill="rgb(220,221,8)" fg:x="30766" fg:w="106"/><text x="99.4184%" y="351.50"></text></g><g><title>test.exe`mchess::moves::Position::from_bitboard (8 samples, 0.03%)</title><rect x="99.5101%" y="341" width="0.0258%" height="15" fill="rgb(240,216,3)" fg:x="30872" fg:w="8"/><text x="99.7601%" y="351.50"></text></g><g><title>test.exe`core::num::impl$9::trailing_zeros (4 samples, 0.01%)</title><rect x="99.5229%" y="325" width="0.0129%" height="15" fill="rgb(232,218,17)" fg:x="30876" fg:w="4"/><text x="99.7729%" y="335.50"></text></g><g><title>test.exe`mchess::moves::helper::get_from (10 samples, 0.03%)</title><rect x="99.5358%" y="341" width="0.0322%" height="15" fill="rgb(229,163,45)" fg:x="30880" fg:w="10"/><text x="99.7858%" y="351.50"></text></g><g><title>test.exe`mchess::moves::helper::get_piece_type (10 samples, 0.03%)</title><rect x="99.5681%" y="341" width="0.0322%" height="15" fill="rgb(231,110,42)" fg:x="30890" fg:w="10"/><text x="99.8181%" y="351.50"></text></g><g><title>test.exe`mchess::moves::helper::get_to (22 samples, 0.07%)</title><rect x="99.6003%" y="341" width="0.0709%" height="15" fill="rgb(208,170,48)" fg:x="30900" fg:w="22"/><text x="99.8503%" y="351.50"></text></g><g><title>test.exe`mchess::moves::helper::is_en_passant (4 samples, 0.01%)</title><rect x="99.6712%" y="341" width="0.0129%" height="15" fill="rgb(239,116,25)" fg:x="30922" fg:w="4"/><text x="99.9212%" y="351.50"></text></g><g><title>test.exe`mchess::moves::helper::get_move_type (4 samples, 0.01%)</title><rect x="99.6712%" y="325" width="0.0129%" height="15" fill="rgb(219,200,50)" fg:x="30922" fg:w="4"/><text x="99.9212%" y="335.50"></text></g><g><title>test.exe`mchess::board::Board::update_hash(unsigned int, tuple$ (369 samples, 1.19%)</title><rect x="98.5785%" y="357" width="1.1894%" height="15" fill="rgb(245,200,0)" fg:x="30583" fg:w="369"/><text x="98.8285%" y="367.50"></text></g><g><title>test.exe`mchess::piece::Piece::index_from (25 samples, 0.08%)</title><rect x="99.6873%" y="341" width="0.0806%" height="15" fill="rgb(245,119,33)" fg:x="30927" fg:w="25"/><text x="99.9373%" y="351.50"></text></g><g><title>test.exe`mchess::piece::impl$7::eq (20 samples, 0.06%)</title><rect x="99.7035%" y="325" width="0.0645%" height="15" fill="rgb(231,125,12)" fg:x="30932" fg:w="20"/><text x="99.9535%" y="335.50"></text></g><g><title>`0x7FF814AFCDE0 (6 samples, 0.02%)</title><rect x="99.8034%" y="325" width="0.0193%" height="15" fill="rgb(216,96,41)" fg:x="30963" fg:w="6"/><text x="100.0534%" y="335.50"></text></g><g><title>`0x7FF814AFCDED (4 samples, 0.01%)</title><rect x="99.8259%" y="325" width="0.0129%" height="15" fill="rgb(248,43,45)" fg:x="30970" fg:w="4"/><text x="100.0759%" y="335.50"></text></g><g><title>test.exe`mchess::board::Board::unmake_move(tuple$ (29,807 samples, 96.08%)</title><rect x="3.7648%" y="389" width="96.0772%" height="15" fill="rgb(217,222,7)" fg:x="1168" fg:w="29807"/><text x="4.0148%" y="399.50">test.exe`mchess::board::Board::unmake_move(tuple$</text></g><g><title>test.exe`mchess::search::Search::alphabeta (29,800 samples, 96.05%)</title><rect x="3.7874%" y="373" width="96.0547%" height="15" fill="rgb(233,28,6)" fg:x="1175" fg:w="29800"/><text x="4.0374%" y="383.50">test.exe`mchess::search::Search::alphabeta</text></g><g><title>test.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (23 samples, 0.07%)</title><rect x="99.7679%" y="357" width="0.0741%" height="15" fill="rgb(231,218,15)" fg:x="30952" fg:w="23"/><text x="100.0179%" y="367.50"></text></g><g><title>test.exe`std::sys::alloc::windows::impl$0::dealloc (17 samples, 0.05%)</title><rect x="99.7873%" y="341" width="0.0548%" height="15" fill="rgb(226,171,48)" fg:x="30958" fg:w="17"/><text x="100.0373%" y="351.50"></text></g><g><title>test.exe`mchess::bitboard::Bitboard::get_piece_at (5 samples, 0.02%)</title><rect x="99.8646%" y="373" width="0.0161%" height="15" fill="rgb(235,201,9)" fg:x="30982" fg:w="5"/><text x="100.1146%" y="383.50"></text></g><g><title>test.exe`mchess::board::Board::update_hash(unsigned int, tuple$ (15 samples, 0.05%)</title><rect x="99.8421%" y="389" width="0.0483%" height="15" fill="rgb(217,80,15)" fg:x="30975" fg:w="15"/><text x="100.0921%" y="399.50"></text></g><g><title>test.exe`mchess::board::Board::unmake_move(tuple$ (30,777 samples, 99.20%)</title><rect x="0.7027%" y="421" width="99.2038%" height="15" fill="rgb(219,152,8)" fg:x="218" fg:w="30777"/><text x="0.9527%" y="431.50">test.exe`mchess::board::Board::unmake_move(tuple$</text></g><g><title>test.exe`mchess::search::Search::alphabeta (30,776 samples, 99.20%)</title><rect x="0.7059%" y="405" width="99.2006%" height="15" fill="rgb(243,107,38)" fg:x="219" fg:w="30776"/><text x="0.9559%" y="415.50">test.exe`mchess::search::Search::alphabeta</text></g><g><title>test.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (5 samples, 0.02%)</title><rect x="99.8904%" y="389" width="0.0161%" height="15" fill="rgb(231,17,5)" fg:x="30990" fg:w="5"/><text x="100.1404%" y="399.50"></text></g><g><title>test.exe`mchess::board::Board::update_hash(unsigned int, tuple$ (4 samples, 0.01%)</title><rect x="99.9065%" y="421" width="0.0129%" height="15" fill="rgb(209,25,54)" fg:x="30995" fg:w="4"/><text x="100.1565%" y="431.50"></text></g><g><title>test.exe`mchess::board::Board::unmake_move(tuple$ (30,912 samples, 99.64%)</title><rect x="0.2837%" y="453" width="99.6390%" height="15" fill="rgb(219,0,2)" fg:x="88" fg:w="30912"/><text x="0.5337%" y="463.50">test.exe`mchess::board::Board::unmake_move(tuple$</text></g><g><title>test.exe`mchess::search::Search::alphabeta (30,912 samples, 99.64%)</title><rect x="0.2837%" y="437" width="99.6390%" height="15" fill="rgb(246,9,5)" fg:x="88" fg:w="30912"/><text x="0.5337%" y="447.50">test.exe`mchess::search::Search::alphabeta</text></g><g><title>test.exe`mchess::search::Search::search (30,940 samples, 99.73%)</title><rect x="0.1966%" y="581" width="99.7292%" height="15" fill="rgb(226,159,4)" fg:x="61" fg:w="30940"/><text x="0.4466%" y="591.50">test.exe`mchess::search::Search::search</text></g><g><title>test.exe`mchess::search::Search::alphabeta (30,940 samples, 99.73%)</title><rect x="0.1966%" y="565" width="99.7292%" height="15" fill="rgb(219,175,34)" fg:x="61" fg:w="30940"/><text x="0.4466%" y="575.50">test.exe`mchess::search::Search::alphabeta</text></g><g><title>test.exe`mchess::board::Board::unmake_move(tuple$ (30,940 samples, 99.73%)</title><rect x="0.1966%" y="549" width="99.7292%" height="15" fill="rgb(236,10,46)" fg:x="61" fg:w="30940"/><text x="0.4466%" y="559.50">test.exe`mchess::board::Board::unmake_move(tuple$</text></g><g><title>test.exe`mchess::search::Search::alphabeta (30,940 samples, 99.73%)</title><rect x="0.1966%" y="533" width="99.7292%" height="15" fill="rgb(240,211,16)" fg:x="61" fg:w="30940"/><text x="0.4466%" y="543.50">test.exe`mchess::search::Search::alphabeta</text></g><g><title>test.exe`mchess::board::Board::unmake_move(tuple$ (30,939 samples, 99.73%)</title><rect x="0.1998%" y="517" width="99.7260%" height="15" fill="rgb(205,3,43)" fg:x="62" fg:w="30939"/><text x="0.4498%" y="527.50">test.exe`mchess::board::Board::unmake_move(tuple$</text></g><g><title>test.exe`mchess::search::Search::alphabeta (30,939 samples, 99.73%)</title><rect x="0.1998%" y="501" width="99.7260%" height="15" fill="rgb(245,7,22)" fg:x="62" fg:w="30939"/><text x="0.4498%" y="511.50">test.exe`mchess::search::Search::alphabeta</text></g><g><title>test.exe`mchess::board::Board::unmake_move(tuple$ (30,935 samples, 99.71%)</title><rect x="0.2127%" y="485" width="99.7131%" height="15" fill="rgb(239,132,32)" fg:x="66" fg:w="30935"/><text x="0.4627%" y="495.50">test.exe`mchess::board::Board::unmake_move(tuple$</text></g><g><title>test.exe`mchess::search::Search::alphabeta (30,935 samples, 99.71%)</title><rect x="0.2127%" y="469" width="99.7131%" height="15" fill="rgb(228,202,34)" fg:x="66" fg:w="30935"/><text x="0.4627%" y="479.50">test.exe`mchess::search::Search::alphabeta</text></g><g><title>`0x7FF81735CC91 (31,000 samples, 99.92%)</title><rect x="0.0064%" y="789" width="99.9226%" height="15" fill="rgb(254,200,22)" fg:x="2" fg:w="31000"/><text x="0.2564%" y="799.50">`0x7FF81735CC91</text></g><g><title>`0x7FF8165B7344 (31,000 samples, 99.92%)</title><rect x="0.0064%" y="773" width="99.9226%" height="15" fill="rgb(219,10,39)" fg:x="2" fg:w="31000"/><text x="0.2564%" y="783.50">`0x7FF8165B7344</text></g><g><title>test.exe`__scrt_common_main_seh() (30,992 samples, 99.90%)</title><rect x="0.0322%" y="757" width="99.8969%" height="15" fill="rgb(226,210,39)" fg:x="10" fg:w="30992"/><text x="0.2822%" y="767.50">test.exe`__scrt_common_main_seh()</text></g><g><title>test.exe`invoke_main() (30,984 samples, 99.87%)</title><rect x="0.0580%" y="741" width="99.8711%" height="15" fill="rgb(208,219,16)" fg:x="18" fg:w="30984"/><text x="0.3080%" y="751.50">test.exe`invoke_main()</text></g><g><title>test.exe`main (30,984 samples, 99.87%)</title><rect x="0.0580%" y="725" width="99.8711%" height="15" fill="rgb(216,158,51)" fg:x="18" fg:w="30984"/><text x="0.3080%" y="735.50">test.exe`main</text></g><g><title>test.exe`std::rt::lang_start_internal (30,984 samples, 99.87%)</title><rect x="0.0580%" y="709" width="99.8711%" height="15" fill="rgb(233,14,44)" fg:x="18" fg:w="30984"/><text x="0.3080%" y="719.50">test.exe`std::rt::lang_start_internal</text></g><g><title>test.exe`std::panic::catch_unwind (30,984 samples, 99.87%)</title><rect x="0.0580%" y="693" width="99.8711%" height="15" fill="rgb(237,97,39)" fg:x="18" fg:w="30984"/><text x="0.3080%" y="703.50">test.exe`std::panic::catch_unwind</text></g><g><title>test.exe`std::panicking::try (30,984 samples, 99.87%)</title><rect x="0.0580%" y="677" width="99.8711%" height="15" fill="rgb(218,198,43)" fg:x="18" fg:w="30984"/><text x="0.3080%" y="687.50">test.exe`std::panicking::try</text></g><g><title>test.exe`std::panicking::try::do_call (30,984 samples, 99.87%)</title><rect x="0.0580%" y="661" width="99.8711%" height="15" fill="rgb(231,104,20)" fg:x="18" fg:w="30984"/><text x="0.3080%" y="671.50">test.exe`std::panicking::try::do_call</text></g><g><title>test.exe`std::rt::lang_start_internal::closure$0 (30,984 samples, 99.87%)</title><rect x="0.0580%" y="645" width="99.8711%" height="15" fill="rgb(254,36,13)" fg:x="18" fg:w="30984"/><text x="0.3080%" y="655.50">test.exe`std::rt::lang_start_internal::closure$0</text></g><g><title>test.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (30,984 samples, 99.87%)</title><rect x="0.0580%" y="629" width="99.8711%" height="15" fill="rgb(248,14,50)" fg:x="18" fg:w="30984"/><text x="0.3080%" y="639.50">test.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$</text></g><g><title>test.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (30,984 samples, 99.87%)</title><rect x="0.0580%" y="613" width="99.8711%" height="15" fill="rgb(217,107,29)" fg:x="18" fg:w="30984"/><text x="0.3080%" y="623.50">test.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>test.exe`test::main (30,984 samples, 99.87%)</title><rect x="0.0580%" y="597" width="99.8711%" height="15" fill="rgb(251,169,33)" fg:x="18" fg:w="30984"/><text x="0.3080%" y="607.50">test.exe`test::main</text></g><g><title>`0x7FF81732FB31 (5 samples, 0.02%)</title><rect x="99.9420%" y="693" width="0.0161%" height="15" fill="rgb(217,108,32)" fg:x="31006" fg:w="5"/><text x="100.1920%" y="703.50"></text></g><g><title>`0x7FF81737C2FD (5 samples, 0.02%)</title><rect x="99.9420%" y="677" width="0.0161%" height="15" fill="rgb(219,66,42)" fg:x="31006" fg:w="5"/><text x="100.1920%" y="687.50"></text></g><g><title>`0x7FF817324479 (5 samples, 0.02%)</title><rect x="99.9420%" y="661" width="0.0161%" height="15" fill="rgb(206,180,7)" fg:x="31006" fg:w="5"/><text x="100.1920%" y="671.50"></text></g><g><title>`0x7FF817324C14 (4 samples, 0.01%)</title><rect x="99.9452%" y="645" width="0.0129%" height="15" fill="rgb(208,226,31)" fg:x="31007" fg:w="4"/><text x="100.1952%" y="655.50"></text></g><g><title>`0x7FF8173E384E (8 samples, 0.03%)</title><rect x="99.9420%" y="741" width="0.0258%" height="15" fill="rgb(218,26,49)" fg:x="31006" fg:w="8"/><text x="100.1920%" y="751.50"></text></g><g><title>`0x7FF817326AF4 (8 samples, 0.03%)</title><rect x="99.9420%" y="725" width="0.0258%" height="15" fill="rgb(233,197,48)" fg:x="31006" fg:w="8"/><text x="100.1920%" y="735.50"></text></g><g><title>`0x7FF8173273E4 (8 samples, 0.03%)</title><rect x="99.9420%" y="709" width="0.0258%" height="15" fill="rgb(252,181,51)" fg:x="31006" fg:w="8"/><text x="100.1920%" y="719.50"></text></g><g><title>`0x7FF817385DFB (21 samples, 0.07%)</title><rect x="99.9291%" y="757" width="0.0677%" height="15" fill="rgb(253,90,19)" fg:x="31002" fg:w="21"/><text x="100.1791%" y="767.50"></text></g><g><title>all (31,024 samples, 100%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(215,171,30)" fg:x="0" fg:w="31024"/><text x="0.2500%" y="815.50"></text></g><g><title>`0x7FF817385C2E (22 samples, 0.07%)</title><rect x="99.9291%" y="789" width="0.0709%" height="15" fill="rgb(214,222,9)" fg:x="31002" fg:w="22"/><text x="100.1791%" y="799.50"></text></g><g><title>`0x7FF817385C83 (22 samples, 0.07%)</title><rect x="99.9291%" y="773" width="0.0709%" height="15" fill="rgb(223,3,22)" fg:x="31002" fg:w="22"/><text x="100.1791%" y="783.50"></text></g></svg></svg>